#!/usr/bin/sh
## Part of mooOS-dev-tools - https://github.com/idk/mooOS-dev-tools
## pdq 08-13-2013
## License: GPL3

## Script variables (you should change these)
MOO_HOME="/home/pdq/"
REPO_BASE_DIR="/mnt/linux-pdq/media/truecrypt1/domains/mooOS/"
#REPO_BASE_URL="http://repo.mooos.pdq/"
ABS_BASE_DIR="${MOO_HOME}abs/"
REPO_LOG_TEMP="/tmp/repo_renew"
REPO_LOG="${ABS_BASE_DIR}update.log"
ISO_DIR="/media/truecrypt3/mooOS/out"   # iso
WORK_DIR="/media/truecrypt3/mooOS/work" # work

# Text color variables (there is no need change these)
txtbld=$(tput bold)                # bold
bldred=${txtbld}$(tput setaf 1)    # red
bldyellow=${txtbld}$(tput setaf 3) # yellow
txtrst=$(tput sgr0)                # reset

# Build settings (you chould change these)
ISO_NAME=mooOS
ISO_LABEL="mooOS_$(date +%Y%m)"
ISO_VERSION="$(date +%Y.%m.%d)-alpha-0.7" ## 0.7

# Functions
ask_something() {
	echo -ne $question
	while read -r -n 1 -s yn; do
		if [[ $yn = [YyNn] ]]; then
			[[ $yn = [Yy] ]] && return=0
			[[ $yn = [Nn] ]] && return=1
			break
		fi
	done
	return $return
}

## root script
if [ $(id -u) -eq 0 ]; then
	question="${bldyellow}Have you ran this script as USER 1st? You wish to  make iso (Y/N)?\n${txtrst}"
	if ask_something; then
		question="${bldyellow}You wish to skip to create iso (Y/N)? (default: no)\n${txtrst}"
		if ! ask_something; then
			# copy root files
			cp -v /etc/psd.conf ${MOO_HOME}archlive/releng/root-image/etc/psd.conf
			cp -v ${MOO_HOME}info/images/nude.jpg ${MOO_HOME}archlive/releng/syslinux/splash.png
			# copy over ~/bin
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/bin
			cp -vr ${MOO_HOME}bin/* ${MOO_HOME}archlive/releng/root-image/etc/skel/bin
			# copy over pentadactyl files
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.pentadactyl/colors
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.pentadactyl/plugins
			cp -vr ${MOO_HOME}.pentadactyl/colors/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.pentadactyl/colors
			cp -vr ${MOO_HOME}.pentadactyl/plugins/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.pentadactyl/plugins
			# copy over rss reader files
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.canto-ng
			cp -v ${MOO_HOME}.canto-ng/config ${MOO_HOME}archlive/releng/root-image/etc/skel/.canto-ng/config
			# copy over firefox files
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.mozilla/firefox/qrtww0pl.Default-User
			cp -vr ${MOO_HOME}.mozilla/firefox/qrtww0pl.Default-User/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.mozilla/firefox/qrtww0pl.Default-User
			# copy over ~/.local files
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.local/applications
			cp -v ${MOO_HOME}.local/applications/defaults.list ${MOO_HOME}archlive/releng/root-image/etc/skel/.local/applications/defaults.list
			cp -v ${MOO_HOME}.local/applications/tabbed.desktop ${MOO_HOME}archlive/releng/root-image/etc/skel/.local/applications/tabbed.desktop
			cp -v ${MOO_HOME}.local/applications/URxvt.desktop ${MOO_HOME}archlive/releng/root-image/etc/skel/.local/applications/URxvt.desktop
			# copy over ~/.* (dotfiles)
			cp -v ${MOO_HOME}.Xdefaults ${MOO_HOME}archlive/releng/root-image/etc/skel/.Xdefaults
			cp -v ${MOO_HOME}.xinitrc ${MOO_HOME}archlive/releng/root-image/etc/skel/.xinitrc
			cp -v ${MOO_HOME}.zshrc ${MOO_HOME}archlive/releng/root-image/etc/skel/.zshrc
			cp -v ${MOO_HOME}.gtkrc-2.0 ${MOO_HOME}archlive/releng/root-image/etc/skel/.gtkrc-2.0
			cp -v ${MOO_HOME}.nanorc ${MOO_HOME}archlive/releng/root-image/etc/skel/.nanorc
			cp -v ${MOO_HOME}.dialogrc ${MOO_HOME}archlive/releng/root-image/etc/skel/.dialogrc
			cp -v ${MOO_HOME}.pentadactylrc ${MOO_HOME}archlive/releng/root-image/etc/skel/.pentadactylrc
			# copy over ~/.themes
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.themes/Black
			cp -vr ${MOO_HOME}.themes/Black/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.themes/Black
			# copy over ~/.fonts
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.fonts
			cp -vr ${MOO_HOME}.fonts/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.fonts
			# copy over kde files
			mkdir -vp  ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/apps/color-schemes
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/apps/kdenlive
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/apps/dolphin/view_properties/global
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/config
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/kde4/services/ServiceMenus
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/apps/konsole
			cp -vr ${MOO_HOME}.kde4/share/apps/color-schemes/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/apps/color-schemes
			cp -v ${MOO_HOME}.kde4/share/apps/kdenlive/kdenliveui.rc ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/apps/kdenlive/kdenliveui.rc
			cp -v ${MOO_HOME}info/kdenliveuirc ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/config/kdenliveuirc
			cp -v ${MOO_HOME}info/..directory ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/apps/dolphin/view_properties/global/.directory
			cp -v ${MOO_HOME}.kde4/share/config/startupconfig ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/config/startupconfig
			cp -v ${MOO_HOME}.kde4/share/config/konsolerc ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/config/konsolerc
 			cp -v ${MOO_HOME}.kde4/share/config/kservicemenurc ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/config/kservicemenurc 
			cp -vr ${MOO_HOME}.kde4/share/kde4/services/ServiceMenus/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/kde4/services/ServiceMenus
			cp -vr ${MOO_HOME}.kde4/share/apps/konsole/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/apps/konsole
			cp -v ${MOO_HOME}.kde4/share/config/dolphinrc ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/config/dolphinrc
			cp -v ${MOO_HOME}.kde4/share/apps/dolphin/dolphinui.rc ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/apps/dolphin/dolphinui.rc

			# copy over transmission file
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/transmission-daemon
			cp -v ${MOO_HOME}info/settings.json ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/transmission-daemon/settings.json

			# copy lxtask config
			cp -v ${MOO_HOME}.config/lxtask.conf ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/lxtask.conf

			# copy pavucontrol config
			cp -v ${MOO_HOME}.config/pavucontrol.ini ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/pavucontrol.ini

			# copy over mocp file
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.moc
			cp -v ${MOO_HOME}.moc/config ${MOO_HOME}archlive/releng/root-image/etc/skel/.moc/config

			# copy htop file
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/htop
			cp -v ${MOO_HOME}.config/htop/htoprc ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/htop/htoprc

			#copy sublime text 3 files
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/sublime-text-3/Packages/User
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/sublime-text-3/Packages/Theme\ -\ Nil
			cp -vr ${MOO_HOME}.config/sublime-text-3/Packages/Theme\ -\ Nil/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/sublime-text-3/Packages/Theme\ -\ Nil/
			cp -v ${MOO_HOME}.config/sublime-text-3/Packages/User/Preferences.sublime-settings ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/sublime-text-3/Packages/User/Preferences.sublime-settings

			# copy vlc files
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/vlc
			cp -v ${MOO_HOME}info/vlc-qt-interface.conf ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/vlc/vlc-qt-interface.conf
			cp -v ${MOO_HOME}.config/vlc/vlcrc ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/vlc/vlcrc

			# copy over window manager files
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/applications
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/backgrounds
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/config
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/themes
			cp -vr ${MOO_HOME}.e/e/applications/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/applications
			cp -vr ${MOO_HOME}.e/e/backgrounds/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/backgrounds
			cp -vr ${MOO_HOME}.e/e/config/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/config
			cp -vr ${MOO_HOME}.e/e/themes/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/themes

			# clean up files content
			sed -i "s/pdq/moo/g" ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/transmission-daemon/settings.json
			sed -i "s/pdq/moo/g" ${MOO_HOME}archlive/releng/root-image/etc/skel/.moc/config
			sed -i "s/pdq/moo/g" ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/config/dolphinrc
			sed -i "s/pdq/moo/g" ${MOO_HOME}archlive/releng/root-image/etc/psd.conf 
			
			# copy over hosts file (needed for LAN repos) TODO
			cp -v /etc/hosts ${MOO_HOME}archlive/releng/root-image/etc/hosts

			# mooOS stuffs
		 	mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/Desktop
		 	mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/Dev
		 	mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/Downloads
		 	mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/Videos
		 	mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/Dropbox
		 	mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/Github
		 	mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/Music
		 	mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/Pictures

		 	# cleanup file permissions
			chmod -v -R g+r,o+r ${MOO_HOME}archlive/releng/root-image/etc/skel

		 	cp -v ${MOO_HOME}Desktop/Desktop.* ${MOO_HOME}archlive/releng/root-image/etc/skel/Desktop/
		 	cp -v ${MOO_HOME}info/Dev.* ${MOO_HOME}archlive/releng/root-image/etc/skel/Dev/
		 	cp -v ${MOO_HOME}Downloads/Downloads.* ${MOO_HOME}archlive/releng/root-image/etc/skel/Downloads/
		 	cp -v ${MOO_HOME}Videos/Videos.* ${MOO_HOME}archlive/releng/root-image/etc/skel/Videos/
		 	cp -v ${MOO_HOME}Dropbox/Dropbox.* ${MOO_HOME}archlive/releng/root-image/etc/skel/Dropbox/
		 	cp -v ${MOO_HOME}github/Github.* ${MOO_HOME}archlive/releng/root-image/etc/skel/Github/
		 	cp -v ${MOO_HOME}Music/Music.* ${MOO_HOME}archlive/releng/root-image/etc/skel/Music/
		 	cp -v ${MOO_HOME}Pictures/Pictures.* ${MOO_HOME}archlive/releng/root-image/etc/skel/Pictures/

		 	# cleanup file permissions
			chmod -v -R g+r,o+r ${MOO_HOME}archlive/releng/root-image/etc/skel

			# create ~/Github and all repos
			PWD=$(pwd)
	 		cd ${MOO_HOME}archlive/releng/root-image/etc/skel/Github
			git clone git://github.com/idk/pdq.git
			git clone git://github.com/idk/bin.git
			git clone git://github.com/idk/awesomewm-X.git
			git clone git://github.com/idk/conky-X.git
			git clone git://github.com/idk/zsh.git
			git clone git://github.com/idk/bin.git
			git clone git://github.com/idk/php.git
			git clone git://github.com/idk/systemd.git
			git clone git://github.com/idk/eggdrop-scripts.git
			git clone git://github.com/idk/gh.git
			git clone git://github.com/idk/mooOS-dev-tools.git
			git clone git://github.com/idk/mooOS-wallpapers.git
			cd "$PWD"

			# preserve wallpapers
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/Github/sources/backgrounds
			cp -vr usr/share/backgrounds/* ${MOO_HOME}archlive/releng/root-image/etc/skel/Github/sources/backgrounds

			# cleanup file permissions / why not
			chmod -v -R g+r,o+r ${MOO_HOME}archlive/releng/root-image/etc/skel

			echo "${bldyellow}Removing previous build and work directories...${txtrst}"
			## deprecated method
			if [ -d "${MOO_HOME}archlive/releng/work" ]; then
				rm -r ${MOO_HOME}archlive/releng/work
			fi
			# if [ -d "${MOO_HOME}archlive/releng/out" ]; then
			# 	rm -r ${MOO_HOME}archlive/releng/out
			# fi

			## new method
			if [ -d "$ISO_DIR" ]; then
				rm -r "$ISO_DIR"
			fi
			if [ -d "$WORK_DIR" ]; then
				rm -r "$WORK_DIR"
			fi

			# create pacman.conf for build
			mkdir -v "$WORK_DIR" && cp ${MOO_HOME}info/pacman.conf ${WORK_DIR}/pacman.conf
			mkdir -v "${MOO_HOME}archlive/releng/work" && cp ${MOO_HOME}info/pacman.conf ${MOO_HOME}archlive/releng/work/pacman.conf
		fi

		echo "${bldred}Building iso now...${txtrst}"

		# change to build directory
		cd ${MOO_HOME}archlive/releng
		 ./build.sh -v -o "$ISO_DIR" -w "$WORK_DIR" -N "$ISO_NAME" -V "$ISO_VERSION" -L "$ISO_LABEL"
	fi
else
	## push latest code to github
	gh -b ## https://github.com/idk/gh
	echo "${bldyellow}Copying configuration files and recreating repos now...${txtrst}"

	## remove existing repos
	rm -v ${ABS_BASE_DIR}mooOS-pkgs-32/mooOS-pkgs-32.db.tar.gz
	rm -v ${ABS_BASE_DIR}mooOS-pkgs-64/mooOS-pkgs-64.db.tar.gz
	#rm ${ABS_BASE_DIR}mooOS-utils/mooOS-utils.db.tar.gz

	## create repo databases
	echo "${bldyellow}Re-creating i686 repository${txtrst}"
	repo-add ${ABS_BASE_DIR}mooOS-pkgs-32/mooOS-pkgs-32.db.tar.gz ${ABS_BASE_DIR}mooOS-pkgs-32/*.pkg.tar.xz
	echo "${bldyellow}Re-creating x86_64 repository${txtrst}"
	repo-add ${ABS_BASE_DIR}mooOS-pkgs-64/mooOS-pkgs-64.db.tar.gz ${ABS_BASE_DIR}mooOS-pkgs-64/*.pkg.tar.xz
	#echo "${bldyellow}Re-creating utils repository${txtrst}"
	#repo-add ${ABS_BASE_DIR}mooOS-utils/mooOS-utils.db.tar.gz ${ABS_BASE_DIR}mooOS-pkgs-64/*.pkg.tar.xz >> $REPO_LOG_TEMP 2>&1

	## format log a little
	echo $(date -d "today" +"%Y%m%d%H%M") >> $REPO_LOG
	sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g" $REPO_LOG_TEMP >> $REPO_LOG

	## clean up stable repos
	if [ -d "${ABS_BASE_DIR}mooOS-pkgs-32-out-of-date" ]; then
		rm -vr ${ABS_BASE_DIR}mooOS-pkgs-32-out-of-date
	fi
	if [ -d "${ABS_BASE_DIR}mooOS-pkgs-64-out-of-date" ]; then
		rm -vr ${ABS_BASE_DIR}mooOS-pkgs-64-out-of-date
	fi

	# re-create repos local and remote
	mv -v ${REPO_BASE_DIR}mooOS-pkgs-32 ${ABS_BASE_DIR}mooOS-pkgs-32-out-of-date
	mv -v ${REPO_BASE_DIR}mooOS-pkgs-64 ${ABS_BASE_DIR}mooOS-pkgs-64-out-of-date
	#mv ${REPO_BASE_DIR}mooOS-utils ${ABS_BASE_DIR}mooOS-utils-out-of-date
	cp -vr ${ABS_BASE_DIR}mooOS-pkgs-32 ${REPO_BASE_DIR}mooOS-pkgs-32
	cp -vr ${ABS_BASE_DIR}mooOS-pkgs-64 ${REPO_BASE_DIR}mooOS-pkgs-64
	#cp -vr ${ABS_BASE_DIR}mooOS-utils ${REPO_BASE_DIR}mooOS-utils

	notify-send "Repo update complete"

	echo "${bldyellow}Now re-run this script as root!${txtrst}"
	sleep 3s
fi

exit 0
