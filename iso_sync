#!/usr/bin/bash
## Part of mooOS-dev-tools - https://github.com/idk/mooOS-dev-tools
## pdq 08-13-2013 - PRESENT
## License: GPL3

## This script is run as $USER then following that as root
## This script creates the mooOS livecd ISO image file

## Script variables (you should change these)
MOO_USER=pdq
MOO_HOME="/home/$MOO_USER/"
REPO_BASE_DIR="/mnt/linux-pdq/media/truecrypt1/domains/mooOS"
#REPO_BASE_URL="http://repo.mooos.pdq/"
ABS_BASE_DIR="${MOO_HOME}abs/"
REPO_LOG_TEMP="/tmp/repo_renew"
REPO_LOG="${ABS_BASE_DIR}update.log"
CURRENTHASH="${ABS_BASE_DIR}mooOS.md5sum"
OLDHASH="${ABS_BASE_DIR}mooOS.md5sum.old"
CURRENTNAME="${ABS_BASE_DIR}mooOS.name"
OLDNAME="${ABS_BASE_DIR}mooOS.name.old"
ISO_DIR="/media/truecrypt3/mooOS/out"   # iso
WORK_DIR="/media/truecrypt3/mooOS/work" # work
ISO_STORAGE="/mnt/linux-pdq/media/truecrypt1/Down"

GPGKEY=$(cat ${MOO_HOME}.gnupg/private_key_include) ## change this and put key in the file

# path to remote repo credentials file
REPO_CREDS=/mnt/linux-pdq/media/truecrypt1/private/repo_creds
## BEGIN EXAMPLE of repo_creds
#  #!/bin/sh

# _remote_count=2
# _now=$(date +"%m_%d_%Y")

# #32-local -> 32-remote
# _remote1[1]=22 # port
# _remote1[2]="/home/pdq/abs/mooOS-pkgs-32"
# _remote1[3]="example@127.0.0.1:/path/to/mooOS/public_html/repos"
# _remote1[4]="--delete --stats"

# #64-local -> 64-remote
# _remote2[1]=22 # port
# _remote2[2]="/home/pdq/abs/mooOS-pkgs-64"
# _remote2[3]="example@127.0.0.1:/path/to/mooOS/public_html/repos"
# _remote2[4]="--delete --stats"

# #iso-local -> iso-remote
# _iso_sync[1]=22
# _iso_sync[2]="/media/truecrypt3/mooOS/out/${_iso_label}*.iso"
# _iso_sync[3]="example@127.0.0.1:/var/www/mooOS"
# _iso_sync[4]="--stats"

## End remote rsyncs
## END EXAMPLE of repo_creds


# Build settings (you chould change these)
ISO_NAME=mooOS
ISO_LABEL="$ISO_NAME_$(date +%Y%m)"
ISO_VERSION="$(date +%Y.%m.%d)-beta-1.2" ## 0.97


# Text color variables (there is no need change these)
txtbld=$(tput bold)                # bold
bldred=${txtbld}$(tput setaf 1)    # red
bldyellow=${txtbld}$(tput setaf 3) # yellow
txtrst=$(tput sgr0)                # reset


## DO NOT EDIT BELOW UNLESS YOU KNOW WHAT YOURE DOING ##

## generic yes/no function
ask_something() {
	echo -ne $question
	while read -r -n 1 -s yn; do
		if [[ $yn = [YyNn] ]]; then
			[[ $yn = [Yy] ]] && return=0
			[[ $yn = [Nn] ]] && return=1
			break
		fi
	done
	return $return
}

## root script
if [ $(id -u) -eq 0 ]; then
	question="${bldyellow}Have you ran this script as USER 1st? You wish to  make iso (Y/N)?\n${txtrst}"
	if ask_something; then
		question="${bldyellow}You wish to skip to create iso (Y/N)? (default: no)\n${txtrst}"
		if ! ask_something; then
			PWD=$(pwd)

			## copy root files
			## profile-sync-daemon
			cp -v /etc/psd.conf ${MOO_HOME}archlive/releng/root-image/etc/psd.conf
			## resolv.conf
			cp -v /etc/resolv.conf ${MOO_HOME}archlive/releng/root-image/etc/resolv.conf
			## resolv.conf.head
			cp -v /etc/resolv.conf.head ${MOO_HOME}archlive/releng/root-image/etc/resolv.conf.head
			## dnsmasq
			cp -v /etc/dnsmasq.conf ${MOO_HOME}archlive/releng/root-image/etc/dnsmasq.conf
			## dhcpcd
			cp -v /etc/dhcpcd.conf ${MOO_HOME}archlive/releng/root-image/etc/dhcpcd.conf
			## nano config
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/usr/share/nano
			cp -v /usr/share/nano/pkgbuild.nanorc ${MOO_HOME}archlive/releng/root-image//usr/share/nano/pkgbuild.nanorc
			## e17 backgrounds
			cp -v /usr/share/enlightenment/data/backgrounds/* ${MOO_HOME}archlive/releng/root-image/usr/share/enlightenment/data/backgrounds
			## tor config
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/tor
			cp -v /etc/torrc ${MOO_HOME}archlive/releng/root-image/etc/tor/torrc
			## privoxy config
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/privoxy
			sh -c "echo 'forward-socks5 / localhost:9050 .' > ${MOO_HOME}archlive/releng/root-image/etc/privoxy/config"
			## dansguardian config
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/dansguardian
			cp -v /etc/dansguardian/dansguardian.conf ${MOO_HOME}archlive/releng/root-image/etc/dansguardian/dansguardian.conf
			## squid config
			#mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/squid
			#cp -v /etc/squid/squid.conf ${MOO_HOME}archlive/releng/root-image/etc/squid/squid.conf

			## TODO
			#mv -v /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.bak
			#cp -v ${dev_directory}etc/httpd.conf /etc/httpd/conf/httpd.conf
			#cp -v ${dev_directory}etc/httpd-phpmyadmin.conf /etc/httpd/conf/extra/httpd-phpmyadmin.conf
			#mv -v /etc/php/php.ini /etc/php/php.ini.bak
			#cp -v ${dev_directory}etc/php.ini /etc/php/php.ini

			## copy over custom .desktop files
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/usr/share/applications
			cp -v ${MOO_HOME}github/mooOS-dev-tools/applications/*.desktop ${MOO_HOME}archlive/releng/root-image/usr/share/applications/
			## copy over ~/bin
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/bin
			cp -vr ${MOO_HOME}bin/* ${MOO_HOME}archlive/releng/root-image/etc/skel/bin
			## copy over pentadactyl files
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.pentadactyl/colors
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.pentadactyl/plugins
			cp -vr ${MOO_HOME}.pentadactyl/colors/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.pentadactyl/colors
			cp -vr ${MOO_HOME}.pentadactyl/plugins/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.pentadactyl/plugins
			## copy over rss reader files
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.canto-ng
			cp -v ${MOO_HOME}.canto-ng/config ${MOO_HOME}archlive/releng/root-image/etc/skel/.canto-ng/config
			## copy over firefox files
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.mozilla/firefox/qrtww0pl.Default-User
			cp -vr ${MOO_HOME}.mozilla/firefox/qrtww0pl.Default-User/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.mozilla/firefox/qrtww0pl.Default-User
			## copy over ~/.local files
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.local/applications
			cp -v ${MOO_HOME}.local/applications/defaults.list ${MOO_HOME}archlive/releng/root-image/etc/skel/.local/applications/defaults.list
			cp -v ${MOO_HOME}.local/applications/tabbed.desktop ${MOO_HOME}archlive/releng/root-image/etc/skel/.local/applications/tabbed.desktop
			cp -v ${MOO_HOME}.local/applications/URxvt.desktop ${MOO_HOME}archlive/releng/root-image/etc/skel/.local/applications/URxvt.desktop
			cp -v ${MOO_HOME}.local/applications/install_mooOS.desktop ${MOO_HOME}archlive/releng/root-image/etc/skel/.local/applications/install_mooOS.desktop
			cp -v ${MOO_HOME}.local/applications/man_mooOS.desktop ${MOO_HOME}archlive/releng/root-image/etc/skel/.local/applications/man_mooOS.desktop
			## copy over ~/.* (dotfiles)
			cp -v ${MOO_HOME}.Xdefaults ${MOO_HOME}archlive/releng/root-image/etc/skel/.Xdefaults
			cp -v ${MOO_HOME}.xinitrc ${MOO_HOME}archlive/releng/root-image/etc/skel/.xinitrc
			cp -v ${MOO_HOME}.zshrc ${MOO_HOME}archlive/releng/root-image/etc/skel/.zshrc
			cp -v ${MOO_HOME}.gtkrc-2.0 ${MOO_HOME}archlive/releng/root-image/etc/skel/.gtkrc-2.0
			cp -v ${MOO_HOME}.nanorc ${MOO_HOME}archlive/releng/root-image/etc/skel/.nanorc
			cp -v ${MOO_HOME}.dialogrc ${MOO_HOME}archlive/releng/root-image/etc/skel/.dialogrc
			cp -v ${MOO_HOME}.pentadactylrc ${MOO_HOME}archlive/releng/root-image/etc/skel/.pentadactylrc			
			cp -v ${MOO_HOME}.dialogrc ${MOO_HOME}archlive/releng/root-image/etc/skel/.dialogrc
			cp -v ${MOO_HOME}.wgetrc ${MOO_HOME}archlive/releng/root-image/etc/skel/.wgetrc
			cp -v ${MOO_HOME}.curlrc ${MOO_HOME}archlive/releng/root-image/etc/skel/.curlrc
			## copy over ~/.themes
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.themes/Black
			cp -vr ${MOO_HOME}.themes/Black/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.themes/Black
			## copy over ~/.fonts
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.fonts
			cp -vr ${MOO_HOME}.fonts/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.fonts
			## copy over kde files
			mkdir -vp  ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/apps/color-schemes
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/apps/kdenlive
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/apps/dolphin/view_properties/global
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/config
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/kde4/services/ServiceMenus
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/apps/konsole
			cp -vr ${MOO_HOME}.kde4/share/apps/color-schemes/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/apps/color-schemes
			cp -v ${MOO_HOME}.kde4/share/apps/kdenlive/kdenliveui.rc ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/apps/kdenlive/kdenliveui.rc
			cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/kdenliveuirc ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/config/kdenliveuirc
			cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/..directory ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/apps/dolphin/view_properties/global/.directory
			cp -v ${MOO_HOME}.kde4/share/config/startupconfig ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/config/startupconfig
			cp -v ${MOO_HOME}.kde4/share/config/konsolerc ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/config/konsolerc
 			cp -v ${MOO_HOME}.kde4/share/config/kservicemenurc ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/config/kservicemenurc 
			cp -vr ${MOO_HOME}.kde4/share/kde4/services/ServiceMenus/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/kde4/services/ServiceMenus
			cp -vr ${MOO_HOME}.kde4/share/apps/konsole/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/apps/konsole
			cp -v ${MOO_HOME}.kde4/share/config/dolphinrc ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/config/dolphinrc
			cp -v ${MOO_HOME}.kde4/share/apps/dolphin/dolphinui.rc ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/apps/dolphin/dolphinui.rc
			
			## copy over ~/.gnupg
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.gnupg
			cp -v ${MOO_HOME}.gnupg/gpg-agent.conf ${MOO_HOME}archlive/releng/root-image/etc/skel/.gnupg/gpg-agent.conf
			cp -v ${MOO_HOME}.gnupg/gpg.conf ${MOO_HOME}archlive/releng/root-image/etc/skel/.gnupg/gpg.conf

			## copy over transmission file
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/transmission-daemon
			cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/settings.json ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/transmission-daemon/settings.json
			## copy over key-mon config
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/key-mon
			cp -v ${MOO_HOME}.config/key-mon/config ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/key-mon/config
			## copy lxtask config
			cp -v ${MOO_HOME}.config/lxtask.conf ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/lxtask.conf
			## copy pavucontrol config
			cp -v ${MOO_HOME}.config/pavucontrol.ini ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/pavucontrol.ini
			## copy over mocp file
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.moc
			cp -v ${MOO_HOME}.moc/config ${MOO_HOME}archlive/releng/root-image/etc/skel/.moc/config
			## copy htop file
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/htop
			cp -v ${MOO_HOME}.config/htop/htoprc ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/htop/htoprc
			## copy sublime text 3 files
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/sublime-text-3/Packages/User
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/sublime-text-3/Packages/Theme\ -\ Nil
			cp -vr ${MOO_HOME}.config/sublime-text-3/Packages/Theme\ -\ Nil/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/sublime-text-3/Packages/Theme\ -\ Nil/
			cp -v ${MOO_HOME}.config/sublime-text-3/Packages/User/Preferences.sublime-settings ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/sublime-text-3/Packages/User/Preferences.sublime-settings
			## https://github.com/dmatarazzo/Sublime-Text-2-Icon
			echo "Updating Sublime Text 3 icons"
			cp -v /usr/share/icons/HighContrast/16x16/apps/sublime-text.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/HighContrast/16x16/apps/sublime-text.png
			cp -v /usr/share/icons/HighContrast/256x256/apps/sublime-text.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/HighContrast/256x256/apps/sublime-text.png
			cp -v /usr/share/icons/HighContrast/32x32/apps/sublime-text.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/HighContrast/32x32/apps/sublime-text.png
			cp -v /usr/share/icons/HighContrast/48x48/apps/sublime-text.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/HighContrast/48x48/apps/sublime-text.png
			cp -v /usr/share/icons/gnome/16x16/apps/sublime-text.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/gnome/16x16/apps/sublime-text.png
			cp -v /usr/share/icons/gnome/256x256/apps/sublime-text.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/gnome/256x256/apps/sublime-text.png
			cp -v /usr/share/icons/gnome/32x32/apps/sublime-text.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/gnome/32x32/apps/sublime-text.png
			cp -v /usr/share/icons/gnome/48x48/apps/sublime-text.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/gnome/48x48/apps/sublime-text.png
			cp -v /usr/share/icons/hicolor/128x128/apps/sublime-text.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/hicolor/128x128/apps/sublime-text.png
			cp -v /usr/share/icons/hicolor/16x16/apps/sublime-text.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/hicolor/16x16/apps/sublime-text.png
			cp -v /usr/share/icons/hicolor/256x256/apps/sublime-text.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/hicolor/256x256/apps/sublime-text.png
			cp -v /usr/share/icons/hicolor/32x32/apps/sublime-text.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/hicolor/32x32/apps/sublime-text.png
			cp -v /usr/share/icons/hicolor/48x48/apps/sublime-text.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/hicolor/48x48/apps/sublime-text.png
			cp -v /usr/share/icons/oxygen/128x128/apps/sublime-text.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/oxygen/128x128/apps/sublime-text.png
			cp -v /usr/share/icons/oxygen/16x16/apps/sublime-text.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/oxygen/16x16/apps/sublime-text.png
			cp -v /usr/share/icons/oxygen/256x256/apps/sublime-text.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/oxygen/256x256/apps/sublime-text.png
			cp -v /usr/share/icons/oxygen/32x32/apps/sublime-text.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/oxygen/32x32/apps/sublime-text.png
			cp -v /usr/share/icons/oxygen/48x48/apps/sublime-text.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/oxygen/48x48/apps/sublime-text.png
			## mooOS icon
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-16.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/HighContrast/16x16/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-256.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/HighContrast/256x256/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-32.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/HighContrast/32x32/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-48.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/HighContrast/48x48/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-16.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/gnome/16x16/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-256.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/gnome/256x256/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-32.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/gnome/32x32/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-48.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/gnome/48x48/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-128.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/hicolor/128x128/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-16.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/hicolor/16x16/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-256.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/hicolor/256x256/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-32.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/hicolor/32x32/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-48.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/hicolor/48x48/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-128.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/oxygen/128x128/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-16.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/oxygen/16x16/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-256.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/oxygen/256x256/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-32.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/oxygen/32x32/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-48.png ${MOO_HOME}archlive/releng/root-image/usr/share/icons/oxygen/48x48/apps/mooOS.png
			## copy vlc files
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/vlc
			cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/vlc-qt-interface.conf ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/vlc/vlc-qt-interface.conf
			cp -v ${MOO_HOME}.config/vlc/vlcrc ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/vlc/vlcrc
			## copy over window manager files
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/applications
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/backgrounds
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/config
			rm -r ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/themes
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/images
			cp -vr ${MOO_HOME}.e/e/applications/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/applications
			#cp -vr ${MOO_HOME}.e/e/backgrounds/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/backgrounds
			cp -vr ${MOO_HOME}.e/e/config/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/config
			#cp -vr ${MOO_HOME}.e/e/themes/* ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/themes
			#cp -v ${MOO_HOME}.e/e/images/tw_cache_images.eet ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/images/tw_cache_images.eet
 			rm ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/config/standard/module.everything.cache.*
 			rm ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/config/standard/exehist.*
 			rm ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/config/standard/evry_exebuf_cache.*
 			rm ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/config/standard/module.forecasts.*
 			mkdir -vp ${MOO_HOME}archlive/releng/root-image/usr/share/enlightenment/data/themes
 			cp -vr /usr/share/enlightenment/data/themes/* ${MOO_HOME}archlive/releng/root-image/usr/share/enlightenment/data/themes

 			## patch config files for username
 			cd ${MOO_HOME}archlive/releng/root-image/etc/skel/.e/e/config/standard
			for NEW_FILE in e.*
			do
				EWW_FILE=${NEW_FILE/.cfg/.src}

				eet -d $NEW_FILE config $EWW_FILE
				sed -i "s/$MOO_USER/moo/g" $EWW_FILE
				rm $NEW_FILE
				eet -e $NEW_FILE config $EWW_FILE 1
				rm $EWW_FILE
			done
			cd $PWD

			## clean up files content
			sed -i "s/$MOO_USER/moo/g" ${MOO_HOME}archlive/releng/root-image/etc/skel/.mozilla/firefox/qrtww0pl.Default-User/extensions.ini
			sed -i "s/$MOO_USER/moo/g" ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/transmission-daemon/settings.json
			sed -i "s/$MOO_USER/moo/g" ${MOO_HOME}archlive/releng/root-image/etc/skel/.moc/config
			sed -i "s/$MOO_USER/moo/g" ${MOO_HOME}archlive/releng/root-image/etc/skel/.kde4/share/config/dolphinrc
			sed -i "s/$MOO_USER/moo/g" ${MOO_HOME}archlive/releng/root-image/etc/psd.conf 
			sed -i "s/$MOO_USER/moo/g" ${MOO_HOME}archlive/releng/root-image/etc/skel/.gtkrc-2.0		

			## copy over hosts file (needed for LAN repos) TODO
			#cp -v /etc/hosts ${MOO_HOME}archlive/releng/root-image/etc/hosts

			## cleanup Github local repos
			rm -rf ${MOO_HOME}archlive/releng/root-image/etc/skel/Github
			## mooOS stuffs
		 	mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/Desktop
		 	mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/Dev/mooOS_backups
		 	mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/Downloads
		 	mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/Videos
		 	mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/Dropbox
		 	mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/Github
		 	mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/Music
		 	mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/Pictures
		 	cp -vr ${MOO_HOME}Dev/mooOS_backups/* ${MOO_HOME}archlive/releng/root-image/etc/skel/Dev/mooOS_backups

		 	## copy home files and create default directories
		 	cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/Desktop.* ${MOO_HOME}archlive/releng/root-image/etc/skel/Desktop/
		 	cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/Dev.* ${MOO_HOME}archlive/releng/root-image/etc/skel/Dev/
		 	cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/Downloads.* ${MOO_HOME}archlive/releng/root-image/etc/skel/Downloads/
		 	cp -v ${MOO_HOME}Videos/Videos.* ${MOO_HOME}archlive/releng/root-image/etc/skel/Videos/
		 	cp -v ${MOO_HOME}Dropbox/Dropbox.* ${MOO_HOME}archlive/releng/root-image/etc/skel/Dropbox/
		 	cp -v ${MOO_HOME}github/Github.* ${MOO_HOME}archlive/releng/root-image/etc/skel/Github/
		 	cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/Music.* ${MOO_HOME}archlive/releng/root-image/etc/skel/Music/
		 	cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/Pictures.* ${MOO_HOME}archlive/releng/root-image/etc/skel/Pictures/

			## create ~/Github and all repos
	 		cd ${MOO_HOME}archlive/releng/root-image/etc/skel/Github
			git clone git://github.com/idk/pdq.git
			git clone git://github.com/idk/bin.git
			#git clone git://github.com/idk/awesomewm-X.git
			git clone git://github.com/idk/zsh.git
			git clone git://github.com/idk/bin.git
			git clone git://github.com/idk/php.git
			git clone git://github.com/idk/systemd.git
			git clone git://github.com/idk/eggdrop-scripts.git
			git clone git://github.com/idk/gh.git
			git clone git://github.com/idk/vb-pdq.git
			git clone git://github.com/idk/mooOS-dev-tools.git
			git clone git://github.com/idk/mooOS-wallpapers.git
			cd "$PWD"

			## vimb files copied
			cp -v ${MOO_HOME}archlive/releng/root-image/etc/skel/Github/vb-pdq/config ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/vimb/
			cp -v ${MOO_HOME}archlive/releng/root-image/etc/skel/Github/vb-pdq/config_proxy ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/vimb/
			cp -v ${MOO_HOME}archlive/releng/root-image/etc/skel/Github/vb-pdq/style.css ${MOO_HOME}archlive/releng/root-image/etc/skel/.config/vimb/

			## preserve wallpapers
			mkdir -vp ${MOO_HOME}archlive/releng/root-image/etc/skel/Github/sources/backgrounds
			cp -vr /usr/share/backgrounds/* ${MOO_HOME}archlive/releng/root-image/etc/skel/Github/sources/backgrounds

			install -Dm644 "${MOO_HOME}archlive/releng/root-image/etc/skel/Github/mooOS-dev-tools/misc/man.1" "${MOO_HOME}archlive/releng/root-image/usr/local/man/man1/mooOS.1"
			gzip -f ${MOO_HOME}archlive/releng/root-image/usr/local/man/man1/mooOS.1

			echo "${bldyellow}Removing previous build and work directories...${txtrst}"
			
			## deprecated method
			if [ -d "${MOO_HOME}archlive/releng/work" ]; then
				rm -r ${MOO_HOME}archlive/releng/work
			fi

			## new method
			if [ -d "$ISO_DIR" ]; then
				rm -r "$ISO_DIR"
			fi
			if [ -d "$WORK_DIR" ]; then
				rm -r "$WORK_DIR"
			fi

			## create pacman.conf for build
			mkdir -v "$WORK_DIR" && cp ${MOO_HOME}github/mooOS-dev-tools/misc/pacman.conf ${WORK_DIR}/pacman.conf
			mkdir -v "${MOO_HOME}archlive/releng/work"
			## create pacman.conf for livecd
			cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/pacman.conf ${MOO_HOME}archlive/releng/work/pacman.conf
			## create pacman.conf for livecd specific to architecture
			cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/pacman-x86_64.conf ${MOO_HOME}archlive/releng/root-image/etc/pacman-x86_64.conf
			cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/pacman-i686.conf ${MOO_HOME}archlive/releng/root-image/etc/pacman-i686.conf
			cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/pacman-x86_64.conf ${MOO_HOME}archlive/releng/work/pacman-x86_64.conf
			cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/pacman-i686.conf ${MOO_HOME}archlive/releng/work/pacman-i686.conf

			## packages
			cp -v ${MOO_HOME}github/mooOS-dev-tools/packages.both ${MOO_HOME}archlive/releng/packages.both
			cp -v ${MOO_HOME}github/mooOS-dev-tools/packages-server.both ${MOO_HOME}archlive/releng/packages-server.both
			cp -v ${MOO_HOME}github/mooOS-dev-tools/packages.i686 ${MOO_HOME}archlive/releng/packages.i686
			cp -v ${MOO_HOME}github/mooOS-dev-tools/packages.x86_64 ${MOO_HOME}archlive/releng/packages.x86_64

			## copy over boot splash screen and mooOS branding
			cp -v ${MOO_HOME}archlive/releng/syslinux/splash.png ${MOO_HOME}archlive/releng/root-image/etc/grub.d/splash.png
			convert ${MOO_HOME}archlive/releng/root-image/etc/grub.d/splash.png ${MOO_HOME}archlive/releng/root-image/etc/grub.d/splash.jpg
			cp -v /etc/arch-release ${MOO_HOME}archlive/releng/root-image/etc/arch-release
		fi

		echo "
${bldred}Building iso now...${txtrst}
"

		## change to build directory and build iso
		cd ${MOO_HOME}archlive/releng
		 ./build.sh -v -o "$ISO_DIR" -w "$WORK_DIR" -N "$ISO_NAME" -V "$ISO_VERSION" -L "$ISO_LABEL"

		echo "
${bldred}iso built${txtrst}
"

		## sync .iso to remote server
		question="${bldyellow}Do you wish to rysnc this .iso to remote server (Y/N)?\n${txtrst}"
		if ask_something; then
			## create initial old hash
			if [ ! -f "$OLDHASH" ]; then
				su -l $MOO_USER -c "echo 53ef866dd48dcbd620cf402d845c2ec5 > $OLDHASH"
			fi

			echo "
generating md5sums... please wait a moment
"
			# md5sums of current and old .iso
			MD5HASH=$(md5sum $ISO_DIR/*.iso | cut -d " " -f 1)

			## create initial current hash
			if [ ! -f "$CURRENTHASH" ]; then
				su -l $MOO_USER -c "echo $MD5HASH > $CURRENTHASH"
			fi

			CURMD5HASH=$(cat $CURRENTHASH)
			OLDMD5HASH=$(cat $OLDHASH)
			NEW=0
			## if new iso create hashes
			if [ "$CURMD5HASH" != "$MD5HASH" ]; then
				su -l $MOO_USER -c "echo $CURMD5HASH > $OLDHASH"
				su -l $MOO_USER -c "echo $MD5HASH > $CURRENTHASH"
				NEW=1
			fi

			OLDMD5HASH=$(cat $OLDHASH)

			echo "The old md5sum was $OLDMD5HASH the new md5sum is $MD5HASH"

			## replace old hash with new hash in info.php on local web server
			su -l $MOO_USER -c "sed -i \"s/$OLDMD5HASH/$MD5HASH/g\" /mnt/linux-pdq/media/truecrypt1/domains/pdqblog/info.php"

			## create initial old name
			if [ ! -f "$OLDNAME" ]; then
				su -l $MOO_USER -c "echo mooOS-2013.09.02-beta-0.99-dual.iso > $OLDNAME"
			fi

			## create initial current name
			if [ ! -f "$CURRENTNAME" ]; then
				su -l $MOO_USER -c "ls $ISO_DIR > $CURRENTNAME"
			fi

			NEW_NAME_LIST=$(ls $ISO_DIR)
			CURRELNAME=$(cat $CURRENTNAME)
			OLDRELNAME=$(cat $OLDNAME)

			NEW_NAME=0
			## if new iso create release name
			if [ "$CURRELNAME" != "$NEW_NAME_LIST" ]; then
				su -l $MOO_USER -c "echo $CURRELNAME > $OLDNAME"
				su -l $MOO_USER -c "echo $NEW_NAME_LIST > $CURRENTNAME"
				NEW_NAME=1
			fi

			CURRELNAME=$(cat $CURRENTNAME)
			OLDRELNAME=$(cat $OLDNAME)

			echo "The old release name was $OLDRELNAME the new release name is $CURRELNAME"
			## replace old release name with new release name in info.php on local web server
			if [ $NEW_NAME -eq 1 ]; then
				su -l $MOO_USER -c "sed -i \"s/$OLDRELNAME/$CURRELNAME/g\" /mnt/linux-pdq/media/truecrypt1/domains/pdqblog/info.php"
			fi

			if [ $NEW -eq 1 ]; then
				echo "
================syncing iso to local storage repos===================
"
				su -l $MOO_USER -c "rm $ISO_STORAGE/$ISO_NAME-beta-dual-old.iso"
				su -l $MOO_USER -c "cp -fv $ISO_STORAGE/$ISO_NAME-beta-dual.iso $ISO_STORAGE/$ISO_NAME-beta-dual-old.iso"
				su -l $MOO_USER -c "rm $ISO_STORAGE/$ISO_NAME-beta-dual.iso"
				su -l $MOO_USER -c "cp -fv $ISO_DIR/*.iso $ISO_STORAGE/$ISO_NAME-beta-dual.iso"

				## Mount server filesystem to localhost
				# path to remote repo credentials file
				su -l $MOO_USER -c "cat /mnt/linux-pdq/media/truecrypt1/private/repo_creds > /tmp/repo_creds"
				REPO_CREDS=/tmp/repo_creds

				## if remote web server exists
				if [ "$REPO_CREDS" ] ; then
					. $REPO_CREDS

					## rsync .iso using vars defined in credentials, e.g.:
					port=$(eval echo $(echo '${'_iso_sync[1]'}'))
					flags=$(eval echo $(echo '${'_iso_sync[4]'}'))
					src=$(eval echo $(echo '${'_iso_sync[2]'}'))
					dest=$(eval echo $(echo '${'_iso_sync[3]'}'))

					## copy info.php with new hash to remote web server
					echo "
================syncing info.php to remote web server===================
"
					su -l $MOO_USER -c "torsocks scp /mnt/linux-pdq/media/truecrypt1/domains/pdqblog/info.php $dest/public_html/"
					echo "
================syncing iso to remote server===================
"
					echo "
This may take a while...
"
					su -l $MOO_USER -c "rsync -avzcPh $flags -e 'ssh -p $port' $src $dest" # -n, --dry-run perform a trial run with no changes made

					rm "$REPO_CREDS"
				fi
			fi
		fi
	fi
else ## as $USER
	## create the build environment and preparation

	## push latest code to github
	gh -b ## https://github.com/idk/gh
	echo "
${bldyellow}Copying configuration files and recreating repos now...${txtrst}
"
	## install custom mooOS packages
	## wallpapers
	# cd ${MOO_HOME}github/mooOS-wallpapers
	# makepkg -sf
	# schroot -p -- makepkg -sf

	## github wrapper
	rm -r ${MOO_HOME}abs/gh
	mkdir -p ${MOO_HOME}abs/gh
	cd ${MOO_HOME}abs/gh
	wget https://raw.github.com/idk/gh/master/PKGBUILD
	makepkg -sf
	schroot -p -- makepkg -sf

	## vimb web browser and tabbed, patched!
	rm -v ${ABS_BASE_DIR}mooOS-pkgs-32/vb-pdq*
	rm -v ${ABS_BASE_DIR}mooOS-pkgs-64/vb-pdq*
	rm -fr ${MOO_HOME}abs/vb-pdq
	mkdir -p ${MOO_HOME}abs/vb-pdq
	cd ${MOO_HOME}abs/vb-pdq
	wget https://raw.github.com/idk/vb-pdq/master/PKGBUILD
	wget https://raw.github.com/idk/vb-pdq/master/vb-pdq.install
	makepkg -sf
	schroot -p -- makepkg -sf

	cd "$PWD"

	## remove existing repos
	rm -v ${ABS_BASE_DIR}mooOS-pkgs-32/mooOS.db.tar.gz
	rm -v ${ABS_BASE_DIR}mooOS-pkgs-64/mooOS.db.tar.gz
	#rm ${ABS_BASE_DIR}mooOS-utils/mooOS-utils.db.tar.gz

	## create repo databases
	echo "
${bldyellow}Re-creating i686 repository${txtrst}
"
	repo-add -k $GPGKEY ${ABS_BASE_DIR}mooOS-pkgs-32/mooOS.db.tar.gz ${ABS_BASE_DIR}mooOS-pkgs-32/*.pkg.tar.xz
	echo "
${bldyellow}Re-creating x86_64 repository${txtrst}
"
	repo-add -k $GPGKEY ${ABS_BASE_DIR}mooOS-pkgs-64/mooOS.db.tar.gz ${ABS_BASE_DIR}mooOS-pkgs-64/*.pkg.tar.xz
	#echo "${bldyellow}Re-creating utils repository${txtrst}"
	#repo-add ${ABS_BASE_DIR}mooOS-utils/mooOS-utils.db.tar.gz ${ABS_BASE_DIR}mooOS-pkgs-64/*.pkg.tar.xz >> $REPO_LOG_TEMP 2>&1

	## format log a little
	echo $(date -d "today" +"%Y%m%d%H%M") >> $REPO_LOG_TEMP
	sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g" $REPO_LOG_TEMP >> $REPO_LOG

	## clean up stable repos
	## re-create repos local and remote
	echo "
================syncing to local repos===================
"
	rsync -avzrcpPh --delete --stats ${REPO_BASE_DIR}/mooOS-pkgs-32/ ${ABS_BASE_DIR}mooOS-pkgs-32-out-of-date
	rsync -avzrcpPh --delete --stats ${REPO_BASE_DIR}/mooOS-pkgs-64/ ${ABS_BASE_DIR}mooOS-pkgs-64-out-of-date
	rsync -avzrcpPh --delete --stats ${ABS_BASE_DIR}/mooOS-pkgs-32/ ${REPO_BASE_DIR}/mooOS-pkgs-32
	rsync -avzrcpPh --delete --stats ${ABS_BASE_DIR}/mooOS-pkgs-64/ ${REPO_BASE_DIR}/mooOS-pkgs-64

	## remote repo
	## include login credentials:
	if [ -f "$REPO_CREDS" ] ; then
		echo "
================syncing to remote repos===================
"
		. $REPO_CREDS

		## rsync using vars defined in credentials, e.g.:
		#for i in {1..5}
		for i in $(eval echo {1..$_remote_count})
		do
			port=$(eval echo $(echo '${'_remote$i[1]'}'))
			flags=$(eval echo $(echo '${'_remote$i[4]'}'))
			src=$(eval echo $(echo '${'_remote$i[2]'}'))
			dest=$(eval echo $(echo '${'_remote$i[3]'}'))
			torsocks rsync -avzrcPh $flags -e "torsocks ssh -p $port" $src $dest # -n, --dry-run perform a trial run with no changes made
		done
	fi

	notify-send "Repo update complete"

	echo "
${bldyellow}Re-running this script as root!${txtrst}
"
	sleep 2s
	## re-run script as root
 	sudo $0
fi

exit 0
