#!/usr/bin/sh
## Part of mooOS-dev-tools - https://github.com/idk/mooOS-dev-tools
## pdq 08-13-2013 - PRESENT
## License: GPL3

## This script is run as $USER then following that as root
## This script creates the mooOS livecd ISO image file from current OS

## Script variables


## (you could change these)
MOO_USER=pdq
MOO_HOME="/home/$MOO_USER/"

# Build settings (you could change these)
ISO_NAME=mooOS
ISO_LABEL="$ISO_NAME_$(date +%Y%m)"
ISO_VERSION="$(date +%Y.%m.%d)-beta-0.987" ## change me!

## (you should change these paths)
ARCHLIVE=/media/truecrypt3/
ISO_STORAGE="/mnt/linux-pdq/media/truecrypt1/Down" ## directroy where iso is cp to rsync from
REPO_BASE_DIR="/mnt/linux-pdq/media/truecrypt1/domains/mooOS"
ABS_BASE_DIR="${MOO_HOME}abs/"

## (no need to change these)
REPO_LOG_TEMP="/tmp/repo_renew"
REPO_LOG="${ABS_BASE_DIR}update.log"
CURRENTHASH="${ABS_BASE_DIR}mooOS.md5sum"
OLDHASH="${ABS_BASE_DIR}mooOS.md5sum.old"
CURRENTNAME="${ABS_BASE_DIR}mooOS.name"
OLDNAME="${ABS_BASE_DIR}mooOS.name.old"
ISO_DIR="${ARCHLIVE}mooOS/out"   # iso
WORK_DIR="${ARCHLIVE}mooOS/work" # work

## gpg key used to sign the repos/packages
GPGKEY=$(cat ${MOO_HOME}.gnupg/private_key_include) ##  you must put key in this file


# path to remote repo credentials file - (you should change this path)
REPO_CREDS=/mnt/linux-pdq/media/truecrypt1/private/repo_creds
## BEGIN EXAMPLE of repo_creds
#  #!/bin/sh

# _remote_count=2
# _now=$(date +"%m_%d_%Y")

# #32-local -> 32-remote
# _remote1[1]=22 # port
# _remote1[2]="/home/pdq/abs/mooOS-pkgs-32"
# _remote1[3]="example@127.0.0.1:/path/to/mooOS/public_html/repos"
# _remote1[4]="--delete --stats"

# #64-local -> 64-remote
# _remote2[1]=22 # port
# _remote2[2]="/home/pdq/abs/mooOS-pkgs-64"
# _remote2[3]="example@127.0.0.1:/path/to/mooOS/public_html/repos"
# _remote2[4]="--delete --stats"

# #iso-local -> iso-remote
# _iso_sync[1]=22
# _iso_sync[2]="${ARCHLIVE}mooOS/out/${_iso_label}*.iso"
# _iso_sync[3]="example@127.0.0.1:/var/www/mooOS"
# _iso_sync[4]="--stats"

## End remote rsyncs
## END EXAMPLE of repo_creds

# Text color variables (there is no need change these)
txtbld=$(tput bold)                # bold
bldred=${txtbld}$(tput setaf 1)    # red
bldyellow=${txtbld}$(tput setaf 3) # yellow
txtrst=$(tput sgr0)                # reset


## DO NOT EDIT BELOW UNLESS YOU KNOW WHAT YOURE DOING ##

## generic yes/no function
ask_something() {
	echo -ne $question
	while read -r -n 1 -s yn; do
		if [[ $yn = [YyNn] ]]; then
			[[ $yn = [Yy] ]] && return=0
			[[ $yn = [Nn] ]] && return=1
			break
		fi
	done
	return $return
}

## root script
if [ $(id -u) -eq 0 ]; then
	question="${bldyellow}Have you ran this script as USER 1st? You wish to  make iso (Y/N)?\n${txtrst}"
	if ask_something; then
		question="${bldyellow}You wish to skip to create iso (Y/N)? (default: no)\n${txtrst}"
		if ! ask_something; then
			PWD=$(pwd)

			echo "
			${bldyellow}Copying configuration files and recreating repos now...${txtrst}
			"

			## copy root files

			## profile-sync-daemon
			cp -v /etc/psd.conf ${ARCHLIVE}archlive/releng/root-image/etc/psd.conf
			
			## resolv.conf
			cp -v /etc/resolv.conf ${ARCHLIVE}archlive/releng/root-image/etc/resolv.conf
			
			## resolv.conf.head
			cp -v /etc/resolv.conf.head ${ARCHLIVE}archlive/releng/root-image/etc/resolv.conf.head
			
			## dnsmasq
			cp -v /etc/dnsmasq.conf ${ARCHLIVE}archlive/releng/root-image/etc/dnsmasq.conf
			
			## dhcpcd
			cp -v /etc/dhcpcd.conf ${ARCHLIVE}archlive/releng/root-image/etc/dhcpcd.conf
			
			## nano config
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/usr/share/nano
			cp -v /usr/share/nano/pkgbuild.nanorc ${ARCHLIVE}archlive/releng/root-image//usr/share/nano/pkgbuild.nanorc
			
			## e17 backgrounds
			cp -v /usr/share/enlightenment/data/backgrounds/* ${ARCHLIVE}archlive/releng/root-image/usr/share/enlightenment/data/backgrounds
			
			## tor config
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/tor
			cp -v /etc/torrc ${ARCHLIVE}archlive/releng/root-image/etc/tor/torrc
			
			## privoxy config
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/privoxy
			sh -c "echo 'forward-socks5 / localhost:9050 .' > ${ARCHLIVE}archlive/releng/root-image/etc/privoxy/config"
			
			## dansguardian config
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/dansguardian
			cp -v /etc/dansguardian/dansguardian.conf ${ARCHLIVE}archlive/releng/root-image/etc/dansguardian/dansguardian.conf
			
			## squid config
			#mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/squid
			#cp -v /etc/squid/squid.conf ${ARCHLIVE}archlive/releng/root-image/etc/squid/squid.conf

			## TODO
			#mv -v /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.bak
			#cp -v ${dev_directory}etc/httpd.conf /etc/httpd/conf/httpd.conf
			#cp -v ${dev_directory}etc/httpd-phpmyadmin.conf /etc/httpd/conf/extra/httpd-phpmyadmin.conf
			#mv -v /etc/php/php.ini /etc/php/php.ini.bak
			#cp -v ${dev_directory}etc/php.ini /etc/php/php.ini

			## copy over custom .desktop files
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/usr/share/applications
			cp -v ${MOO_HOME}github/mooOS-dev-tools/applications/*.desktop ${ARCHLIVE}archlive/releng/root-image/usr/share/applications/
			
			## copy over ~/bin
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/bin
			cp -vr ${MOO_HOME}bin/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/bin
			
			## copy over pentadactyl files
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.pentadactyl/colors
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.pentadactyl/plugins
			cp -vr ${MOO_HOME}.pentadactyl/colors/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.pentadactyl/colors
			cp -vr ${MOO_HOME}.pentadactyl/plugins/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.pentadactyl/plugins
			
			## copy over rss reader files
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.canto-ng
			cp -v ${MOO_HOME}.canto-ng/config ${ARCHLIVE}archlive/releng/root-image/etc/skel/.canto-ng/config
			
			## copy over firefox files
			su -l $MOO_USER -c "cp -vr ${MOO_HOME}.mozilla/firefox/qrtww0pl.Default-User/* ${MOO_HOME}info/firefox/qrtww0pl.Default-User"
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.mozilla/firefox/qrtww0pl.Default-User
			cp -vr ${MOO_HOME}info/firefox/qrtww0pl.Default-User/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.mozilla/firefox/qrtww0pl.Default-User
			
			## copy over ~/.local files
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.local/applications
			cp -v ${MOO_HOME}.local/applications/defaults.list ${ARCHLIVE}archlive/releng/root-image/etc/skel/.local/applications/defaults.list
			cp -v ${MOO_HOME}.local/applications/tabbed.desktop ${ARCHLIVE}archlive/releng/root-image/etc/skel/.local/applications/tabbed.desktop
			cp -v ${MOO_HOME}.local/applications/URxvt.desktop ${ARCHLIVE}archlive/releng/root-image/etc/skel/.local/applications/URxvt.desktop
			cp -v ${MOO_HOME}.local/applications/install_mooOS.desktop ${ARCHLIVE}archlive/releng/root-image/etc/skel/.local/applications/install_mooOS.desktop
			cp -v ${MOO_HOME}.local/applications/man_mooOS.desktop ${ARCHLIVE}archlive/releng/root-image/etc/skel/.local/applications/man_mooOS.desktop
			
			## copy over ~/.* (dotfiles)
			cp -v ${MOO_HOME}.Xdefaults ${ARCHLIVE}archlive/releng/root-image/etc/skel/.Xdefaults
			cp -v ${MOO_HOME}.xinitrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.xinitrc
			cp -v ${MOO_HOME}.zshrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.zshrc
			cp -v ${MOO_HOME}.gtkrc-2.0 ${ARCHLIVE}archlive/releng/root-image/etc/skel/.gtkrc-2.0
			cp -v ${MOO_HOME}.nanorc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.nanorc
			cp -v ${MOO_HOME}.dialogrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.dialogrc
			cp -v ${MOO_HOME}.pentadactylrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.pentadactylrc			
			cp -v ${MOO_HOME}.dialogrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.dialogrc
			cp -v ${MOO_HOME}.wgetrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.wgetrc
			cp -v ${MOO_HOME}.curlrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.curlrc
			
			## copy over ~/.themes
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.themes/Black
			cp -vr ${MOO_HOME}.themes/Black/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.themes/Black
			
			## copy over ~/.fonts
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.fonts
			cp -vr ${MOO_HOME}.fonts/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.fonts
			
			## copy over kde files
			mkdir -vp  ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/apps/color-schemes
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/apps/kdenlive
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/apps/dolphin/view_properties/global
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/config
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/kde4/services/ServiceMenus
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/apps/konsole
			cp -vr ${MOO_HOME}.kde4/share/apps/color-schemes/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/apps/color-schemes
			cp -v ${MOO_HOME}.kde4/share/apps/kdenlive/kdenliveui.rc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/apps/kdenlive/kdenliveui.rc
			cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/kdenliveuirc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/config/kdenliveuirc
			cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/..directory ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/apps/dolphin/view_properties/global/.directory
			cp -v ${MOO_HOME}.kde4/share/config/startupconfig ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/config/startupconfig
			cp -v ${MOO_HOME}.kde4/share/config/konsolerc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/config/konsolerc
 			cp -v ${MOO_HOME}.kde4/share/config/kservicemenurc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/config/kservicemenurc 
			cp -vr ${MOO_HOME}.kde4/share/kde4/services/ServiceMenus/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/kde4/services/ServiceMenus
			cp -vr ${MOO_HOME}.kde4/share/apps/konsole/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/apps/konsole
			cp -v ${MOO_HOME}.kde4/share/config/dolphinrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/config/dolphinrc
			cp -v ${MOO_HOME}.kde4/share/apps/dolphin/dolphinui.rc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/apps/dolphin/dolphinui.rc
			cp -v ${MOO_HOME}.kde4/share/config/gtkrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/config/gtkrc
			cp -v ${MOO_HOME}.kde4/share/config/gtkrc-2.0 ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/config/gtkrc-2.0
			
			## copy over ~/.gnupg
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.gnupg
			cp -v ${MOO_HOME}.gnupg/gpg-agent.conf ${ARCHLIVE}archlive/releng/root-image/etc/skel/.gnupg/gpg-agent.conf
			cp -v ${MOO_HOME}.gnupg/gpg.conf ${ARCHLIVE}archlive/releng/root-image/etc/skel/.gnupg/gpg.conf

			## copy over transmission file
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/transmission-daemon
			cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/settings.json ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/transmission-daemon/settings.json
			
			## copy over key-mon config
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/key-mon
			cp -v ${MOO_HOME}.config/key-mon/config ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/key-mon/config
			
			## copy lxtask config
			cp -v ${MOO_HOME}.config/lxtask.conf ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/lxtask.conf
			
			## copy pavucontrol config
			cp -v ${MOO_HOME}.config/pavucontrol.ini ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/pavucontrol.ini
			
			## copy over mocp file
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.moc
			cp -v ${MOO_HOME}.moc/config ${ARCHLIVE}archlive/releng/root-image/etc/skel/.moc/config
			
			## copy htop file
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/htop
			cp -v ${MOO_HOME}.config/htop/htoprc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/htop/htoprc
			
			## copy sublime text 3 files
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/sublime-text-3/Packages/User
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/sublime-text-3/Packages/Theme\ -\ Nil
			cp -vr ${MOO_HOME}.config/sublime-text-3/Packages/Theme\ -\ Nil/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/sublime-text-3/Packages/Theme\ -\ Nil/
			cp -v ${MOO_HOME}.config/sublime-text-3/Packages/User/Preferences.sublime-settings ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/sublime-text-3/Packages/User/Preferences.sublime-settings
			
			## https://github.com/dmatarazzo/Sublime-Text-2-Icon
			echo "Updating Sublime Text 3 icons"
			# cp -v /usr/share/icons/HighContrast/16x16/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/HighContrast/16x16/apps/sublime-text.png
			# cp -v /usr/share/icons/HighContrast/256x256/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/HighContrast/256x256/apps/sublime-text.png
			# cp -v /usr/share/icons/HighContrast/32x32/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/HighContrast/32x32/apps/sublime-text.png
			# cp -v /usr/share/icons/HighContrast/48x48/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/HighContrast/48x48/apps/sublime-text.png
			# cp -v /usr/share/icons/gnome/16x16/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/gnome/16x16/apps/sublime-text.png
			# cp -v /usr/share/icons/gnome/256x256/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/gnome/256x256/apps/sublime-text.png
			# cp -v /usr/share/icons/gnome/32x32/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/gnome/32x32/apps/sublime-text.png
			# cp -v /usr/share/icons/gnome/48x48/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/gnome/48x48/apps/sublime-text.png
			# cp -v /usr/share/icons/hicolor/128x128/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/hicolor/128x128/apps/sublime-text.png
			# cp -v /usr/share/icons/hicolor/16x16/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/hicolor/16x16/apps/sublime-text.png
			# cp -v /usr/share/icons/hicolor/256x256/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/hicolor/256x256/apps/sublime-text.png
			# cp -v /usr/share/icons/hicolor/32x32/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/hicolor/32x32/apps/sublime-text.png
			# cp -v /usr/share/icons/hicolor/48x48/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/hicolor/48x48/apps/sublime-text.png
			# cp -v /usr/share/icons/oxygen/128x128/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/128x128/apps/sublime-text.png
			# cp -v /usr/share/icons/oxygen/16x16/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/16x16/apps/sublime-text.png
			# cp -v /usr/share/icons/oxygen/256x256/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/256x256/apps/sublime-text.png
			# cp -v /usr/share/icons/oxygen/32x32/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/32x32/apps/sublime-text.png
			# cp -v /usr/share/icons/oxygen/48x48/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/48x48/apps/sublime-text.png
			
			## mooOS icon
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-16.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/HighContrast/16x16/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-256.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/HighContrast/256x256/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-32.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/HighContrast/32x32/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-48.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/HighContrast/48x48/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-16.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/gnome/16x16/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-256.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/gnome/256x256/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-32.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/gnome/32x32/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-48.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/gnome/48x48/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-128.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/hicolor/128x128/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-16.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/hicolor/16x16/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-256.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/hicolor/256x256/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-32.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/hicolor/32x32/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-48.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/hicolor/48x48/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-128.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/128x128/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-16.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/16x16/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-256.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/256x256/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-32.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/32x32/apps/mooOS.png
			cp -v ${MOO_HOME}github/mooOS-dev-tools/images/mooOS-48.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/48x48/apps/mooOS.png
			
			## copy vlc files
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/vlc
			cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/vlc-qt-interface.conf ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/vlc/vlc-qt-interface.conf
			cp -v ${MOO_HOME}.config/vlc/vlcrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/vlc/vlcrc
			
			## copy over window manager files
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/applications
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/backgrounds
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/config
			rm -r ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/themes
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/images
			cp -vr ${MOO_HOME}.e/e/applications/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/applications
			#cp -vr ${MOO_HOME}.e/e/backgrounds/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/backgrounds
			cp -vr ${MOO_HOME}.e/e/config/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/config
			#cp -vr ${MOO_HOME}.e/e/themes/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/themes
			#cp -v ${MOO_HOME}.e/e/images/tw_cache_images.eet ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/images/tw_cache_images.eet
 			rm ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/config/standard/module.everything.cache.*
 			rm ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/config/standard/exehist.*
 			rm ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/config/standard/evry_exebuf_cache.*
 			rm ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/config/standard/module.forecasts.*
 			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/usr/share/enlightenment/data/themes
 			cp -vr /usr/share/enlightenment/data/themes/* ${ARCHLIVE}archlive/releng/root-image/usr/share/enlightenment/data/themes

 			## patch config files for username
 			cd ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/config/standard
			for NEW_FILE in e.*
			do
				EWW_FILE=${NEW_FILE/.cfg/.src}

				eet -d $NEW_FILE config $EWW_FILE
				sed -i "s/$MOO_USER/moo/g" $EWW_FILE
				rm $NEW_FILE
				eet -e $NEW_FILE config $EWW_FILE 1
				rm $EWW_FILE
			done
			cd $PWD

			## clean up files content
			sed -i "s/$MOO_USER/moo/g" ${ARCHLIVE}archlive/releng/root-image/etc/skel/.mozilla/firefox/qrtww0pl.Default-User/extensions.ini
			sed -i "s/$MOO_USER/moo/g" ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/transmission-daemon/settings.json
			sed -i "s/$MOO_USER/moo/g" ${ARCHLIVE}archlive/releng/root-image/etc/skel/.moc/config
			sed -i "s/$MOO_USER/moo/g" ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/config/dolphinrc
			sed -i "s/$MOO_USER/moo/g" ${ARCHLIVE}archlive/releng/root-image/etc/psd.conf 
			sed -i "s/$MOO_USER/moo/g" ${ARCHLIVE}archlive/releng/root-image/etc/skel/.gtkrc-2.0		

			## copy over hosts file (needed for LAN repos) TODO
			#cp -v /etc/hosts ${ARCHLIVE}archlive/releng/root-image/etc/hosts

			## cleanup Github local repos
			rm -rf ${ARCHLIVE}archlive/releng/root-image/etc/skel/Github
			## mooOS stuffs
		 	mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/Desktop
		 	mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/Dev/mooOS_backups
		 	mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/Downloads
		 	mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/Videos
		 	mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/Dropbox
		 	mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/Github
		 	mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/Music
		 	mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/Pictures
		 	cp -vr ${MOO_HOME}info/mooOS_backups/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/Dev/mooOS_backups

		 	## copy home files and create default directories
		 	cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/Desktop.* ${ARCHLIVE}archlive/releng/root-image/etc/skel/Desktop/
		 	cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/Dev.* ${ARCHLIVE}archlive/releng/root-image/etc/skel/Dev/
		 	cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/Downloads.* ${ARCHLIVE}archlive/releng/root-image/etc/skel/Downloads/
		 	cp -v ${MOO_HOME}Videos/Videos.* ${ARCHLIVE}archlive/releng/root-image/etc/skel/Videos/
		 	#cp -v ${MOO_HOME}Dropbox/Dropbox.* ${ARCHLIVE}archlive/releng/root-image/etc/skel/Dropbox/
		 	cp -v ${MOO_HOME}github/Github.* ${ARCHLIVE}archlive/releng/root-image/etc/skel/Github/
		 	cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/Music.* ${ARCHLIVE}archlive/releng/root-image/etc/skel/Music/
		 	cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/Pictures.* ${ARCHLIVE}archlive/releng/root-image/etc/skel/Pictures/

			## create ~/Github and all repos
	 		cd ${ARCHLIVE}archlive/releng/root-image/etc/skel/Github
			git clone git://github.com/idk/pdq.git
			git clone git://github.com/idk/bin.git
			#git clone git://github.com/idk/awesomewm-X.git
			git clone git://github.com/idk/zsh.git
			git clone git://github.com/idk/bin.git
			git clone git://github.com/idk/php.git
			git clone git://github.com/idk/systemd.git
			git clone git://github.com/idk/eggdrop-scripts.git
			git clone git://github.com/idk/gh.git
			git clone git://github.com/idk/vb-pdq.git
			git clone git://github.com/idk/mooOS-dev-tools.git
			git clone git://github.com/idk/mooOS-wallpapers.git
			cd "$PWD"

			## vimb files copied
			cp -v ${ARCHLIVE}archlive/releng/root-image/etc/skel/Github/vb-pdq/config ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/vimb/
			cp -v ${ARCHLIVE}archlive/releng/root-image/etc/skel/Github/vb-pdq/config_proxy ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/vimb/
			cp -v ${ARCHLIVE}archlive/releng/root-image/etc/skel/Github/vb-pdq/style.css ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/vimb/

			## preserve wallpapers
			mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/Github/sources/backgrounds
			cp -vr /usr/share/backgrounds/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/Github/sources/backgrounds

			install -Dm644 "${ARCHLIVE}archlive/releng/root-image/etc/skel/Github/mooOS-dev-tools/misc/man.1" "${ARCHLIVE}archlive/releng/root-image/usr/local/man/man1/mooOS.1"
			gzip -f ${ARCHLIVE}archlive/releng/root-image/usr/local/man/man1/mooOS.1

			echo "${bldyellow}Removing previous build and work directories...${txtrst}"
			
			## deprecated method
			if [ -d "${ARCHLIVE}archlive/releng/work" ]; then
				rm -r ${ARCHLIVE}archlive/releng/work
			fi

			## new method
			if [ -d "$ISO_DIR" ]; then
				rm -r "$ISO_DIR"
			fi
			if [ -d "$WORK_DIR" ]; then
				rm -r "$WORK_DIR"
			fi

			## create pacman.conf for build
			mkdir -v "$WORK_DIR" && cp ${MOO_HOME}github/mooOS-dev-tools/misc/pacman.conf ${WORK_DIR}/pacman.conf

			mkdir -v "${ARCHLIVE}archlive/releng/work"
			
			## create pacman.conf for livecd
			cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/pacman.conf ${ARCHLIVE}archlive/releng/work/pacman.conf
			
			## create pacman.conf for livecd specific to architecture
			cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/pacman-x86_64.conf ${ARCHLIVE}archlive/releng/root-image/etc/pacman-x86_64.conf
			cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/pacman-i686.conf ${ARCHLIVE}archlive/releng/root-image/etc/pacman-i686.conf
			cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/pacman-x86_64.conf ${ARCHLIVE}archlive/releng/work/pacman-x86_64.conf
			cp -v ${MOO_HOME}github/mooOS-dev-tools/misc/pacman-i686.conf ${ARCHLIVE}archlive/releng/work/pacman-i686.conf

			## packages lists
			#cp -v ${MOO_HOME}github/mooOS-dev-tools/packages.both ${ARCHLIVE}archlive/releng/packages.both
			pacman -Qqe  | grep -vx "$(pacman -Qqg base)" | grep -vx "$(cat ${MOO_HOME}github/mooOS-dev-tools/backup_exclude_pkgs)" > ${ARCHLIVE}archlive/releng/packages.both
			cp -v ${MOO_HOME}github/mooOS-dev-tools/packages.extra ${ARCHLIVE}archlive/releng/packages.extra
			cp -v ${MOO_HOME}github/mooOS-dev-tools/packages-server.both ${ARCHLIVE}archlive/releng/packages-server.both
			cp -v ${MOO_HOME}github/mooOS-dev-tools/packages.i686 ${ARCHLIVE}archlive/releng/packages.i686
			cp -v ${MOO_HOME}github/mooOS-dev-tools/packages.x86_64 ${ARCHLIVE}archlive/releng/packages.x86_64

			## copy over boot splash screen and mooOS branding
			cp -v ${ARCHLIVE}archlive/releng/syslinux/splash.png ${ARCHLIVE}archlive/releng/root-image/etc/grub.d/splash.png
			convert ${ARCHLIVE}archlive/releng/root-image/etc/grub.d/splash.png ${ARCHLIVE}archlive/releng/root-image/etc/grub.d/splash.jpg
			#cp -v /etc/arch-release ${ARCHLIVE}archlive/releng/root-image/etc/arch-release
		fi

		echo "
${bldred}Building iso now...${txtrst}
"

		## change to build directory and build iso
		cd ${ARCHLIVE}archlive/releng
		 ./build.sh -v -o "$ISO_DIR" -w "$WORK_DIR" -N "$ISO_NAME" -V "$ISO_VERSION" -L "$ISO_LABEL"
		#2>&1 >> ${MOO_HOME}output.txt

		echo "
${bldred}iso built${txtrst}
"

		## unmount work env
		question="${bldyellow}Do you wish to unmount the work env (Y/N)?\n${txtrst}"
		if ask_something; then
			umount $WORK_DIR/x86_64/root-image/dev
			umount $WORK_DIR/x86_64/root-image/
			umount $WORK_DIR/i686/root-image/dev
			umount $WORK_DIR/i686/root-image/
		fi

		## sync .iso to remote server
		question="${bldyellow}Do you wish to rysnc this .iso to remote server (Y/N)?\n${txtrst}"
		if ask_something; then
			## create initial old hash
			if [ ! -f "$OLDHASH" ]; then
				su -l $MOO_USER -c "echo 53ef866dd48dcbd620cf402d845c2ec5 > $OLDHASH"
			fi

			echo "
generating md5sums... please wait a moment
"
			# md5sums of current and old .iso
			MD5HASH=$(md5sum $ISO_DIR/*.iso | cut -d " " -f 1)

			## create initial current hash
			if [ ! -f "$CURRENTHASH" ]; then
				su -l $MOO_USER -c "echo $MD5HASH > $CURRENTHASH"
			fi

			CURMD5HASH=$(cat $CURRENTHASH)
			OLDMD5HASH=$(cat $OLDHASH)
			NEW=0
			## if new iso create hashes
			if [ "$CURMD5HASH" != "$MD5HASH" ]; then
				su -l $MOO_USER -c "echo $CURMD5HASH > $OLDHASH"
				su -l $MOO_USER -c "echo $MD5HASH > $CURRENTHASH"
				NEW=1
			fi

			OLDMD5HASH=$(cat $OLDHASH)

			echo "The old md5sum was $OLDMD5HASH the new md5sum is $MD5HASH"

			## replace old hash with new hash in info.php on local web server
			su -l $MOO_USER -c "sed -i \"s/$OLDMD5HASH/$MD5HASH/g\" /mnt/linux-pdq/media/truecrypt1/domains/pdqblog/info.php"

			## create initial old name
			if [ ! -f "$OLDNAME" ]; then
				su -l $MOO_USER -c "echo mooOS-2013.09.02-beta-0.99-dual.iso > $OLDNAME"
			fi

			## create initial current name
			if [ ! -f "$CURRENTNAME" ]; then
				su -l $MOO_USER -c "ls $ISO_DIR > $CURRENTNAME"
			fi

			NEW_NAME_LIST=$(ls $ISO_DIR)
			CURRELNAME=$(cat $CURRENTNAME)
			OLDRELNAME=$(cat $OLDNAME)

			NEW_NAME=0
			## if new iso create release name
			if [ "$CURRELNAME" != "$NEW_NAME_LIST" ]; then
				su -l $MOO_USER -c "echo $CURRELNAME > $OLDNAME"
				su -l $MOO_USER -c "echo $NEW_NAME_LIST > $CURRENTNAME"
				NEW_NAME=1
			fi

			CURRELNAME=$(cat $CURRENTNAME)
			OLDRELNAME=$(cat $OLDNAME)

			echo "The old release name was $OLDRELNAME the new release name is $CURRELNAME"
			## replace old release name with new release name in info.php on local web server
			if [ $NEW_NAME -eq 1 ]; then
				su -l $MOO_USER -c "sed -i \"s/$OLDRELNAME/$CURRELNAME/g\" /mnt/linux-pdq/media/truecrypt1/domains/pdqblog/info.php"
			fi

			if [ $NEW -eq 1 ]; then
				echo "
================syncing iso to local storage repos===================
"
				su -l $MOO_USER -c "rm $ISO_STORAGE/$ISO_NAME-beta-dual-old.iso"
				su -l $MOO_USER -c "cp -fv $ISO_STORAGE/$ISO_NAME-beta-dual.iso $ISO_STORAGE/$ISO_NAME-beta-dual-old.iso"
				su -l $MOO_USER -c "rm $ISO_STORAGE/$ISO_NAME-beta-dual.iso"
				su -l $MOO_USER -c "cp -fv $ISO_DIR/*.iso $ISO_STORAGE/$ISO_NAME-beta-dual.iso"

				## Mount server filesystem to localhost
				# path to remote repo credentials file
				su -l $MOO_USER -c "cat /mnt/linux-pdq/media/truecrypt1/private/repo_creds > /tmp/repo_creds"
				REPO_CREDS=/tmp/repo_creds

				## if remote web server exists
				if [ "$REPO_CREDS" ] ; then
					. $REPO_CREDS

					## rsync .iso using vars defined in credentials, e.g.:
					port=$(eval echo $(echo '${'_iso_sync[1]'}'))
					flags=$(eval echo $(echo '${'_iso_sync[4]'}'))
					src=$(eval echo $(echo '${'_iso_sync[2]'}'))
					dest=$(eval echo $(echo '${'_iso_sync[3]'}'))

					## copy info.php with new hash to remote web server
					echo "
================syncing info.php to remote web server===================
"
					su -l $MOO_USER -c "torsocks scp /mnt/linux-pdq/media/truecrypt1/domains/pdqblog/info.php $dest/public_html/"
					echo "
================syncing iso to remote server===================
"
					echo "
This may take a while...
"
					su -l $MOO_USER -c "rsync -avzcPh $flags -e 'ssh -p $port' $src $dest" # -n, --dry-run perform a trial run with no changes made

					rm "$REPO_CREDS"
				fi
			fi
		fi
	fi
else ## as $USER
	## create the build environment and preparation

	question="${bldyellow}Run system updates? (Y/N)?\n${txtrst}"
	if ask_something; then
		question="${bldyellow}with --devel? (Y/N)?\n${txtrst}"
		if ask_something; then
			devel= --devel
		fi

		echo "
${bldred}Applying x86_64 updates...${txtrst}
"
		sudo pacman -Syu && pacaur -Syua$devel
		echo "
${bldred}Applying i686 updates...${txtrst}
"
		schroot -p -- sudo pacman -Syu && schroot -p -- pacaur -Syua$devel
	fi

	question="${bldyellow}Sync to github? (Y/N)?\n${txtrst}"
	if ask_something; then
		## push latest code to github
		gh -b ## https://github.com/idk/gh
	fi

	echo "
${bldred}Copying configuration files and recreating repos now...${txtrst}
"

	question="${bldyellow}Rebrand packages? (gh/vb-pdq/filesystem/grub/lsb-release/syslinux/hardinfo) (Y/N)?\n${txtrst}"
	if ask_something; then
		## sync ABS
			echo "
${bldred}Syncing Arch Build System...${txtrst}
"
		sudo abs

		## install custom mooOS packages
		## wallpapers
		# cd ${MOO_HOME}github/mooOS-wallpapers
		# makepkg -sf
		# schroot -p -- makepkg -sf

		## github wrapper
		rm -v ${ABS_BASE_DIR}mooOS-pkgs-32/gh*
		rm -v ${ABS_BASE_DIR}mooOS-pkgs-64/gh*
		rm -fr ${MOO_HOME}abs/gh
		mkdir -p ${MOO_HOME}abs/gh
		cd ${MOO_HOME}abs/gh
		wget https://raw.github.com/idk/gh/master/PKGBUILD
		makepkg -sf
		schroot -p -- makepkg -sf

		## vimb web browser and tabbed, patched!
		# rm -v ${ABS_BASE_DIR}mooOS-pkgs-32/vb-pdq*
		# rm -v ${ABS_BASE_DIR}mooOS-pkgs-64/vb-pdq*
		# rm -fr ${MOO_HOME}abs/vb-pdq
		# mkdir -p ${MOO_HOME}abs/vb-pdq
		# cd ${MOO_HOME}abs/vb-pdq
		# wget https://raw.github.com/idk/vb-pdq/master/PKGBUILD
		# wget https://raw.github.com/idk/vb-pdq/master/vb-pdq.install
		# makepkg -sf
		# schroot -p -- makepkg -sf

		## make custom branded packages

		## FILESYSTEM
		rm -v ${ABS_BASE_DIR}mooOS-pkgs-32/filesystem*
		rm -v ${ABS_BASE_DIR}mooOS-pkgs-64/filesystem*
		rm -fr ${MOO_HOME}abs/filesystem
		cp -r /var/abs/core/filesystem/ ${MOO_HOME}abs
		cp -vf ${MOO_HOME}github/mooOS-dev-tools/filesystem/issue ${MOO_HOME}abs/filesystem/
		cp -vf ${MOO_HOME}github/mooOS-dev-tools/filesystem/os-release ${MOO_HOME}abs/filesystem/
		FILESYSTEM_HASH=$(md5sum ${MOO_HOME}abs/filesystem/issue | awk '{print $1}')
		FILESYSTEM2_HASH=$(md5sum ${MOO_HOME}abs/filesystem/os-release | awk '{print $1}')
		sed -i "s/7813c481156f6b280a3ba91fc6236368/$FILESYSTEM_HASH/g" ${MOO_HOME}abs/filesystem/PKGBUILD
		sed -i "s/b16a4674ccf3a932ff34c6c8393a4f33/$FILESYSTEM2_HASH/g" ${MOO_HOME}abs/filesystem/PKGBUILD
		cd ${MOO_HOME}abs/filesystem
		makepkg -sf
		schroot -p -- makepkg -sf

		## LSB-RELEASE
		rm -v ${ABS_BASE_DIR}mooOS-pkgs-32/lsb-release*
		rm -v ${ABS_BASE_DIR}mooOS-pkgs-64/lsb-release*
		rm -fr ${MOO_HOME}abs/lsb-release
		cp -r /var/abs/community/lsb-release/ ${MOO_HOME}abs
		cp -vf ${MOO_HOME}github/mooOS-dev-tools/filesystem/PKGBUILD ${MOO_HOME}abs/lsb-release/
		cp -vf ${MOO_HOME}github/mooOS-dev-tools/filesystem/lsb-release.install ${MOO_HOME}abs/lsb-release/
		cd ${MOO_HOME}abs/lsb-release
		makepkg -sf
		schroot -p -- makepkg -sf

		## GRUB
		rm -v ${ABS_BASE_DIR}mooOS-pkgs-32/grub*
		rm -v ${ABS_BASE_DIR}mooOS-pkgs-64/grub*
		rm -fr ${MOO_HOME}abs/grubtesting
		cp -r /var/abs/testing/grub ${MOO_HOME}abs/grubtesting
		sed -i "s/\"Arch\"/\"MooOS\"/g" ${MOO_HOME}abs/grubtesting/grub.default
		sed -i "s/Arch Linux/MooOS GNU\/Linux/g" ${MOO_HOME}abs/grubtesting/grub.cfg
		GRUB_HASH=$(md5sum ${MOO_HOME}abs/grubtesting/grub.default | awk '{print $1}')
		GRUB_HASH2=$(md5sum ${MOO_HOME}abs/grubtesting/grub.cfg | awk '{print $1}')
		sed -i "s/a03ffd56324520393bf574cefccb893d/$GRUB_HASH/g" ${MOO_HOME}abs/grubtesting/PKGBUILD
		sed -i "s/c8b9511586d57d6f2524ae7898397a46/$GRUB_HASH2/g" ${MOO_HOME}abs/grubtesting/PKGBUILD

		cd ${MOO_HOME}abs/grubtesting
		makepkg -sf
		schroot -p -- makepkg -sf

		## SYSLINUX
		rm -v ${ABS_BASE_DIR}mooOS-pkgs-32/syslinux*
		rm -v ${ABS_BASE_DIR}mooOS-pkgs-64/syslinux*
		rm -fr ${MOO_HOME}abs/syslinux
		cp -r /var/abs/core/syslinux/ ${MOO_HOME}abs
		sed -i "s/Arch Linux/MooOS GNU\/Linux/g" ${MOO_HOME}abs/syslinux/syslinux.cfg
		SYSLINUX_HASH=$(md5sum ${MOO_HOME}abs/syslinux/syslinux.cfg | awk '{print $1}')
		sed -i "s/46ca150f53322ff8f1597d9a342f7e40/$SYSLINUX_HASH/g" ${MOO_HOME}abs/syslinux/PKGBUILD
		cd ${MOO_HOME}abs/syslinux
		makepkg -sf
		schroot -p -- makepkg -sf

		## HARDINFO
		rm -v ${ABS_BASE_DIR}mooOS-pkgs-32/hardinfo*
		rm -v ${ABS_BASE_DIR}mooOS-pkgs-64/hardinfo*
		rm -fr ${MOO_HOME}abs/hardinfo
		cp -r /var/abs/community/hardinfo/ ${MOO_HOME}abs
		sed -i "s/Arch Linux/MooOS GNU\/Linux/g" ${MOO_HOME}abs/hardinfo/hardinfo.distro
		HARDINFO_HASH=$(sha1sum ${MOO_HOME}abs/hardinfo/hardinfo.distro | awk '{print $1}')
		sed -i "s/\"arch\"/\"mooos\"/g" ${MOO_HOME}abs/hardinfo/PKGBUILD
		sed -i "s/4c31cbbfbdeb48593641ff600c8d4fb7bda2b01c/$HARDINFO_HASH/g" ${MOO_HOME}abs/hardinfo/PKGBUILD
		cd ${MOO_HOME}abs/hardinfo
		makepkg -sf
		#TODO
		schroot -p -- makepkg -sf
	fi

	## delete useless package caches
	echo "
${bldred}Deleting old packages cache...${txtrst}
"
	sudo pkgcacheclean -v 1
	schroot -p -- sudo pkgcacheclean -v 1
	sudo pkgcacheclean -v -k --cachedir=${ABS_BASE_DIR}mooOS-pkgs-32/ 1
	sudo pkgcacheclean -v -k --cachedir=${ABS_BASE_DIR}mooOS-pkgs-64/ 1
	sudo pkgcacheclean -v -k --cachedir=${ARCHLIVE}mooOS/i686 1
	sudo pkgcacheclean -v -k --cachedir=${ARCHLIVE}mooOS/x86_64 1

	## DEBUG
	exit 0

	question="${bldyellow}Create and cleanup mooOS repos? (Y/N)?\n${txtrst}"
	if ask_something; then
		cd "$PWD"

		## remove existing repos
		rm -v ${ABS_BASE_DIR}mooOS-pkgs-32/mooOS.db.tar.gz
		rm -v ${ABS_BASE_DIR}mooOS-pkgs-64/mooOS.db.tar.gz
		#rm ${ABS_BASE_DIR}mooOS-utils/mooOS-utils.db.tar.gz

		## make RMS happy :D
		rm -v ${ABS_BASE_DIR}mooOS-pkgs-*/*-libre-*
		cp -v /var/cache/pacman/pkg/*-libre-*-i686* ${ABS_BASE_DIR}mooOS-pkgs-32/
		cp -v /var/cache/pacman/pkg/*-libre-*-x86_64* ${ABS_BASE_DIR}mooOS-pkgs-64/

		rm -v ${ABS_BASE_DIR}mooOS-pkgs-*/*-libre-*any*
		cp -v /var/cache/pacman/pkg/*-libre-*-any* ${ABS_BASE_DIR}mooOS-pkgs-32/
		cp -v /var/cache/pacman/pkg/*-libre-*-any* ${ABS_BASE_DIR}mooOS-pkgs-64/

		rm -v ${ABS_BASE_DIR}mooOS-pkgs-*/unar-*
		cp -v /var/cache/pacman/pkg/unar-*-i686* ${ABS_BASE_DIR}mooOS-pkgs-32/
		cp -v /var/cache/pacman/pkg/unar-*-x86_64* ${ABS_BASE_DIR}mooOS-pkgs-64/

		rm -v ${ABS_BASE_DIR}mooOS-pkgs-*/opencollada-*
		cp -v /var/cache/pacman/pkg/opencollada-*-i686* ${ABS_BASE_DIR}mooOS-pkgs-32/
		cp -v /var/cache/pacman/pkg/opencollada-*-x86_64* ${ABS_BASE_DIR}mooOS-pkgs-64/

		rm -v ${ABS_BASE_DIR}mooOS-pkgs-*/mozilla-searchplugins-*
		cp -v /var/cache/pacman/pkg/mozilla-searchplugins-*-any* ${ABS_BASE_DIR}mooOS-pkgs-32/
		cp -v /var/cache/pacman/pkg/mozilla-searchplugins-*-any* ${ABS_BASE_DIR}mooOS-pkgs-64/

		## create repo databases
		echo "
	${bldred}Re-creating i686 repository${txtrst}
	"
		repo-add -k $GPGKEY ${ABS_BASE_DIR}mooOS-pkgs-32/mooOS.db.tar.gz ${ABS_BASE_DIR}mooOS-pkgs-32/*.pkg.tar.xz
		echo "
	${bldred}Re-creating x86_64 repository${txtrst}
	"
		repo-add -k $GPGKEY ${ABS_BASE_DIR}mooOS-pkgs-64/mooOS.db.tar.gz ${ABS_BASE_DIR}mooOS-pkgs-64/*.pkg.tar.xz
		#echo "${bldyellow}Re-creating utils repository${txtrst}"
		#repo-add ${ABS_BASE_DIR}mooOS-utils/mooOS-utils.db.tar.gz ${ABS_BASE_DIR}mooOS-pkgs-64/*.pkg.tar.xz >> $REPO_LOG_TEMP 2>&1

		## format log a little
		echo $(date -d "today" +"%Y%m%d%H%M") >> $REPO_LOG_TEMP
		sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g" $REPO_LOG_TEMP >> $REPO_LOG

		## clean up stable repos
		## re-create repos local and remote
		echo "
	================syncing to local repos===================
	"
		rsync -avzrcpPh --delete --stats ${REPO_BASE_DIR}/i686/ ${ABS_BASE_DIR}mooOS-pkgs-32-out-of-date
		rsync -avzrcpPh --delete --stats ${REPO_BASE_DIR}/x86_64/ ${ABS_BASE_DIR}mooOS-pkgs-64-out-of-date
		rsync -avzrcpPh --delete --stats ${ABS_BASE_DIR}/mooOS-pkgs-32/ ${REPO_BASE_DIR}/i686
		rsync -avzrcpPh --delete --stats ${ABS_BASE_DIR}/mooOS-pkgs-64/ ${REPO_BASE_DIR}/x86_64
	fi

	question="${bldyellow}Sync remote mooOS repo? (Y/N)?\n${txtrst}"
	if ask_something; then
		## remote repo
		## include login credentials:
		if [ -f "$REPO_CREDS" ] ; then
			echo "
	================syncing to remote repos===================
	"
			. $REPO_CREDS

			## rsync using vars defined in credentials, e.g.:
			#for i in {1..5}
			for i in $(eval echo {1..$_remote_count})
			do
				port=$(eval echo $(echo '${'_remote$i[1]'}'))
				flags=$(eval echo $(echo '${'_remote$i[4]'}'))
				src=$(eval echo $(echo '${'_remote$i[2]'}'))
				dest=$(eval echo $(echo '${'_remote$i[3]'}'))
				torsocks rsync -avzrcPh $flags -e "torsocks ssh -p $port" $src $dest # -n, --dry-run perform a trial run with no changes made
			done
		fi
	fi

	notify-send "User portion of script complete"

	echo "
${bldred}Re-running this script as root!${txtrst}
"
	sleep 2s
	## re-run script as root
 	sudo $0
fi

exit 0
