#!/usr/bin/sh
## this file is part of mooOS
## create edj backgrounds by pdq 2013

# Text color variables (there is no need change these)
txtbld=$(tput bold)                # bold
bldred=${txtbld}$(tput setaf 1)    # red
#bldgreen=${txtbld}$(tput setaf 2)  # green
bldyellow=${txtbld}$(tput setaf 3) # yellow
bldblue=${txtbld}$(tput setaf 4)    # blue
txtrst=$(tput sgr0)                # reset

# Functions
ask_something() {
	echo -ne $question
	while read -r -n 1 -s yn; do
		if [[ $yn = [YyNn] ]]; then
			[[ $yn = [Yy] ]] && return=0
			[[ $yn = [Nn] ]] && return=1
			break
		fi
	done
	return $return
}

cbg_help() {
	echo  "Usage: $(basename $0) [-{V|R|n|q|h}]" 1>&2
	exit 0
}


CBG_ROOT=; CBG_BACKUP=YES; CBG_VERBOSE=" "
while getopts "qhVnR" opt
do
	case $opt in
		V) echo "$(basename $0): Version: 0.0.3 Date: 2013 Author: pdq URL: https://github.com/idk"
		   exit 0;;
		R) CBG_ROOT=YES;;
		n) CBG_BACKUP=;;
		q) CBG_VERBOSE=" -v ";;
		h) cbg_help;;
	esac
done

question="${bldyellow}You wish to create e17 backgrounds (.edj) from wallpapers (.jpg) (Y/N)?\nThis will ${txtrst}"
if ask_something; then
	
	## VARIABLES
	WALLPAPER_DIR="$HOME/Pictures/wallpapers_go_here"
	BACKUP_DIR="$HOME/Dev/mooOS_backups"

	if [ "$CBG_ROOT" = "YES" ]; then
		E17_ROOT_FINISHED_DIR="/usr/share/enlightenment/data/backgrounds"
	else
		E17_FINISHED_DIR="$HOME/.e/e/backgrounds"
	fi

	TEMPLATE_EDC=$BACKUP_DIR/_do_not_remove/wallpaper01.edc-tmp ## DO NOT DELETE THIS FILE

	## filenames
	LABEL=$(date +"%F_%T")
	LABEL2=$(date +"%F")
	BACKGROUNDS_TAR="$LABEL2-original_wallpapers"
	WALLPAPER_TAR="$LABEL2-original_backgrounds"

	if [ ! -d "$BACKUP_DIR" ]; then
		mkdir$CBG_VERBOSE-p "$BACKUP_DIR/_do_not_remove"
		mkdir$CBG_VERBOSE-p "$BACKUP_DIR/backgrounds"
		mkdir$CBG_VERBOSE-p "$BACKUP_DIR/wallpapers"
		echo "images { image: \"wallpaper01.jpg\" LOSSY 90; }
collections {
group { name: \"e/desktop/background\";
data { item: \"style\" \"4\"; }
data.item: \"noanimation\" \"0\";
max: 1920 1280;
parts {
part { name: \"bg\"; mouse_events: 0;
description { state: \"default\" 0.0;
aspect: 1.500000000 1.500000000; aspect_preference: NONE;
image { normal: \"wallpaper01.jpg\";  scale_hint: STATIC; }
} } } } }" > $BACKUP_DIR/_do_not_remove/wallpaper01.edc-tmp
	fi

	if [ ! -d "$WALLPAPER_DIR" ]; then
		mkdir$CBG_VERBOSE-p "$WALLPAPER_DIR"
	fi

	if [ ! -d "$E17_FINISHED_DIR" ]; then
		mkdir$CBG_VERBOSE-p "$E17_FINISHED_DIR"
	fi


	cd "$WALLPAPER_DIR"
	let "COUNT_IMAGES=$(ls | wc -l) - 1" 
	i=1;

	if [ "$COUNT_IMAGES" -ge "1" ]; then
		shopt -s nullglob;

		for f in *.jpg *.gif *.png *.jpeg *.JPG *.JPEG *.GIF; do
		    EXT="${f##*.}"
		    EXT=${EXT,,}
		    EXT=${EXT/jpeg/jpg}
		    mkdir$CBG_VERBOSE-p "0$i"
		    cp -- "$f" "$WALLPAPER_DIR/0$i/wallpaper0$i.${EXT}";
		    ((i++));
		done

		for I in $(eval echo {1..$COUNT_IMAGES})
		do
			for NEW_FILE in wallpaper0$I.edc-tmp
			do
				let "MINUS= $I - 1"
				OLD_FILE="wallpaper0$MINUS.edc-tmp"
				if [ "0$I" = "01" ]; then
			    	cp$CBG_VERBOSE "$TEMPLATE_EDC" "$WALLPAPER_DIR/0$I/$NEW_FILE"
			    else
			    	cp$CBG_VERBOSE "$WALLPAPER_DIR/0$MINUS/$OLD_FILE" "$WALLPAPER_DIR/0$I/${NEW_FILE/#0$MINUS/0$I}"
			    fi

			    sed -i "s/wallpaper0$MINUS/wallpaper0$I/g" "$WALLPAPER_DIR/0$I/$NEW_FILE"

			    cd "$WALLPAPER_DIR/0$I"
			    edje_cc $@ -id . -fd . "wallpaper0$I.edc-tmp" -o "$E17_FINISHED_DIR/mooOS_0$I.edj"
			    cd "$WALLPAPER_DIR"
			    let "I++"
		    done
		done

		if [ "$CBG_BACKUP" = "YES" ]; then
			tar -czvf $WALLPAPER_TAR.tar.gz *.* --exclude=README.txt --exclude=$BACKGROUNDS_TAR.tar.gz
		fi
		
		find $WALLPAPER_DIR/ -maxdepth 1 -type f -name "*.jpg" -delete
		
		if [ "$CBG_BACKUP" = "YES" ]; then
			tar -czvf $BACKGROUNDS_TAR.tar.gz * --exclude=README.txt
			mv$CBG_VERBOSE "$WALLPAPER_DIR/$WALLPAPER_TAR.tar.gz" "$BACKUP_DIR/wallpapers/$WALLPAPER_TAR.tar.gz"
			mv$CBG_VERBOSE "$WALLPAPER_DIR/$BACKGROUNDS_TAR.tar.gz" "$BACKUP_DIR/backgrounds/$BACKGROUNDS_TAR.tar.gz"
		fi

		rm -rfv "$WALLPAPER_DIR"/*
		#mkdir$CBG_VERBOSEp "$WALLPAPER_DIR"
		if [ "$CBG_BACKUP" = "YES" ]; then
			cp$CBG_VERBOSE "$BACKUP_DIR/backgrounds/$BACKGROUNDS_TAR.tar.gz" "$WALLPAPER_DIR/$BACKGROUNDS_TAR.tar.gz"
			cp$CBG_VERBOSE "$BACKUP_DIR/wallpapers/$WALLPAPER_TAR.tar.gz" "$WALLPAPER_DIR/$WALLPAPER_TAR.tar.gz"
			_LOG_ADDITION="Created $WALLPAPER_TAR.tar.gz and $BACKGROUNDS_TAR.tar.gz and copied these to $BACKUP_DIR
"
			_STDOUT_ADDITION="${bldyellow}Created${txtrst} ${bldblue}$WALLPAPER_TAR.tar.gz${txtrst} ${bldyellow}and${txtrst} ${bldblue}$BACKGROUNDS_TAR.tar.gz${txtrst} ${bldyellow}in $BACKUP_DIR${txtrst}
"
		fi

		echo "
============ Success ===============
====================================

${bldyellow}Installed${txtrst} ${bldblue}$COUNT_IMAGES e17 backgrounds${txtrst} ${bldyellow}into $E17_FINISHED_DIR${txtrst}

${_STDOUT_ADDITION}
============= Exiting ==============
===================================="

		echo "$LABEL" >> $BACKUP_DIR/README.txt

		echo "
===========
Created $COUNT_IMAGES e17 backgrounds.
Installed the .edj files into $E17_FINISHED_DIR.
${_LOG_ADDITION}
You may remove these files manually now or leave them and they will be removed automatically on t he next run.

-----------
" >> $BACKUP_DIR/README.txt

		cp$CBG_VERBOSE "$BACKUP_DIR/README.txt" "$WALLPAPER_DIR/README.txt"

		notify-send "Moo"
	fi
else
	echo "No images found in $WALLPAPER_DIR"
	notify-send "No images found"
fi

exit 0
