#!/usr/bin/bash
## Part of mooOS-dev-tools - https://github.com/idk/mooOS-dev-tools
## pdq 08-13-2013 - PRESENT
## License: GPL3

## This script contains the mooOS-dev-tools functions

## generic yes/no function
ask_something() {
	echo -ne $question
	while read -r -n 1 -s yn; do
		if [[ $yn = [YyNn] ]]; then
			[[ $yn = [Yy] ]] && return=0
			[[ $yn = [Nn] ]] && return=1
			break
		fi
	done
	return $return
}

check_repos() {
	while true
	do
		if [ $2 -eq 1 ]; then
			torsocks curl -s -o "/dev/null" "$1"
		else
			curl -s -o "/dev/null" "$1"
		fi

		if [ $? -ne 0 ] ; then
			echo "Error occurred getting URL $1: rechecking in 10 seconds"
		elif [ $? -eq 6 ]; then
			echo "Unable to resolve host: rechecking in 10 seconds"
		elif [ $? -eq 7 ]; then
			echo "Unable to connect to host: rechecking in 10 seconds"
		else
			echo "$1 is UP! :D proceeding..."
			notify-send "$1 is UP! :D proceeding..." -i "$MOO_ICON"

			break
		fi
		sleep 10s
	done
}

create_packages_list() {
	question="${bldyellow}Run github sync? (Y/N)?\n${txtrst}"
	if ask_something; then
		if [ $(id -u) -eq 0 ]; then
			pacman -Qqe  | grep -vx "$(pacman -Qqg base)" | grep -vx "$(cat ${MOO_TOOLS_PATH}exclude_pkgs)" > ${MOO_TOOLS_PATH}packages.both
			su -l $MOO_USER -c "gh -b"
		else
			su -l "root" -c "pacman -Qqe  | grep -vx \"$(pacman -Qqg base)\" | grep -vx \"$(cat ${MOO_TOOLS_PATH}exclude_pkgs)\" > ${MOO_TOOLS_PATH}packages.both"
			gh -b
		fi
	fi
}

do_system_updates() {
	question="${bldyellow}Run system updates? (Y/N)?\n${txtrst}"
	if ask_something; then
		question="${bldyellow}with --devel? (Y/N)?\n${txtrst}"
		if ask_something; then
			devel=" --devel"
		fi

		echo "${bldgreen}Applying i686 updates...${txtrst}"
		schroot -p -- sudo pacman -Syu && schroot -p -- pacaur -Syua$devel --noedit --rebuild
		notify-send "Applied i686 updates" -i "$MOO_ICON"
		echo "${bldgreen}Applying x86_64 updates...${txtrst}"
		sudo pacman -Syu && pacaur -Syua$devel --noedit --rebuild
		notify-send "Applied x86_64 updates" -i "$MOO_ICON"
	fi
}

repackage_this() {
	package_name="$1"
	package_repos="$2"
	package_type="$3"
	package_install="$4"
	delete_custom_package_caches "$package_name"
	mkdir -p "${MOO_HOME}abs/$package_name"
	cd "${MOO_HOME}abs/$package_name"
	for urls in $package_repos
	do
		wget "$urls"
	done
	if [ "$package_type" == "x86_64" ] || [ "$package_type" == "any" ]; then
		makepkg -sf$package_install
	fi
	if [ "$package_type" == "i686" ] || [ "$package_type" == "any" ]; then
		schroot -p -- makepkg -sf$package_install
	fi
	cd "$PWD"
}

create_custom_packages() {
	question="${bldyellow}Rebrand packages? (moo-tools/moo-scripts/moo-zsh/moo-wallpapers/gh/vb-pdq) (Y/N)?\n${txtrst}"
	if ask_something; then
		## moo-scripts
		delete_custom_package_caches "moo-scripts"
		repackage_this "moo-scripts" "https://raw.github.com/idk/bin/master/PKGBUILD" "any" i
		
		## moo-tools
		delete_custom_package_caches "moo-tools"
		repackage_this "moo-tools" "https://raw.github.com/idk/mooOS-dev-tools/master/installer/PKGBUILD https://raw.github.com/idk/mooOS-dev-tools/master/installer/moo-tools.install" "any" i
		
		## moo-zsh
		delete_custom_package_caches "moo-zsh"
		repackage_this "moo-zsh" "https://raw.github.com/idk/zsh/master/PKGBUILD https://raw.github.com/idk/zsh/master/moo-zsh.install" "any" i
	
		## github wrapper
		delete_custom_package_caches "gh"
		repackage_this "gh" "https://raw.github.com/idk/gh/master/PKGBUILD" "any" i

		## install custom mooOS wallpapers
		#delete_custom_package_caches "moo-wallpapers"
		#repackage_this "moo-wallpapers" "https://raw.github.com/idk/mooOS-wallpapers/master/PKGBUILD https://raw.github.com/idk/mooOS-wallpapers/master/moo-wallpapers.install http://repo.mooos.pdq/mooOS-wallpapers.tar.gz" "any"
		
		## vimb web browser and tabbed, patched!
		#delete_custom_package_caches "vb-pdq"
		#repackage_this "vb-pdq" "https://raw.github.com/idk/vb-pdq/master/PKGBUILD https://raw.github.com/idk/vb-pdq/master/vb-pdq.install" "any"
	fi
	question="${bldyellow}Rebrand packages? (filesystem/grub/lsb-release/syslinux/hardinfo) (Y/N)?\n${txtrst}"
	if ask_something; then
		## sync ABS
		echo "${bldgreen}Syncing Arch Build System...${txtrst}"
		sudo abs

		## FILESYSTEM
		delete_custom_package_caches "filesystem"
		cp -r /var/abs/core/filesystem/ ${MOO_HOME}abs
		cp -vf ${MOO_TOOLS_PATH}filesystem/issue ${MOO_HOME}abs/filesystem/
		cp -vf ${MOO_TOOLS_PATH}filesystem/os-release ${MOO_HOME}abs/filesystem/
		FILESYSTEM_HASH=$(md5sum ${MOO_HOME}abs/filesystem/issue | awk '{print $1}')
		FILESYSTEM2_HASH=$(md5sum ${MOO_HOME}abs/filesystem/os-release | awk '{print $1}')
		sed -i "s/7813c481156f6b280a3ba91fc6236368/$FILESYSTEM_HASH/g" ${MOO_HOME}abs/filesystem/PKGBUILD
		sed -i "s/b16a4674ccf3a932ff34c6c8393a4f33/$FILESYSTEM2_HASH/g" ${MOO_HOME}abs/filesystem/PKGBUILD
		cd ${MOO_HOME}abs/filesystem
		makepkg -sf
		schroot -p -- makepkg -sf
		cd "$PWD"

		## LSB-RELEASE
		delete_custom_package_caches "lsb-release"
		cp -r /var/abs/community/lsb-release/ ${MOO_HOME}abs
		cp -vf ${MOO_TOOLS_PATH}lsb-release/PKGBUILD ${MOO_HOME}abs/lsb-release/
		cp -vf ${MOO_TOOLS_PATH}lsb-release/lsb-release.install ${MOO_HOME}abs/lsb-release/
		cd ${MOO_HOME}abs/lsb-release
		makepkg -sf
		schroot -p -- makepkg -sf
		cd "$PWD"

		## GRUB
		delete_custom_package_caches "grub"
		cp -r /var/abs/testing/grub ${MOO_HOME}abs/grub
		sed -i "s/\"Arch\"/\"mooOS\"/g" ${MOO_HOME}abs/grub/grub.default
		sed -i "s/Arch Linux/mooOS GNU\/Linux/g" ${MOO_HOME}abs/grub/grub.cfg
		GRUB_HASH=$(md5sum ${MOO_HOME}abs/grub/grub.default | awk '{print $1}')
		GRUB_HASH2=$(md5sum ${MOO_HOME}abs/grub/grub.cfg | awk '{print $1}')
		sed -i "s/a03ffd56324520393bf574cefccb893d/$GRUB_HASH/g" ${MOO_HOME}abs/grub/PKGBUILD
		sed -i "s/c8b9511586d57d6f2524ae7898397a46/$GRUB_HASH2/g" ${MOO_HOME}abs/grub/PKGBUILD
		cd ${MOO_HOME}abs/grub
		makepkg -sf
		schroot -p -- makepkg -sf
		cd "$PWD"

		## SYSLINUX
		delete_custom_package_caches "syslinux"
		cp -r /var/abs/core/syslinux/ ${MOO_HOME}abs
		sed -i "s/Arch Linux/mooOS GNU\/Linux/g" ${MOO_HOME}abs/syslinux/syslinux.cfg
        sed -i "s,#MENU BACKGROUND splash.png,MENU BACKGROUND /usr/share/moo-tools/images/splash.png,g" ${MOO_HOME}abs/syslinux/syslinux.cfg
        sed -i "s/UI menu.c32/#UI menu.c32/g" ${MOO_HOME}abs/syslinux/syslinux.cfg
        sed -i "s/#UI vesamenu.c32/UI vesamenu.c32/g" ${MOO_HOME}abs/syslinux/syslinux.cfg
        sed -i "s/TIMEOUT 50/TIMEOUT 300/g" ${MOO_HOME}abs/syslinux/syslinux.cfg
		SYSLINUX_HASH=$(md5sum ${MOO_HOME}abs/syslinux/syslinux.cfg | awk '{print $1}')
		sed -i "s/46ca150f53322ff8f1597d9a342f7e40/$SYSLINUX_HASH/g" ${MOO_HOME}abs/syslinux/PKGBUILD
		cd ${MOO_HOME}abs/syslinux
		makepkg -sf
		schroot -p -- makepkg -sf
		cd "$PWD"

		## HARDINFO
		delete_custom_package_caches "hardinfo"
		cp -r /var/abs/community/hardinfo/ ${MOO_HOME}abs
		sed -i "s/Arch Linux/mooOS GNU\/Linux/g" ${MOO_HOME}abs/hardinfo/hardinfo.distro
		HARDINFO_HASH=$(sha1sum ${MOO_HOME}abs/hardinfo/hardinfo.distro | awk '{print $1}')
		sed -i "s/\"arch\"/\"mooos\"/g" ${MOO_HOME}abs/hardinfo/PKGBUILD
		sed -i "s/4c31cbbfbdeb48593641ff600c8d4fb7bda2b01c/$HARDINFO_HASH/g" ${MOO_HOME}abs/hardinfo/PKGBUILD
		cd ${MOO_HOME}abs/hardinfo
		makepkg -sf
		#TODO
		#schroot -p -- makepkg -sf
		cd "$PWD"
		notify-send "Rebranded packages" -i "$MOO_ICON"
	fi
}

delete_package_caches() {
	echo "${bldgreen}Deleting old packages cache...${txtrst}"
	#sudo pkgcacheclean -v 1
	schroot -p -- sudo pkgcacheclean -v 1
	sudo pkgcacheclean -v -k --cachedir=${ABS_BASE_DIR}mooOS-pkgs-32/ 1
	sudo pkgcacheclean -v -k --cachedir=${ABS_BASE_DIR}mooOS-pkgs-64/ 1
	sudo pkgcacheclean -v -k --cachedir=${MOO_HOME}abs/i686 1
	sudo pkgcacheclean -v -k --cachedir=${MOO_HOME}abs/x86_64 1
	mv ${ABS_BASE_DIR}mooOS-pkgs-32/*nvidia* ${ABS_BASE_DIR}nonfree/
	mv ${ABS_BASE_DIR}mooOS-pkgs-64/*nvidia* ${ABS_BASE_DIR}nonfree/
}

delete_custom_package_caches() {
	if [ "$1" != "" ]; then
		sudo rm -v ${ABS_BASE_DIR}mooOS-pkgs-32/$1-*
		sudo rm -v ${ABS_BASE_DIR}mooOS-pkgs-64/$1-*
		sudo rm -v ${MOO_HOME}abs/i686/$1-*
		sudo rm -v ${MOO_HOME}abs/x86_64/$1-*
		rm -fr ${MOO_HOME}abs/$1
	fi
}

rsync_iso_remote() {
	## sync .iso to remote server
	ARCH_ISO=$1

	question="${bldyellow}Do you wish to rysnc this ${ARCH_ISO} iso to local/remote servers (Y/N)?\n${txtrst}"
	if ask_something; then
		echo "
================syncing ${ARCH_ISO} iso to local storage repos===================
"
		su -l $MOO_USER -c "rm $ISO_STORAGE/mooOS-beta-${ARCH_ISO}-old.iso"
		su -l $MOO_USER -c "mv -fv $ISO_STORAGE/mooOS-beta-${ARCH_ISO}.iso $ISO_STORAGE/mooOS-beta-${ARCH_ISO}-old.iso"
		su -l $MOO_USER -c "cp -fv $ISO_DIR/*-${ARCH_ISO}.iso $ISO_STORAGE/mooOS-beta-${ARCH_ISO}.iso"

		## Mount server filesystem to localhost
		# path to remote repo credentials file
		su -l $MOO_USER -c "cat /mnt/linux-pdq/media/truecrypt1/private/repo_creds > /tmp/repo_creds"
		REPO_CREDS=/tmp/repo_creds

		## if remote web server exists
		if [ "$REPO_CREDS" ] ; then
			. $REPO_CREDS

			## override credentials file
			_iso_sync[2]="$ISO_STORAGE/mooOS-beta-${ARCH_ISO}.iso"

			## rsync .iso using vars defined in credentials, e.g.:
			port=$(eval echo $(echo '${'_iso_sync[1]'}'))
			flags=$(eval echo $(echo '${'_iso_sync[4]'}'))
			src=$(eval echo $(echo '${'_iso_sync[2]'}'))
			dest=$(eval echo $(echo '${'_iso_sync[3]'}'))

			echo "================syncing iso to remote server==================="
			echo "This may take a while..."
			su -l $MOO_USER -c "rsync -avcPh $flags -e 'ssh -p $port' $src $dest" # -n, --dry-run perform a trial run with no changes made

			rm "$REPO_CREDS"
		fi

		echo "${ARCH_ISO} synced"
		notify-send "${ARCH_ISO} synced" -i "$MOO_ICON"
	fi

	
}

umount_work_env() {
	## unmount work env
	moo=$1
	question="${bldyellow}Do you wish to unmount the $moo work env (Y/N)?\n${txtrst}"
	if ask_something; then
		umount $WORK_DIR/$moo/root-image/dev
		umount $WORK_DIR/$moo/root-image/
		rm -r $WORK_DIR/$moo
		rm $WORK_DIR/*$moo

		rm -r $WORK_DIR/iso/$moo/$moo
		rm $WORK_DIR/iso/$moo/*.$moo.*

		rm -r $WORK_DIR/iso/$moo/boot/$moo
	fi
}

create_build_env() {
	question="${bldyellow}You wish to skip to create iso (Y/N)? (default: no)\n${txtrst}"
	if ! ask_something; then
		PWD=$(pwd)
		echo "${bldyellow}Copying configuration files and recreating repos now...${txtrst}"

		## copy root files

		## profile-sync-daemon
		cp -v /etc/psd.conf ${ARCHLIVE}archlive/releng/root-image/etc/psd.conf
		
		## resolv.conf
		cp -v /etc/resolv.conf ${ARCHLIVE}archlive/releng/root-image/etc/resolv.conf
		
		## resolv.conf.head
		cp -v /etc/resolv.conf.head ${ARCHLIVE}archlive/releng/root-image/etc/resolv.conf.head
		
		## dnsmasq
		cp -v /etc/dnsmasq.conf ${ARCHLIVE}archlive/releng/root-image/etc/dnsmasq.conf
		
		## dhcpcd
		cp -v /etc/dhcpcd.conf ${ARCHLIVE}archlive/releng/root-image/etc/dhcpcd.conf
		
		## nano config
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/usr/share/nano
		cp -v /usr/share/nano/pkgbuild.nanorc ${ARCHLIVE}archlive/releng/root-image//usr/share/nano/pkgbuild.nanorc
		
		## e17 backgrounds
		cp -v /usr/share/enlightenment/data/backgrounds/mooOS* ${ARCHLIVE}archlive/releng/root-image/usr/share/enlightenment/data/backgrounds
		
		## tor config
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/tor
		cp -v /etc/torrc ${ARCHLIVE}archlive/releng/root-image/etc/tor/torrc
		
		## privoxy config
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/privoxy
		sh -c "echo 'forward-socks5 / localhost:9050 .' > ${ARCHLIVE}archlive/releng/root-image/etc/privoxy/config"
		
		## dansguardian config
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/dansguardian
		cp -v /etc/dansguardian/dansguardian.conf ${ARCHLIVE}archlive/releng/root-image/etc/dansguardian/dansguardian.conf
		
		## squid config
		#mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/squid
		#cp -v /etc/squid/squid.conf ${ARCHLIVE}archlive/releng/root-image/etc/squid/squid.conf

		## TODO
		#mv -v /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.bak
		#cp -v ${dev_directory}etc/httpd.conf /etc/httpd/conf/httpd.conf
		#cp -v ${dev_directory}etc/httpd-phpmyadmin.conf /etc/httpd/conf/extra/httpd-phpmyadmin.conf
		#mv -v /etc/php/php.ini /etc/php/php.ini.bak
		#cp -v ${dev_directory}etc/php.ini /etc/php/php.ini

		## copy over custom .desktop files
		#mkdir -vp ${ARCHLIVE}archlive/releng/root-image/usr/share/applications
		#cp -v ${MOO_TOOLS_PATH}applications/*.desktop ${ARCHLIVE}archlive/releng/root-image/usr/share/applications/
		
		## copy over ~/bin
		#mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/bin
		#cp -vr ${MOO_HOME}bin/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/bin
		
		## copy over pentadactyl files
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.pentadactyl/colors
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.pentadactyl/plugins
		cp -vr ${MOO_HOME}.pentadactyl/colors/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.pentadactyl/colors
		cp -vr ${MOO_HOME}.pentadactyl/plugins/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.pentadactyl/plugins
		
		## copy over rss reader files
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.canto-ng
		cp -v ${MOO_HOME}.canto-ng/config ${ARCHLIVE}archlive/releng/root-image/etc/skel/.canto-ng/config
		
		## copy over firefox files
		su -l $MOO_USER -c "cp -vr ${MOO_HOME}.mozilla/firefox/qrtww0pl.Default-User/* ${MOO_HOME}info/firefox/qrtww0pl.Default-User"
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.mozilla/firefox/qrtww0pl.Default-User
		cp -vr ${MOO_HOME}info/firefox/qrtww0pl.Default-User/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.mozilla/firefox/qrtww0pl.Default-User
		
		## copy over ~/.local files
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.local/applications
		cp -v ${MOO_HOME}.local/applications/defaults.list ${ARCHLIVE}archlive/releng/root-image/etc/skel/.local/applications/defaults.list
		cp -v ${MOO_HOME}.local/applications/tabbed.desktop ${ARCHLIVE}archlive/releng/root-image/etc/skel/.local/applications/tabbed.desktop
		cp -v ${MOO_HOME}.local/applications/URxvt.desktop ${ARCHLIVE}archlive/releng/root-image/etc/skel/.local/applications/URxvt.desktop
		#cp -v ${MOO_HOME}.local/applications/install_mooOS.desktop ${ARCHLIVE}archlive/releng/root-image/etc/skel/.local/applications/install_mooOS.desktop
		#cp -v ${MOO_HOME}.local/applications/man_mooOS.desktop ${ARCHLIVE}archlive/releng/root-image/etc/skel/.local/applications/man_mooOS.desktop
		
		## copy over ~/.* (dotfiles)
		cp -v ${MOO_HOME}.Xdefaults ${ARCHLIVE}archlive/releng/root-image/etc/skel/.Xdefaults
		cp -v ${MOO_HOME}.xinitrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.xinitrc
		cp -v ${MOO_HOME}.zshrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.zshrc
		cp -v ${MOO_HOME}.gtkrc-2.0 ${ARCHLIVE}archlive/releng/root-image/etc/skel/.gtkrc-2.0
		cp -v ${MOO_HOME}.nanorc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.nanorc
		cp -v ${MOO_HOME}.dialogrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.dialogrc
		cp -v ${MOO_HOME}.pentadactylrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.pentadactylrc			
		cp -v ${MOO_HOME}.dialogrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.dialogrc
		cp -v ${MOO_HOME}.wgetrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.wgetrc
		cp -v ${MOO_HOME}.curlrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.curlrc
		
		## copy over ~/.themes
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.themes/Black
		cp -vr ${MOO_HOME}.themes/Black/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.themes/Black
		
		## copy over ~/.fonts
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.fonts
		cp -vr ${MOO_HOME}.fonts/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.fonts
		
		## copy over kde files
		mkdir -vp  ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/apps/color-schemes
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/apps/kdenlive
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/apps/dolphin/view_properties/global
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/config
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/kde4/services/ServiceMenus
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/apps/konsole
		cp -vr ${MOO_HOME}.kde4/share/apps/color-schemes/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/apps/color-schemes
		cp -v ${MOO_HOME}.kde4/share/apps/kdenlive/kdenliveui.rc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/apps/kdenlive/kdenliveui.rc
		cp -v ${MOO_TOOLS_PATH}misc/kdenliveuirc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/config/kdenliveuirc
		cp -v ${MOO_TOOLS_PATH}misc/..directory ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/apps/dolphin/view_properties/global/.directory
		cp -v ${MOO_HOME}.kde4/share/config/startupconfig ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/config/startupconfig
		cp -v ${MOO_HOME}.kde4/share/config/konsolerc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/config/konsolerc
		cp -v ${MOO_HOME}.kde4/share/config/kservicemenurc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/config/kservicemenurc 
		cp -vr ${MOO_HOME}.kde4/share/kde4/services/ServiceMenus/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/kde4/services/ServiceMenus
		cp -vr ${MOO_HOME}.kde4/share/apps/konsole/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/apps/konsole
		cp -v ${MOO_HOME}.kde4/share/config/dolphinrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/config/dolphinrc
		cp -v ${MOO_HOME}.kde4/share/apps/dolphin/dolphinui.rc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/apps/dolphin/dolphinui.rc
		cp -v ${MOO_HOME}.kde4/share/config/gtkrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/config/gtkrc
		cp -v ${MOO_HOME}.kde4/share/config/kcmdisplayrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/config/kcmdisplayrc
		cp -v ${MOO_HOME}.kde4/share/config/gtkrc-2.0 ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/config/gtkrc-2.0
		
		## copy over ~/.gnupg
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.gnupg
		cp -v ${MOO_HOME}.gnupg/gpg-agent.conf ${ARCHLIVE}archlive/releng/root-image/etc/skel/.gnupg/gpg-agent.conf
		cp -v ${MOO_HOME}.gnupg/gpg.conf ${ARCHLIVE}archlive/releng/root-image/etc/skel/.gnupg/gpg.conf

		## copy over transmission file
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/transmission-daemon
		cp -v ${MOO_TOOLS_PATH}misc/settings.json ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/transmission-daemon/settings.json
		
		## copy over key-mon config
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/key-mon
		cp -v ${MOO_HOME}.config/key-mon/config ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/key-mon/config
		
		## copy lxtask config
		cp -v ${MOO_HOME}.config/lxtask.conf ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/lxtask.conf

		## copy Trolltech config
		cp -v ${MOO_HOME}.config/Trolltech.conf ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/Trolltech.conf
		
		## copy pavucontrol config
		cp -v ${MOO_HOME}.config/pavucontrol.ini ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/pavucontrol.ini
		
		## copy over mocp file
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.moc
		cp -v ${MOO_HOME}.moc/config ${ARCHLIVE}archlive/releng/root-image/etc/skel/.moc/config
		
		## copy htop file
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/htop
		cp -v ${MOO_HOME}.config/htop/htoprc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/htop/htoprc
		
		## copy sublime text 3 files
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/sublime-text-3/Packages/User
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/sublime-text-3/Packages/Theme\ -\ Nil
		cp -vr ${MOO_HOME}.config/sublime-text-3/Packages/Theme\ -\ Nil/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/sublime-text-3/Packages/Theme\ -\ Nil/
		cp -v ${MOO_HOME}.config/sublime-text-3/Packages/User/Preferences.sublime-settings ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/sublime-text-3/Packages/User/Preferences.sublime-settings
		## as above but root
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/root/.config/sublime-text-3/Packages/User
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/root/.config/sublime-text-3/Packages/Theme\ -\ Nil
		cp -vr ${MOO_HOME}.config/sublime-text-3/Packages/Theme\ -\ Nil/* ${ARCHLIVE}archlive/releng/root-image/root/.config/sublime-text-3/Packages/Theme\ -\ Nil/
		cp -v ${MOO_HOME}.config/sublime-text-3/Packages/User/Preferences.sublime-settings ${ARCHLIVE}archlive/releng/root-image/root/.config/sublime-text-3/Packages/User/Preferences.sublime-settings
		
		## mooOS icon
		cp -v ${MOO_TOOLS_PATH}images/mooOS-16.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/HighContrast/16x16/apps/mooOS.png
		cp -v ${MOO_TOOLS_PATH}images/mooOS-256.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/HighContrast/256x256/apps/mooOS.png
		cp -v ${MOO_TOOLS_PATH}images/mooOS-32.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/HighContrast/32x32/apps/mooOS.png
		cp -v ${MOO_TOOLS_PATH}images/mooOS-48.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/HighContrast/48x48/apps/mooOS.png
		cp -v ${MOO_TOOLS_PATH}images/mooOS-16.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/gnome/16x16/apps/mooOS.png
		cp -v ${MOO_TOOLS_PATH}images/mooOS-256.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/gnome/256x256/apps/mooOS.png
		cp -v ${MOO_TOOLS_PATH}images/mooOS-32.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/gnome/32x32/apps/mooOS.png
		cp -v ${MOO_TOOLS_PATH}images/mooOS-48.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/gnome/48x48/apps/mooOS.png
		cp -v ${MOO_TOOLS_PATH}images/mooOS-128.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/hicolor/128x128/apps/mooOS.png
		cp -v ${MOO_TOOLS_PATH}images/mooOS-16.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/hicolor/16x16/apps/mooOS.png
		cp -v ${MOO_TOOLS_PATH}images/mooOS-256.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/hicolor/256x256/apps/mooOS.png
		cp -v ${MOO_TOOLS_PATH}images/mooOS-32.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/hicolor/32x32/apps/mooOS.png
		cp -v ${MOO_TOOLS_PATH}images/mooOS-48.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/hicolor/48x48/apps/mooOS.png
		cp -v ${MOO_TOOLS_PATH}images/mooOS-128.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/128x128/apps/mooOS.png
		cp -v ${MOO_TOOLS_PATH}images/mooOS-16.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/16x16/apps/mooOS.png
		cp -v ${MOO_TOOLS_PATH}images/mooOS-256.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/256x256/apps/mooOS.png
		cp -v ${MOO_TOOLS_PATH}images/mooOS-32.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/32x32/apps/mooOS.png
		cp -v ${MOO_TOOLS_PATH}images/mooOS-48.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/48x48/apps/mooOS.png
		
		## copy vlc files
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/vlc
		cp -v ${MOO_TOOLS_PATH}misc/vlc-qt-interface.conf ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/vlc/vlc-qt-interface.conf
		cp -v ${MOO_HOME}.config/vlc/vlcrc ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/vlc/vlcrc
		
		## copy over window manager files
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/applications
		#mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/backgrounds
		mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/config
		#rm -r ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/themes
		#mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/images
		cp -vr ${MOO_HOME}.e/e/applications/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/applications
		#cp -vr ${MOO_HOME}.e/e/backgrounds/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/backgrounds
		cp -vr ${MOO_HOME}.e/e/config/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/config
		#cp -vr ${MOO_HOME}.e/e/themes/* ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/themes
		#cp -v ${MOO_HOME}.e/e/images/tw_cache_images.eet ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/images/tw_cache_images.eet
		rm ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/config/standard/module.everything.cache.*
		rm ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/config/standard/exehist.*
		rm ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/config/standard/evry_exebuf_cache.*
		rm ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/config/standard/module.forecasts.*
		#mkdir -vp ${ARCHLIVE}archlive/releng/root-image/usr/share/enlightenment/data/themes
		#cp -vr /usr/share/enlightenment/data/themes/* ${ARCHLIVE}archlive/releng/root-image/usr/share/enlightenment/data/themes

		## patch config files for username
		cd ${ARCHLIVE}archlive/releng/root-image/etc/skel/.e/e/config/standard
		for NEW_FILE in e.*
		do
			EWW_FILE=${NEW_FILE/.cfg/.src}
			eet -d $NEW_FILE config $EWW_FILE
			sed -i "s/$MOO_USER/moo/g" $EWW_FILE
			rm $NEW_FILE
			eet -e $NEW_FILE config $EWW_FILE 1
			rm $EWW_FILE
		done
		cd "$PWD"
	
		## terminology
		cp -vr ${MOO_HOME}.config/terminology/config/standard/base.cfg ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/terminology/config/standard/base.cfg
		## patch config files for username
		cd  ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/terminology/config/standard/
		eet -d base.cfg config base.src
		sed -i "s/$MOO_USER/moo/g" base.src
		rm base.cfg
		eet -e base.cfg config base.src 1
		rm base.src
		cd "$PWD"

		## clean up files content
		sed -i "s/$MOO_USER/moo/g" ${ARCHLIVE}archlive/releng/root-image/etc/skel/.mozilla/firefox/qrtww0pl.Default-User/extensions.ini
		sed -i "s/$MOO_USER/moo/g" ${ARCHLIVE}archlive/releng/root-image/etc/skel/.config/transmission-daemon/settings.json
		sed -i "s/$MOO_USER/moo/g" ${ARCHLIVE}archlive/releng/root-image/etc/skel/.moc/config
		sed -i "s/$MOO_USER/moo/g" ${ARCHLIVE}archlive/releng/root-image/etc/skel/.kde4/share/config/dolphinrc
		sed -i "s/$MOO_USER/moo/g" ${ARCHLIVE}archlive/releng/root-image/etc/psd.conf 
		sed -i "s/$MOO_USER/moo/g" ${ARCHLIVE}archlive/releng/root-image/etc/skel/.gtkrc-2.0		

		## copy over hosts file (needed for LAN repos) TODO
		#cp -v /etc/hosts ${ARCHLIVE}archlive/releng/root-image/etc/hosts

		## cleanup Github local repos
		rm -rf ${ARCHLIVE}archlive/releng/root-image/etc/skel/Github
		## mooOS stuffs
	 	mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/Desktop
	 	mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/Downloads
	 	mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/Videos
	 	#mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/Dropbox
	 	mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/Github
	 	mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/Music
	 	mkdir -vp ${ARCHLIVE}archlive/releng/root-image/etc/skel/Pictures

	 	## copy home files and create default directories
	 	cp -v ${MOO_TOOLS_PATH}misc/Desktop.* ${ARCHLIVE}archlive/releng/root-image/etc/skel/Desktop/
	 	cp -v ${MOO_TOOLS_PATH}misc/Downloads.* ${ARCHLIVE}archlive/releng/root-image/etc/skel/Downloads/
	 	cp -v ${MOO_HOME}Videos/Videos.* ${ARCHLIVE}archlive/releng/root-image/etc/skel/Videos/
	 	cp -v ${MOO_HOME}github/Github.* ${ARCHLIVE}archlive/releng/root-image/etc/skel/Github/
	 	cp -v ${MOO_TOOLS_PATH}misc/Music.* ${ARCHLIVE}archlive/releng/root-image/etc/skel/Music/
	 	cp -v ${MOO_TOOLS_PATH}misc/Pictures.* ${ARCHLIVE}archlive/releng/root-image/etc/skel/Pictures/

		echo "${bldyellow}Removing previous build and work directories...${txtrst}"
		
		## deprecated method
		if [ -d "${ARCHLIVE}archlive/releng/work" ]; then
			rm -r ${ARCHLIVE}archlive/releng/work
		fi

		## new method
		if [ -d "$ISO_DIR" ]; then
			rm -r "$ISO_DIR"
		fi
		if [ -d "$WORK_DIR" ]; then
			rm -r "$WORK_DIR"
		fi

		## create pacman.conf for build
		mkdir -v "$WORK_DIR" && cp ${MOO_TOOLS_PATH}misc/pacman.conf ${WORK_DIR}/pacman.conf

		mkdir -v "${ARCHLIVE}archlive/releng/work"
		
		## create customize_root_image.sh
		cp -v ${MOO_TOOLS_PATH}create_iso/customize_root_image.sh ${ARCHLIVE}archlive/releng/root-image/root/customize_root_image.sh
		
		cp -v ${MOO_TOOLS_PATH}misc/pacman.conf ${ARCHLIVE}archlive/releng/work/pacman.conf
		
		## create pacman.conf for livecd
		cp -v ${MOO_TOOLS_PATH}misc/pacman.conf ${ARCHLIVE}archlive/releng/work/pacman.conf
		cp -v ${MOO_TOOLS_PATH}misc/pacman.conf ${ARCHLIVE}archlive/releng/root-image/etc/pacman.conf
		
		## create pacman.conf for livecd specific to architecture
		cp -v ${MOO_TOOLS_PATH}misc/pacman-x86_64.conf ${ARCHLIVE}archlive/releng/root-image/etc/pacman-x86_64.conf
		cp -v ${MOO_TOOLS_PATH}misc/pacman-i686.conf ${ARCHLIVE}archlive/releng/root-image/etc/pacman-i686.conf
		cp -v ${MOO_TOOLS_PATH}misc/pacman-x86_64.conf ${ARCHLIVE}archlive/releng/work/pacman-x86_64.conf
		cp -v ${MOO_TOOLS_PATH}misc/pacman-i686.conf ${ARCHLIVE}archlive/releng/work/pacman-i686.conf

		cp -v ${MOO_TOOLS_PATH}packages.both ${ARCHLIVE}archlive/releng/packages.both
		cp -v ${MOO_TOOLS_PATH}packages.extra ${ARCHLIVE}archlive/releng/packages.extra
		cp -v ${MOO_TOOLS_PATH}packages-server.both ${ARCHLIVE}archlive/releng/packages-server.both
		cp -v ${MOO_TOOLS_PATH}packages.i686 ${ARCHLIVE}archlive/releng/packages.i686
		cp -v ${MOO_TOOLS_PATH}packages.x86_64 ${ARCHLIVE}archlive/releng/packages.x86_64

		## copy over boot splash screen and mooOS branding
		cp -v ${ARCHLIVE}archlive/releng/syslinux/splash.png ${ARCHLIVE}archlive/releng/root-image/etc/grub.d/splash.png
		convert ${ARCHLIVE}archlive/releng/root-image/etc/grub.d/splash.png ${ARCHLIVE}archlive/releng/root-image/etc/grub.d/splash.jpg
	fi
		notify-send "Files copied!" -i "$MOO_ICON"

}

create_mooos_repos() {
	question="${bldyellow}Create and cleanup mooOS repos? (Y/N)?\n${txtrst}"
	if ask_something; then
		echo "${bldgreen}Recreating repos now...${txtrst}"
		## remove existing repos
		if [ -f "${ABS_BASE_DIR}mooOS-pkgs-32/mooOS.db.tar.gz" ]; then
			rm -v ${ABS_BASE_DIR}mooOS-pkgs-32/mooOS.db.tar.gz
			rm -v ${ABS_BASE_DIR}mooOS-pkgs-64/mooOS.db.tar.gz
		fi
		rm -v ${ABS_BASE_DIR}mooOS-pkgs-32/moo.db.tar.gz
		rm -v ${ABS_BASE_DIR}mooOS-pkgs-64/moo.db.tar.gz

		## hackity hack hack - clean up old git package caches
		arches="32 64"
		for mm in $arches
		do
			cd ${MOO_HOME}abs/mooOS-pkgs-$mm/
			mv -v $(ls | grep "efl-git-1" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			mv -v $(ls | grep "efl-git-debug-1" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			mv -v $(ls | grep "elementary-git-1" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			mv -v $(ls | grep "elementary-git-debug-1" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			mv -v $(ls | grep "elementary_test-git-1" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			mv -v $(ls | grep "elementary_test-git-debug-1" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			mv -v $(ls | grep "enlightenment17-git-0" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			mv -v $(ls | grep "enlightenment17-git-debug" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			mv -v $(ls | grep "evas_generic_loaders-git-1" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			mv -v $(ls | grep "evas_generic_loaders-git-debug-1" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			mv -v $(ls | grep "pulseaudio-mixer-cli-git" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			mv -v $(ls | grep "pyradio-git" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			mv -v $(ls | grep "sqlmap-git" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			mv -v $(ls | grep "terminology-git-0" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			mv -v $(ls | grep "terminology-git-debug-0" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			mv -v $(ls | grep "urxvt-font-size-git" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			mv -v $(ls | grep "youtube-viewer-git" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			rm -v ${MOO_HOME}abs/mooOS-pkgs-$mm/*-git*
			mv -v ${MOO_HOME}abs/staging_$mm/* ${MOO_HOME}abs/mooOS-pkgs-$mm/
			cd "$PWD"
		done

		rm -vf ${MOO_HOME}abs/i686/*-git*
		rm -vf ${MOO_HOME}abs/x86_64/*-git*

		## make RMS happy :D
		## unzip-libre unar spectrwm-libre sdl-libre rp-pppoe-libre p7zip-libre openexr-libre mplayer-libre mozilla-searchplugins mencoder-libre mcomix-libre mc-libre lirc-libre-utils kdeutils-ark-libre kdelibs-libre kdebase-runtime-libre iceweasel-libre gstreamer0.10-bad-libre-plugins gstreamer0.10-bad-libre gst-plugins-bad-libre ghostscript-libre cpupower-libre cdrkit-libre bitlbee-libre-nonprism audio-convert-libre 

		rm -vf ${ABS_BASE_DIR}mooOS-pkgs-*/*-libre-*
		cp -v ${MOO_HOME}abs/i686/*-libre-*-i686* ${ABS_BASE_DIR}mooOS-pkgs-32/
		cp -v ${MOO_HOME}abs/x86_64/*-libre-*-x86_64* ${ABS_BASE_DIR}mooOS-pkgs-64/

		rm -vf ${ABS_BASE_DIR}mooOS-pkgs-*/*-libre-*any*
		cp -v ${MOO_HOME}abs/i686/*-libre-*-any* ${ABS_BASE_DIR}mooOS-pkgs-32/
		cp -v ${MOO_HOME}abs/x86_64/*-libre-*-any* ${ABS_BASE_DIR}mooOS-pkgs-64/

		rm -vf ${ABS_BASE_DIR}mooOS-pkgs-*/unar-*
		cp -v ${MOO_HOME}abs/i686/unar-*-i686* ${ABS_BASE_DIR}mooOS-pkgs-32/
		cp -v ${MOO_HOME}abs/x86_64/unar-*-x86_64* ${ABS_BASE_DIR}mooOS-pkgs-64/

		rm -vf ${ABS_BASE_DIR}mooOS-pkgs-*/opencollada-*
		cp -v ${MOO_HOME}abs/i686/opencollada-*-i686* ${ABS_BASE_DIR}mooOS-pkgs-32/
		cp -v ${MOO_HOME}abs/x86_64/opencollada-*-x86_64* ${ABS_BASE_DIR}mooOS-pkgs-64/

		rm -vf ${ABS_BASE_DIR}mooOS-pkgs-*/mozilla-searchplugins-*
		cp -v ${MOO_HOME}abs/i686/mozilla-searchplugins-*-any* ${ABS_BASE_DIR}mooOS-pkgs-32/
		cp -v ${MOO_HOME}abs/x86_64/mozilla-searchplugins-*-any* ${ABS_BASE_DIR}mooOS-pkgs-64/

		## create repo databases
		echo "${bldmagenta}Re-creating i686 repository${txtrst}"
		repo-add -k $GPGKEY ${ABS_BASE_DIR}mooOS-pkgs-32/moo.db.tar.gz ${ABS_BASE_DIR}mooOS-pkgs-32/*.pkg.tar.xz
		echo "${bldmagenta}Re-creating x86_64 repository${txtrst}"
		repo-add -k $GPGKEY ${ABS_BASE_DIR}mooOS-pkgs-64/moo.db.tar.gz ${ABS_BASE_DIR}mooOS-pkgs-64/*.pkg.tar.xz

		## format log a little
		echo $(date -d "today" +"%Y%m%d%H%M") >> $REPO_LOG_TEMP
		sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g" $REPO_LOG_TEMP >> $MOO_LOG

		notify-send "Repos created!" -i "$MOO_ICON"

		## clean up stable repos
		## re-create repos local and remoteed 
		echo "================syncing to local repos==================="
		rsync -avzrcpPh --delete --stats ${REPO_BASE_DIR}/i686/ ${ABS_BASE_DIR}mooOS-pkgs-32-out-of-date
		rsync -avzrcpPh --delete --stats ${REPO_BASE_DIR}/x86_64/ ${ABS_BASE_DIR}mooOS-pkgs-64-out-of-date
		rsync -avzrcpPh --delete --stats ${ABS_BASE_DIR}mooOS-pkgs-32/ ${REPO_BASE_DIR}/i686
		rsync -avzrcpPh --delete --stats ${ABS_BASE_DIR}mooOS-pkgs-64/ ${REPO_BASE_DIR}/x86_64
		notify-send "Repos synced to local server!" -i "$MOO_ICON"

	fi
}

sync_mooos_repos() {
	question="${bldyellow}Sync remote mooOS repo? (Y/N)?\n${txtrst}"
	if ask_something; then
		## include login credentials:
		if [ -f "$REPO_CREDS" ] ; then
			echo "================syncing to remote repos==================="
			. $REPO_CREDS

			## rsync using vars defined in credentials, e.g.:
			#for i in {1..5}
			for i in $(eval echo {1..$_remote_count})
			do
				port=$(eval echo $(echo '${'_remote$i[1]'}'))
				flags=$(eval echo $(echo '${'_remote$i[4]'}'))
				src=$(eval echo $(echo '${'_remote$i[2]'}'))
				dest=$(eval echo $(echo '${'_remote$i[3]'}'))
				torsocks rsync -avzrcPh $flags -e "torsocks ssh -p $port" $src $dest # -n, --dry-run perform a trial run with no changes made
			done
			notify-send "Repos synced to remote server!" -i "$MOO_ICON"
		fi
	fi
}

moo_version() {
	question="${bldyellow}Increase moo version number? Current: $MOO_VERSION (Y/N)?\n${txtrst}"
	if ask_something; then
		MOO_NEW_VERSION=$(( $(echo $MOO_VERSION) + 1 ))
		sudo sed -i "s/MOO_VERSION=$MOO_VERSION/MOO_VERSION=$MOO_NEW_VERSION/g" /etc/moo.cfg
		echo "Old version: 0.$MOO_VERSION"
		echo "Current version: 0.$MOO_NEW_VERSION"
	fi

}
