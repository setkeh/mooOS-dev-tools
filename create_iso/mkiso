#!/usr/bin/bash
## Part of mooOS-dev-tools - https://github.com/idk/mooOS-dev-tools
## pdq 08-13-2013 - PRESENT
## License: GPL3

## This utility is run as $USER
## This utility creates the mooOS livecd ISO image files from current OS

 
## DO NOT EDIT BELOW UNLESS YOU KNOW WHAT YOURE DOING ##

######### START CONFIGURATION ##########
. /etc/moo.cfg

######### START FUNCTIONS ##############
#. /usr/share/moo-tools/create_iso/moo_functions

upper_title="Welcome to mooOS 0.$MOO_VERSION backup utility $archtype"

# dialog --clear --backtitle "$upper_title" --title "Preferences" --yes-label "Text Mode" --no-label "Graphical Mode" --yesno "Chose the backup utility Type." 20 70
# if [ $? = 0 ] ; then
      DIALOG=${DIALOG=dialog}
# else
#     DIALOG=${DIALOG=Xdialog}
# fi

 ## set live user
moo_user=$(whoami)

## store current working directory 
PWD=$(pwd)

## figure out architecture type
archtype="$(uname -m)"

## DO NOT RUN AS ROOT
if [ $(id -u) -eq 0 ]; then
	$DIALOG --clear --backtitle "$upper_title" --title "Exiting Script" --msgbox "Do not run this utility as root or super user" 10 40
    exit 0
fi

$DIALOG --clear --backtitle "$upper_title" --title "Information" --msgbox "You can decrease/increase the FONT SIZE with Ctrl+Down/Up arrow keys." 20 70
if [ "$archtype" != "x86_64" ] || [ $? = 255 ] ; then
    exit 0
fi

setterm -blank 0

## styling
clr="\Zb"
clr_end="\Zn"

## temporary files
_TEMP=/tmp/answer$$
_CURRENT=/tmp/$moo_user-cur

## functions
exiting_mkmoo() {
    clear
    rm -f ${_TEMP}
    rm -f ${_CURRENT}
    $DIALOG --clear --backtitle "$upper_title" --title "Exiting Script" --msgbox "type: mkiso to re-run" 10 40
    exit 0
}

current_selection() {
    echo "$1" > $_CURRENT
}

mkmoo_menu() {
    CUR=$(cat $_CURRENT)
    $DIALOG \
        --default-item "$CUR" --colors --backtitle "$upper_title" --title "$upper_title" \
        --menu "Select action: (Do them in order)" 20 60 9 \
        1 $clr"Update system"$clr_end \
        2 $clr"Update github repos"$clr_end \
        3 $clr"Update local repos"$clr_end \
        4 $clr"Update remote repos"$clr_end \
        5 $clr"Bump mooOS version 0.$MOO_VERSION"$clr_end \
        6 $clr"Build mooOS"$clr_end \
        7 $clr"Sync mooOS iso"$clr_end \
        8 $clr"Sync mooOS info"$clr_end \
        9 $clr"Exit" 2>$_TEMP
    if [ $? = 1 ] || [ $? = 255 ] ; then
        exiting
        return 0
    fi
    choice=$(cat $_TEMP)
    case $choice in
        1) update_moo;;
        2) update_moohub;;
        3) update_local;;  
        4) update_remote;;
        5) bump_moo;;
        6) build_moo;;
        7) sync_remote;;
		8) rsync_info;;
        9) exiting_mkmoo;;
    esac
}

check_repos() {
	check_repos_title="Checking repo connectivity"
	while true
	do
		if [ $2 -eq 1 ]; then
			torsocks curl -s -o "/dev/null" "$1"
		else
			curl -s -o "/dev/null" "$1"
		fi
		if [ $? -ne 0 ] ; then
			$DIALOG --clear --backtitle "$upper_title" --title "${check_repos_title}" --msgbox "Error occurred getting URL $1: rechecking in 10 seconds" 10 40
		elif [ $? -eq 6 ]; then
			$DIALOG --clear --backtitle "$upper_title" --title "${check_repos_title}" --msgbox "Unable to resolve host: rechecking in 10 seconds" 10 40
		elif [ $? -eq 7 ]; then
			$DIALOG --clear --backtitle "$upper_title" --title "${check_repos_title}" --msgbox "Unable to connect to host: rechecking in 10 seconds" 10 40
		else
			break
		fi
		sleep 10s
	done
}

update_moo() {
	$DIALOG --clear --backtitle "$upper_title" --title "Update packages" --yesno "Run system updates?" 10 30
	if [ $? = 0 ] ; then
		$DIALOG --clear --backtitle "$upper_title" --title "Update packages" --defaultno --yesno "With --devel?" 10 30
		if [ $? = 0 ] ; then
			devel=" --devel"
		fi

		$DIALOG --clear --backtitle "$upper_title" --title "Updating packages" --msgbox "Applying i686 updates" 10 40
		schroot -p -- sudo pacman -Syu && schroot -p -- pacaur -Syua$devel --noedit --rebuild
		echo ""
		echo "Applied i686 AUR updates? Then hit [ENTER]:"
		read wee

		$DIALOG --clear --backtitle "$upper_title" --title "Updating packages" --msgbox "Applying x86_64 updates" 10 40
		sudo pacman -Syu && pacaur -Syua$devel --noedit --rebuild
		echo ""
		echo "Applied x86_64 AUR updates Then hit [ENTER]:"
		read wee
	fi
	current_selection 2
}

update_moohub() {
	$DIALOG --clear --backtitle "$upper_title" --title "Update github" --yesno "Run github sync?" 10 30
	if [ $? = 0 ] ; then
		sudo sh -c "pacman -Qqe  | grep -vx \"$(pacman -Qqg base)\" | grep -vx \"$(cat ${MOO_TOOLS_PATH}exclude_pkgs)\" > ${MOO_TOOLS_PATH}packages.both"
		geeh -b 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Updating github repos" --ok-label "Continue" --programbox 20 70
	fi
	current_selection 3
}

repackage_this() {
	package_name="$1"
	package_repos="$2"
	package_type="$3"
	package_install="$4"
	delete_custom_package_caches "$package_name"
	mkdir -p "${MOO_HOME}abs/$package_name"
	cd "${MOO_HOME}abs/$package_name"
	for urls in $package_repos
	do
		wget "$urls" 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Grabbing package" --progressbox 20 70
	done
	if [ "$package_type" = "x86_64" ] || [ "$package_type" = "any" ]; then
		makepkg -sf$package_install --noconfirm 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Repackaging package" --progressbox 20 70
	fi
	if [ "$package_type" = "i686" ] || [ "$package_type" = "any" ]; then
		schroot -p -- makepkg -sf$package_install --noconfirm 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Repackaging package" --progressbox 20 70
	fi
	cd "$PWD"
}

create_custom_packages() {
	$DIALOG --clear --backtitle "$upper_title" --title "Rebrand packages" --yesno "Rebrand packages?\n\nmoo-tools\nmoo-scripts\nmoo-zsh\nmoo-wallpapers\ngeeh" 20 30
	if [ $? = 0 ] ; then
		## moo-scripts
		$DIALOG --clear --backtitle "$upper_title" --title "moo-scripts" --yesno "Rebrand moo-scripts" 10 30
		if [ $? = 0 ] ; then
			delete_custom_package_caches "moo-scripts"
			repackage_this "moo-scripts" "https://raw.github.com/idk/bin/master/PKGBUILD" "any" i
		fi
		
		## moo-tools
		$DIALOG --clear --backtitle "$upper_title" --title "moo-tools" --yesno "Rebrand moo-tools" 10 30
		if [ $? = 0 ] ; then
			delete_custom_package_caches "moo-tools"
			repackage_this "moo-tools" "https://raw.github.com/idk/mooOS-dev-tools/master/installer/PKGBUILD https://raw.github.com/idk/mooOS-dev-tools/master/installer/moo-tools.install" "any" i
		fi

		## moo-octopi
		# $DIALOG --clear --backtitle "$upper_title" --title "moo-octopi" --yesno "Rebrand moo-octopi" 10 30
		# if [ $? = 0 ] ; then
		# 	delete_custom_package_caches "octopi"
		# 	repackage_this "octopi" "https://raw.github.com/idk/moo-octopi/master/PKGBUILD https://raw.github.com/idk/moo-octopi/master/moo-octopi.install" "any" i
		# fi

		## moo-aarchup
		#delete_custom_package_caches "moo-aarchup"
		#repackage_this "moo-aarchup" "https://raw.github.com/idk/aarchup/master/PKGBUILD https://raw.github.com/idk/aarchup/master/aarchup.install" "any" i
		
		## moo-zsh
		$DIALOG --clear --backtitle "$upper_title" --title "moo-zsh" --yesno "Rebrand moo-zsh" 10 30
		if [ $? = 0 ] ; then
			delete_custom_package_caches "moo-zsh"
			repackage_this "moo-zsh" "https://raw.github.com/idk/zsh/master/PKGBUILD https://raw.github.com/idk/zsh/master/moo-zsh.install" "any" i
		fi
	
		## github wrapper
		$DIALOG --clear --backtitle "$upper_title" --title "geeh" --yesno "Rebrand geeh" 10 30
		if [ $? = 0 ] ; then
			delete_custom_package_caches "geeh"
			repackage_this "geeh" "https://raw.github.com/idk/geeh/master/PKGBUILD" "any" i
		fi

		## install custom mooOS wallpapers
		$DIALOG --clear --backtitle "$upper_title" --title "mooOS-wallpapers" --yesno "Rebrand mooOS-wallpapers" 10 30
		if [ $? = 0 ] ; then
			delete_custom_package_caches "moo-wallpapers"
			repackage_this "moo-wallpapers" "https://raw.github.com/idk/mooOS-wallpapers/master/PKGBUILD https://raw.github.com/idk/mooOS-wallpapers/master/moo-wallpapers.install http://mooos.org/mooOS-utils/moo-wallpapers.tar.gz" "any"
		fi

		## vimb web browser and tabbed, patched!
		# $DIALOG --clear --backtitle "$upper_title" --title "vb-pdq" --yesno "Rebrand vb-pdq" 10 30
		# if [ $? = 0 ] ; then
		# 	delete_custom_package_caches "vb-pdq"
		# 	repackage_this "vb-pdq" "https://raw.github.com/idk/vb-pdq/master/PKGBUILD https://raw.github.com/idk/vb-pdq/master/vb-pdq.install" "any"
		# fi
	fi

	$DIALOG --clear --backtitle "$upper_title" --title "Rebrand packages" --yesno "Rebrand packages? (filesystem/grub/lsb-release/syslinux/hardinfo/xorg-xinit)" 10 30
	if [ $? = 0 ] ; then
		## sync ABS
		sudo abs 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Updating ABS" --progressbox 20 70

		## FILESYSTEM
		$DIALOG --clear --backtitle "$upper_title" --title "filesystem" --yesno "Rebrand filesystem" 10 30
		if [ $? = 0 ] ; then
			delete_custom_package_caches "filesystem"
			cp -r /var/abs/core/filesystem/ ${MOO_HOME}abs
			cp -f ${MOO_TOOLS_PATH}filesystem/issue ${MOO_HOME}abs/filesystem/
			cp -f ${MOO_TOOLS_PATH}filesystem/os-release ${MOO_HOME}abs/filesystem/
			FILESYSTEM_HASH=$(md5sum ${MOO_HOME}abs/filesystem/issue | awk '{print $1}')
			FILESYSTEM2_HASH=$(md5sum ${MOO_HOME}abs/filesystem/os-release | awk '{print $1}')
			sed -i "s/7813c481156f6b280a3ba91fc6236368/$FILESYSTEM_HASH/g" ${MOO_HOME}abs/filesystem/PKGBUILD
			sed -i "s/b16a4674ccf3a932ff34c6c8393a4f33/$FILESYSTEM2_HASH/g" ${MOO_HOME}abs/filesystem/PKGBUILD
			cd ${MOO_HOME}abs/filesystem
			makepkg -sf 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Updating filesystem" --progressbox 20 70
			schroot -p -- makepkg -sf 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Updating filesystem" --progressbox 20 70
			cd "$PWD"
		fi

		## LSB-RELEASE
		$DIALOG --clear --backtitle "$upper_title" --title "lsb-release" --yesno "Rebrand lsb-release" 10 30
		if [ $? = 0 ] ; then
			delete_custom_package_caches "lsb-release"
			cp -r /var/abs/community/lsb-release/ ${MOO_HOME}abs
			cp -f ${MOO_TOOLS_PATH}lsb-release/PKGBUILD ${MOO_HOME}abs/lsb-release/
			cp -f ${MOO_TOOLS_PATH}lsb-release/lsb-release.install ${MOO_HOME}abs/lsb-release/
			cd ${MOO_HOME}abs/lsb-release
			makepkg -sf 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Updating lsb-release" --progressbox 20 70
			schroot -p -- makepkg -sf 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Updating lsb-release" --progressbox 20 70
			cd "$PWD"
		fi

		## GRUB
		#$DIALOG --clear --backtitle "$upper_title" --title "vb-pdq" --yesno "Rebrand vb-pdq" 10 30
		#if [ $? = 0 ] ; then
			# delete_custom_package_caches "grub"
			# cp -r /var/abs/testing/grub ${MOO_HOME}abs/grub
			# sed -i "s/\"Arch\"/\"mooOS\"/g" ${MOO_HOME}abs/grub/grub.default
			# sed -i "s/Arch Linux/mooOS GNU\/Linux/g" ${MOO_HOME}abs/grub/grub.cfg
			# GRUB_HASH=$(md5sum ${MOO_HOME}abs/grub/grub.default | awk '{print $1}')
			# GRUB_HASH2=$(md5sum ${MOO_HOME}abs/grub/grub.cfg | awk '{print $1}')
			# sed -i "s/a03ffd56324520393bf574cefccb893d/$GRUB_HASH/g" ${MOO_HOME}abs/grub/PKGBUILD
			# sed -i "s/c8b9511586d57d6f2524ae7898397a46/$GRUB_HASH2/g" ${MOO_HOME}abs/grub/PKGBUILD
			# cd ${MOO_HOME}abs/grub
			# makepkg -sf 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Updating grub" --progressbox 20 70
			# schroot -p -- makepkg -sf 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Updating grub" --progressbox 20 70
			# cd "$PWD"
		#fi

		## SYSLINUX
		$DIALOG --clear --backtitle "$upper_title" --title "syslinux" --yesno "Rebrand syslinux" 10 30
		if [ $? = 0 ] ; then
			delete_custom_package_caches "syslinux"
			cp -r /var/abs/core/syslinux/ ${MOO_HOME}abs
			sed -i "s/Arch Linux/mooOS GNU\/Linux/g" ${MOO_HOME}abs/syslinux/syslinux.cfg
	        sed -i "s,#MENU BACKGROUND splash.png,MENU BACKGROUND /usr/share/moo-tools/images/splash.png,g" ${MOO_HOME}abs/syslinux/syslinux.cfg
	        sed -i "s/UI menu.c32/#UI menu.c32/g" ${MOO_HOME}abs/syslinux/syslinux.cfg
	        sed -i "s/#UI vesamenu.c32/UI vesamenu.c32/g" ${MOO_HOME}abs/syslinux/syslinux.cfg
	        sed -i "s/TIMEOUT 50/TIMEOUT 300/g" ${MOO_HOME}abs/syslinux/syslinux.cfg
			SYSLINUX_HASH=$(md5sum ${MOO_HOME}abs/syslinux/syslinux.cfg | awk '{print $1}')
			sed -i "s/46ca150f53322ff8f1597d9a342f7e40/$SYSLINUX_HASH/g" ${MOO_HOME}abs/syslinux/PKGBUILD
			cd ${MOO_HOME}abs/syslinux
			makepkg -sf 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Updating syslinux" --progressbox 20 70
			schroot -p -- makepkg -sf 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Updating syslinux" --progressbox 20 70
			cd "$PWD"
		fi

		## HARDINFO
		$DIALOG --clear --backtitle "$upper_title" --title "hardinfo" --yesno "Rebrand hardinfo" 10 30
		if [ $? = 0 ] ; then
			delete_custom_package_caches "hardinfo"
			cp -r /var/abs/community/hardinfo/ ${MOO_HOME}abs
			sed -i "s/Arch Linux/mooOS GNU\/Linux/g" ${MOO_HOME}abs/hardinfo/hardinfo.distro
			HARDINFO_HASH=$(sha1sum ${MOO_HOME}abs/hardinfo/hardinfo.distro | awk '{print $1}')
			sed -i "s/\"arch\"/\"mooos\"/g" ${MOO_HOME}abs/hardinfo/PKGBUILD
			sed -i "s/4c31cbbfbdeb48593641ff600c8d4fb7bda2b01c/$HARDINFO_HASH/g" ${MOO_HOME}abs/hardinfo/PKGBUILD
			cd ${MOO_HOME}abs/hardinfo
			makepkg -sf 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Updating hardinfo" --progressbox 20 70
			#TODO
			schroot -p -- makepkg -sf 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Updating hardinfo" --progressbox 20 70
			cd "$PWD"
		fi

		## xorg-xinit
		$DIALOG --clear --backtitle "$upper_title" --title "xorg-xinit" --yesno "custom xorg-xinit" 10 30
		if [ $? = 0 ] ; then
			delete_custom_package_caches "xorg-xinit"
			cp -r /var/abs/extra/xorg-xinit/ ${MOO_HOME}abs
			cp ${MOO_HOME}github/mooOS-dev-tools/xorg-xinit/xinitrc ${MOO_HOME}abs/xorg-xinit/xinitrc
			sed -i "s/X.Org initialisation program /X.Org initialisation program (patched for mooOS) /g" ${MOO_HOME}abs/xorg-xinit/PKGBUILD
			sed -i "s/38a23848b49de8a5c635a128a8b32a6cd0a08a9ee153ad97cb25abd82cfda1bc/SKIP/g" ${MOO_HOME}abs/xorg-xinit/PKGBUILD
			cd ${MOO_HOME}abs/xorg-xinit
			makepkg -sf 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Updating xorg-xinit" --progressbox 20 70
			#TODO
			schroot -p -- makepkg -sf 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Updating xorg-xinit" --progressbox 20 70
			cd "$PWD"
		fi

		notify-send "Rebranded packages" -i "$MOO_ICON"
	fi
}

delete_package_caches() {
	#sudo pkgcacheclean -v 1
	schroot -p -- sudo pkgcacheclean -v -k 1 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Deleting old caches" --progressbox 20 70
	sudo pkgcacheclean -v -k --cachedir=${ABS_BASE_DIR}mooOS-pkgs-32/ 1 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Deleting old caches" --progressbox 20 70
	sudo pkgcacheclean -v -k --cachedir=${ABS_BASE_DIR}mooOS-pkgs-64/ 1 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Deleting old caches" --progressbox 20 70
	sudo pkgcacheclean -v -k --cachedir=${MOO_HOME}abs/i686 1 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Deleting old caches" --progressbox 20 70
	sudo pkgcacheclean -v -k --cachedir=${MOO_HOME}abs/x86_64 1 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Deleting old caches" --progressbox 20 70
	mv ${ABS_BASE_DIR}mooOS-pkgs-32/*nvidia* ${ABS_BASE_DIR}nonfree/
	mv ${ABS_BASE_DIR}mooOS-pkgs-64/*nvidia* ${ABS_BASE_DIR}nonfree/
}

delete_custom_package_caches() {
	if [ "$1" != "" ]; then
		sudo rm ${ABS_BASE_DIR}mooOS-pkgs-32/$1-*
		sudo rm ${ABS_BASE_DIR}mooOS-pkgs-64/$1-*
		sudo rm ${MOO_HOME}abs/i686/$1-*
		sudo rm ${MOO_HOME}abs/x86_64/$1-*
		rm -fr ${MOO_HOME}abs/$1
	fi
}

update_local() {
	## add branding and custom packages
	create_custom_packages
	## delete useless package caches
	delete_package_caches
	## create and sync local repos
	create_mooos_repos
	current_selection 4
}

rsync_iso_remote() {
	## sync .iso to remote server
	ARCH_ISO=$1
	$DIALOG --clear --backtitle "$upper_title" --title "rsync ISO" --yesno "Do you wish to rysnc this ${ARCH_ISO} iso to local/remote servers" 10 30
	if [ $? = 0 ] ; then
		rm $ISO_STORAGE/mooOS-beta-${ARCH_ISO}-old.iso
		mv -f $ISO_STORAGE/mooOS-beta-${ARCH_ISO}.iso $ISO_STORAGE/mooOS-beta-${ARCH_ISO}-old.iso
		cp -f $ISO_DIR/*-${ARCH_ISO}.iso $ISO_STORAGE/mooOS-beta-${ARCH_ISO}.iso

		## Mount server filesystem to localhost
		# path to remote repo credentials file

		## if remote web server exists
		if [ "$REPO_CREDS" ] ; then
	        . $REPO_CREDS
			## override credentials file
			_iso_sync[2]="$ISO_STORAGE/mooOS-beta-${ARCH_ISO}.iso"
			## rsync .iso using vars defined in credentials, e.g.:
			port=$(eval echo $(echo '${'_iso_sync[1]'}'))
			flags=$(eval echo $(echo '${'_iso_sync[4]'}'))
			src=$(eval echo $(echo '${'_iso_sync[2]'}'))
			dest=$(eval echo $(echo '${'_iso_sync[3]'}'))
			torsocks rsync -avcPh $flags -e "torsocks ssh -p $port" $src $dest 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Syncing iso" --ok-label "Continue" --programbox 20 70 # -n, --dry-run perform a trial run with no changes made
		fi
	fi
	notify-send "${ARCH_ISO} synced" -i "$MOO_ICON"
	$DIALOG --clear --backtitle "$upper_title" --title "rsync complete" --msgbox "${ARCH_ISO} synced" 20 70
}

rsync_info() {
	for moo in ${ISO_ARCH}
	do
	    $DIALOG --clear --backtitle "$upper_title" --title "Syncing info" --yesno "Sync $moo md5sums/Names to website?" 10 30
		if [ $? = 0 ] ; then
	        ## create initial old hash
	        if [ ! -f "${ABS_BASE_DIR}mooOS_$moo.md5sum.old" ]; then
	        	echo 53ef866dd48dcbd620cf402d845c2ec5 > ${ABS_BASE_DIR}mooOS_$moo.md5sum.old
	        fi
	        
	        if ls $ISO_STORAGE/mooOS-beta-$moo.iso &> /dev/null; then
	            $DIALOG --clear --backtitle "$upper_title" --title "Syncing info" --msgbox "generating $moo md5sum... please wait a moment" 20 70
	            
	            # md5sums of current and old .iso
	            MD5HASH=$(md5sum $ISO_STORAGE/mooOS-beta-$moo.iso | cut -d " " -f 1)

	            ## create initial current hash
	            if [ ! -f "${ABS_BASE_DIR}mooOS_$moo.md5sum" ]; then
	            	echo $MD5HASH > ${ABS_BASE_DIR}mooOS_$moo.md5sum
	            fi

	            CURMD5HASH=$(cat ${ABS_BASE_DIR}mooOS_$moo.md5sum)
	            OLDMD5HASH=$(cat ${ABS_BASE_DIR}mooOS_$moo.md5sum.old)

	            ## if new iso create hashes
	            if [ "$CURMD5HASH" != "$MD5HASH" ]; then
	            	echo $CURMD5HASH > ${ABS_BASE_DIR}mooOS_$moo.md5sum.old
	            	echo $MD5HASH > ${ABS_BASE_DIR}mooOS_$moo.md5sum
	            fi

	            OLDMD5HASH=$(cat ${ABS_BASE_DIR}mooOS_$moo.md5sum.old)
	            $DIALOG --clear --backtitle "$upper_title" --title "Syncing info" --msgbox "The old $moo md5sum was $OLDMD5HASH the new $moo md5sum is $MD5HASH" 20 70

	            ## replace old hash with new hash in info.php on local web server
	            sed -i "s/$OLDMD5HASH/$MD5HASH/g" /mnt/linux-pdq/media/truecrypt1/domains/pdqblog/info.php

	            ## create initial old name
	            if [ ! -f "${ABS_BASE_DIR}mooOS_$moo.name.old" ]; then
	            	echo mooOS-2013.09.02-beta-0.99-$moo.iso > ${ABS_BASE_DIR}mooOS_$moo.name.old
	            fi

	            cd $ISO_DIR
	            ## create initial current name
	            if [ ! -f "${ABS_BASE_DIR}mooOS_$moo.name" ]; then
	            	ls *$moo.* > ${ABS_BASE_DIR}mooOS_$moo.name
	            fi

	            NEW_NAME_LIST=$(ls *$moo*)
	            CURRELNAME=$(cat ${ABS_BASE_DIR}mooOS_$moo.name)
	            OLDRELNAME=$(cat ${ABS_BASE_DIR}mooOS_$moo.name.old)

	            cd "$PWD"
	            ## if new iso create release name
	            if [ "$CURRELNAME" != "$NEW_NAME_LIST" ]; then
	            	echo $CURRELNAME > ${ABS_BASE_DIR}mooOS_$moo.name.old
	            	echo $NEW_NAME_LIST > ${ABS_BASE_DIR}mooOS_$moo.name
	            fi

	            CURRELNAME=$(cat ${ABS_BASE_DIR}mooOS_$moo.name)
	            OLDRELNAME=$(cat ${ABS_BASE_DIR}mooOS_$moo.name.old)

	            $DIALOG --clear --backtitle "$upper_title" --title "Syncing info" --msgbox "The old $moo release name was $OLDRELNAME the new $moo release name is $CURRELNAME" 20 70
	            ## replace old release name with new release name in info.php on local web server
	            sed -i "s/$OLDRELNAME/$CURRELNAME/g" /mnt/linux-pdq/media/truecrypt1/domains/pdqblog/info.php

	            ## create initial old filesize
	            if [ ! -f "${ABS_BASE_DIR}mooOS_$moo.filesize.old" ]; then
	            	echo 1.8G > ${ABS_BASE_DIR}mooOS_$moo.filesize.old
	            fi

	            cd $ISO_STORAGE
	            ## create initial current filesize
	            if [ ! -f "${ABS_BASE_DIR}mooOS_$moo.filesize" ]; then
	            	du -h "mooOS-beta-$moo.iso" | awk '{print $1;}' > ${ABS_BASE_DIR}mooOS_$moo.filesize
	            fi

	            NEW_FILESIZE_LIST=$(du -h "mooOS-beta-$moo.iso" | awk '{print $1;}')
	            CURRELFILESIZE=$(cat ${ABS_BASE_DIR}mooOS_$moo.filesize)
	            OLDRELFILESIZE=$(cat ${ABS_BASE_DIR}mooOS_$moo.filesize.old)

	            cd "$PWD"
	            ## if new iso create release filesize
	            if [ "$CURRELFILESIZE" != "$NEW_FILESIZE_LIST" ]; then
	            	echo $CURRELFILESIZE > ${ABS_BASE_DIR}mooOS_$moo.filesize.old
	            	echo $NEW_FILESIZE_LIST > ${ABS_BASE_DIR}mooOS_$moo.filesize
	            fi

	            CURRELFILESIZE=$(cat ${ABS_BASE_DIR}mooOS_$moo.filesize)
	            OLDRELFILESIZE=$(cat ${ABS_BASE_DIR}mooOS_$moo.filesize.old)

	            $DIALOG --clear --backtitle "$upper_title" --title "Syncing info" --msgbox "The old $moo release filesize was $OLDRELFILESIZE the new $moo release filesize is $CURRELFILESIZE" 20 70
	            ## replace old release filesize with new release filesize in info.php on local web server
	            sed -i "s/$OLDRELFILESIZE ($moo)/$CURRELFILESIZE ($moo)/g" /mnt/linux-pdq/media/truecrypt1/domains/pdqblog/info.php

	            ## if remote web server exists
	            if [ "$REPO_CREDS" ] ; then
	                    . $REPO_CREDS
	                    dest=$(eval echo $(echo '${'_iso_sync[3]'}'))

	                    ## copy info.php with new hash to remote web server
	                    $DIALOG --clear --backtitle "$upper_title" --title "Syncing info" --msgbox "syncing info.php to remote web server" 20 70
	    
	            fi
	        	notify-send "$moo release info done." -i "$MOO_ICON"
	        else
	           $DIALOG --clear --backtitle "$upper_title" --title "WARNING" --msgbox "$ISO_STORAGE/mooOS-beta-$moo.iso not exist?" 20 70
	        fi
		fi
	done
	current_selection 9
}

umount_work_env() {
	## unmount work env
	meow=$1
	$DIALOG --clear --backtitle "$upper_title" --title "Unmount work env" --yesno "Do you wish to unmount the $meow work env" 10 30
	if [ $? = 0 ] && [ "$WORK_DIR" != "" ] ; then
		sudo umount $WORK_DIR/$meow/root-image/dev 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Unmounting work dirs" --ok-label "Continue" --programbox 20 70
		sudo umount $WORK_DIR/$meow/root-image/ 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Unmounting work dirs" --ok-label "Continue" --programbox 20 70
		sudo umount $WORK_DIR/$meow/ 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Unmounting work dirs" --ok-label "Continue" --programbox 20 70
		sudo umount $WORK_DIR/$meow/root-image/dev 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Unmounting work dirs" --ok-label "Continue" --programbox 20 70
		sudo umount $WORK_DIR/$meow/root-image/ 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Unmounting work dirs" --ok-label "Continue" --programbox 20 70
		sudo umount $WORK_DIR/$meow/ 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Unmounting work dirs" --ok-label "Continue" --programbox 20 70
		is_mounted=$(mountpoint -q $WORK_DIR/$meow/root-image && echo 1 || echo 0)
    	if [ $is_mounted -ne 1 ]; then
			sudo rm -r $WORK_DIR/$meow > /dev/null 2>&1
			sudo rm $WORK_DIR/*$meow > /dev/null 2>&1
			sudo rm -r $WORK_DIR/iso/$meow/$meow > /dev/null 2>&1
			sudo rm $WORK_DIR/iso/$meow/*.$meow.* > /dev/null 2>&1
			sudo rm -r $WORK_DIR/iso/$meow/boot/$meow > /dev/null 2>&1
			echo "sudo rm -r $WORK_DIR/iso/$meow/boot/$meow > /dev/null 2>&1"
		fi
	fi
}

create_build_env() {
	$DIALOG --clear --backtitle "$upper_title" --title "Create build env" --defaultno --yesno "Do you wish to skip to create iso" 10 30
	if [ $? -ne 0 ] ; then
		PWD=$(pwd)
		## copy root files

		## profile-sync-daemon
		sudo cp /etc/psd.conf ${ARCHLIVE}archlive/releng/root-image/etc/psd.conf
		
		## resolv.conf
		sudo cp /etc/resolv.conf ${ARCHLIVE}archlive/releng/root-image/etc/resolv.conf
		
		## resolv.conf.head
		sudo cp /etc/resolv.conf.head ${ARCHLIVE}archlive/releng/root-image/etc/resolv.conf.head
		
		## dnsmasq
		#sudo cp /etc/dnsmasq.conf ${ARCHLIVE}archlive/releng/root-image/etc/dnsmasq.conf
		
		## dhcpcd
		sudo cp /etc/dhcpcd.conf ${ARCHLIVE}archlive/releng/root-image/etc/dhcpcd.conf
		
		## nano config
		sudo mkdir -p ${ARCHLIVE}archlive/releng/root-image/usr/share/nano
		sudo cp /usr/share/nano/pkgbuild.nanorc ${ARCHLIVE}archlive/releng/root-image/usr/share/nano/pkgbuild.nanorc
		
		## e17 backgrounds
		sudo cp /usr/share/enlightenment/data/backgrounds/mooOS* ${ARCHLIVE}archlive/releng/root-image/usr/share/enlightenment/data/backgrounds
		
		## tor config
		sudo mkdir -p ${ARCHLIVE}archlive/releng/root-image/etc/tor
		sudo cp /etc/tor/torrc ${ARCHLIVE}archlive/releng/root-image/etc/tor/torrc
		
		## privoxy config
		sudo mkdir -p ${ARCHLIVE}archlive/releng/root-image/etc/privoxy
		sudo cp /etc/privoxy/config ${ARCHLIVE}archlive/releng/root-image/etc/privoxy/config
		sudo cp /etc/privoxy/user.action ${ARCHLIVE}archlive/releng/root-image/etc/privoxy/user.action
		sudo mkdir -p ${ARCHLIVE}archlive/releng/root-image/etc/conf.d
		sudo cp /etc/conf.d/privoxy-blacklist ${ARCHLIVE}archlive/releng/root-image/etc/conf.d/privoxy-blacklist
		sudo chown privoxy:privoxy ${ARCHLIVE}archlive/releng/root-image/etc/privoxy/config
		sudo chown privoxy:privoxy ${ARCHLIVE}archlive/releng/root-image/etc/privoxy/user.action

		#sudo sh -c "echo 'forward-socks5 / localhost:9050 .' > ${ARCHLIVE}archlive/releng/root-image/etc/privoxy/config"
		
		## dansguardian config
		sudo mkdir -p ${ARCHLIVE}archlive/releng/root-image/etc/dansguardian
		sudo cp /etc/dansguardian/dansguardian.conf ${ARCHLIVE}archlive/releng/root-image/etc/dansguardian/dansguardian.conf
		
		## squid config
		#sudo mkdir -p ${ARCHLIVE}archlive/releng/root-image/etc/squid
		#sudo cp /etc/squid/squid.conf ${ARCHLIVE}archlive/releng/root-image/etc/squid/squid.conf

		## TODO
		#mv /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.bak
		#sudo cp ${dev_directory}etc/httpd.conf /etc/httpd/conf/httpd.conf
		#sudo cp ${dev_directory}etc/httpd-phpmyadmin.conf /etc/httpd/conf/extra/httpd-phpmyadmin.conf
		#mv /etc/php/php.ini /etc/php/php.ini.bak
		#sudo cp ${dev_directory}etc/php.ini /etc/php/php.ini

			## as above but root
		sudo mkdir -p ${ARCHLIVE}archlive/releng/root-image/root/.config/sublime-text-3/Packages/User
		sudo mkdir -p ${ARCHLIVE}archlive/releng/root-image/root/.config/sublime-text-3/Packages/Theme\ -\ Nil
		sudo cp -r ${MOO_HOME}.config/sublime-text-3/Packages/Theme\ -\ Nil/* ${ARCHLIVE}archlive/releng/root-image/root/.config/sublime-text-3/Packages/Theme\ -\ Nil/
		sudo cp ${MOO_HOME}.config/sublime-text-3/Packages/User/Preferences.sublime-settings ${ARCHLIVE}archlive/releng/root-image/root/.config/sublime-text-3/Packages/User/Preferences.sublime-settings
		
		## mooOS icon
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-16.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/HighContrast/16x16/apps/mooOS.png
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-256.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/HighContrast/256x256/apps/mooOS.png
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-32.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/HighContrast/32x32/apps/mooOS.png
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-48.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/HighContrast/48x48/apps/mooOS.png
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-16.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/gnome/16x16/apps/mooOS.png
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-256.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/gnome/256x256/apps/mooOS.png
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-32.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/gnome/32x32/apps/mooOS.png
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-48.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/gnome/48x48/apps/mooOS.png
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-128.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/hicolor/128x128/apps/mooOS.png
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-16.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/hicolor/16x16/apps/mooOS.png
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-256.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/hicolor/256x256/apps/mooOS.png
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-32.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/hicolor/32x32/apps/mooOS.png
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-48.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/hicolor/48x48/apps/mooOS.png
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-128.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/128x128/apps/mooOS.png
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-16.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/16x16/apps/mooOS.png
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-256.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/256x256/apps/mooOS.png
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-32.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/32x32/apps/mooOS.png
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-48.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/48x48/apps/mooOS.png
		
		sudo mkdir -p ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/Numix/128x128/apps
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-128.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/Numix/128x128/apps/mooOS.png
		sudo mkdir -p ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/Numix/16x16/apps
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-16.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/Numix/16x16/apps/mooOS.png
		sudo mkdir -p ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/Numix/256x256/apps
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-256.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/Numix/256x256/apps/mooOS.png
		sudo mkdir -p ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/Numix/32x32/apps
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-32.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/Numix/32x32/apps/mooOS.png
		sudo mkdir -p ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/Numix/48x48/apps
		sudo cp ${MOO_TOOLS_PATH}images/mooOS-48.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/Numix/48x48/apps/mooOS.png
		
		## sublime
		sudo cp ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/128x128/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/Numix/apps/sublime-text.png
		sudo cp ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/16x16/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/Numix/16x16/apps/sublime-text.png
		sudo cp ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/256x256/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/Numix/256x256/apps/sublime-text.png
		sudo cp ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/32x32/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/Numix/32x32/apps/sublime-text.png
		sudo cp ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/oxygen/48x48/apps/sublime-text.png ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/Numix/48x48/apps/sublime-text.png

		## create moo-skel (/etc/skel/)
		## copy over pentadactyl files
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.pentadactyl/colors
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.pentadactyl/plugins
		cp -r ${MOO_HOME}.pentadactyl/colors/* ${MOO_HOME}github/moo-skel/skel/.pentadactyl/colors
		cp -r ${MOO_HOME}.pentadactyl/plugins/* ${MOO_HOME}github/moo-skel/skel/.pentadactyl/plugins
		
		## copy over rss reader files
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.canto-ng
		cp ${MOO_HOME}.canto-ng/conf ${MOO_HOME}github/moo-skel/skel/.canto-ng/conf
		
		#TODO
		## copy over firefox files
		#rm -rf ${MOO_HOME}github/moo-skel/skel/.mozilla/firefox/qrtww0pl.Default-User
		#cp -r ${MOO_HOME}.mozilla/firefox/qrtww0pl.Default-User ${MOO_HOME}github/moo-skel/skel/.mozilla/firefox/
		
		## copy over ~/.local files
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.local/applications
		cp ${MOO_HOME}.local/applications/defaults.list ${MOO_HOME}github/moo-skel/skel/.local/applications/defaults.list

		## copy over ~/.* (dotfiles)
		cp ${MOO_HOME}.Xdefaults ${MOO_HOME}github/moo-skel/skel/.Xdefaults
		#cp ${MOO_HOME}.xinitrc ${MOO_HOME}github/moo-skel/skel/.xinitrc
		cp ${MOO_HOME}.zshrc ${MOO_HOME}github/moo-skel/skel/.zshrc
		cp ${MOO_HOME}.gtkrc-2.0 ${MOO_HOME}github/moo-skel/skel/.gtkrc-2.0
		cp ${MOO_HOME}.nanorc ${MOO_HOME}github/moo-skel/skel/.nanorc
		cp ${MOO_HOME}.pentadactylrc ${MOO_HOME}github/moo-skel/skel/.pentadactylrc
		cp ${MOO_HOME}.dialogrc ${MOO_HOME}github/moo-skel/skel/.dialogrc
		cp ${MOO_HOME}.wgetrc ${MOO_HOME}github/moo-skel/skel/.wgetrc
		cp ${MOO_HOME}.curlrc ${MOO_HOME}github/moo-skel/skel/.curlrc
		
		## copy over ~/.themes
		#mkdir -p ${MOO_HOME}github/moo-skel/skel/.themes/Black
		#cp -r ${MOO_HOME}.themes/Black/* ${MOO_HOME}github/moo-skel/skel/.themes/Black
		
		## copy over ~/.fonts
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.fonts
		cp -r ${MOO_HOME}.fonts/* ${MOO_HOME}github/moo-skel/skel/.fonts
		
		## copy over kde files
		mkdir -p  ${MOO_HOME}github/moo-skel/skel/.kde4/share/apps/color-schemes
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.kde4/share/apps/kdenlive
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.kde4/share/apps/dolphin/view_properties/global
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.kde4/share/config
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.kde4/share/kde4/services/ServiceMenus
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.kde4/share/apps/konsole
		cp -r ${MOO_HOME}.kde4/share/apps/color-schemes/* ${MOO_HOME}github/moo-skel/skel/.kde4/share/apps/color-schemes
		#cp ${MOO_HOME}.kde4/share/apps/kdenlive/kdenliveui.rc ${MOO_HOME}github/moo-skel/skel/.kde4/share/apps/kdenlive/kdenliveui.rc
		#cp ${MOO_TOOLS_PATH}misc/kdenliverc ${MOO_HOME}github/moo-skel/skel/.kde4/share/config/kdenliverc
		cp ${MOO_TOOLS_PATH}misc/..directory ${MOO_HOME}github/moo-skel/skel/.kde4/share/apps/dolphin/view_properties/global/.directory
		cp ${MOO_HOME}.kde4/share/config/startupconfig ${MOO_HOME}github/moo-skel/skel/.kde4/share/config/startupconfig
		cp ${MOO_HOME}.kde4/share/config/konsolerc ${MOO_HOME}github/moo-skel/skel/.kde4/share/config/konsolerc
		cp ${MOO_HOME}.kde4/share/config/kservicemenurc ${MOO_HOME}github/moo-skel/skel/.kde4/share/config/kservicemenurc
		cp -r ${MOO_HOME}.kde4/share/kde4/services/ServiceMenus/* ${MOO_HOME}github/moo-skel/skel/.kde4/share/kde4/services/ServiceMenus
		cp -r ${MOO_HOME}.kde4/share/apps/konsole/* ${MOO_HOME}github/moo-skel/skel/.kde4/share/apps/konsole
		cp ${MOO_HOME}.kde4/share/config/dolphinrc ${MOO_HOME}github/moo-skel/skel/.kde4/share/config/dolphinrc
		cp ${MOO_HOME}.kde4/share/apps/dolphin/dolphinui.rc ${MOO_HOME}github/moo-skel/skel/.kde4/share/apps/dolphin/dolphinui.rc
		cp ${MOO_HOME}.kde4/share/config/gtkrc ${MOO_HOME}github/moo-skel/skel/.kde4/share/config/gtkrc
		cp ${MOO_HOME}.kde4/share/config/kcmdisplayrc ${MOO_HOME}github/moo-skel/skel/.kde4/share/config/kcmdisplayrc
		cp ${MOO_HOME}.kde4/share/config/gtkrc-2.0 ${MOO_HOME}github/moo-skel/skel/.kde4/share/config/gtkrc-2.0
		
		## copy over ~/.gnupg
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.gnupg
		cp ${MOO_HOME}.gnupg/gpg-agent.conf ${MOO_HOME}github/moo-skel/skel/.gnupg/gpg-agent.conf
		cp ${MOO_HOME}.gnupg/gpg.conf ${MOO_HOME}github/moo-skel/skel/.gnupg/gpg.conf

		## copy over transmission file
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.config/transmission-daemon
		cp ${MOO_TOOLS_PATH}misc/settings.json ${MOO_HOME}github/moo-skel/skel/.config/transmission-daemon/settings.json
		
		## copy over key-mon config
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.config/key-mon
		cp ${MOO_HOME}.config/key-mon/config ${MOO_HOME}github/moo-skel/skel/.config/key-mon/config
		
		## copy lxtask config
		cp ${MOO_HOME}.config/lxtask.conf ${MOO_HOME}github/moo-skel/skel/.config/lxtask.conf

		## copy Trolltech config
		cp ${MOO_HOME}.config/Trolltech.conf ${MOO_HOME}github/moo-skel/skel/.config/Trolltech.conf
		
		## copy pavucontrol config
		#cp ${MOO_HOME}.config/pavucontrol.ini ${MOO_HOME}github/moo-skel/skel/.config/pavucontrol.ini
		
		## copy over mocp file
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.moc
		cp ${MOO_HOME}.moc/config ${MOO_HOME}github/moo-skel/skel/.moc/config
		
		## copy htop file
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.config/htop
		cp ${MOO_HOME}.config/htop/htoprc ${MOO_HOME}github/moo-skel/skel/.config/htop/htoprc
		
		## copy sublime text 3 files
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.config/sublime-text-3/Packages/User
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.config/sublime-text-3/Packages/Theme\ -\ Nil
		cp -r ${MOO_HOME}.config/sublime-text-3/Packages/Theme\ -\ Nil/* ${MOO_HOME}github/moo-skel/skel/.config/sublime-text-3/Packages/Theme\ -\ Nil/
		cp ${MOO_HOME}.config/sublime-text-3/Packages/User/Preferences.sublime-settings ${MOO_HOME}github/moo-skel/skel/.config/sublime-text-3/Packages/User/Preferences.sublime-settings
		
		## copy vlc files
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.config/vlc
		cp ${MOO_TOOLS_PATH}misc/vlc-qt-interface.conf ${MOO_HOME}github/moo-skel/skel/.config/vlc/vlc-qt-interface.conf
		cp ${MOO_HOME}.config/vlc/vlcrc ${MOO_HOME}github/moo-skel/skel/.config/vlc/vlcrc
		
		## copy over window manager files
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.e/e/applications
		#mkdir -p ${MOO_HOME}github/moo-skel/skel/.e/e/backgrounds
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.e/e/config
		#rm -r ${MOO_HOME}github/moo-skel/skel/.e/e/themes
		#mkdir -p ${MOO_HOME}github/moo-skel/skel/.e/e/images
		cp -r ${MOO_HOME}.e/e/applications/* ${MOO_HOME}github/moo-skel/skel/.e/e/applications
		#cp -r ${MOO_HOME}.e/e/backgrounds/* ${MOO_HOME}github/moo-skel/skel/.e/e/backgrounds
		cp -r ${MOO_HOME}.e/e/config/* ${MOO_HOME}github/moo-skel/skel/.e/e/config
		#cp -r ${MOO_HOME}.e/e/themes/* ${MOO_HOME}github/moo-skel/skel/.e/e/themes
		#cp ${MOO_HOME}.e/e/images/tw_cache_images.eet ${MOO_HOME}github/moo-skel/skel/.e/e/images/tw_cache_images.eet
		rm ${MOO_HOME}github/moo-skel/skel/.e/e/config/standard/module.everything.cache.*
		rm ${MOO_HOME}github/moo-skel/skel/.e/e/config/standard/exehist.*
		rm ${MOO_HOME}github/moo-skel/skel/.e/e/config/standard/evry_exebuf_cache.*
		rm ${MOO_HOME}github/moo-skel/skel/.e/e/config/standard/module.forecasts.*
		#mkdir -p ${ARCHLIVE}archlive/releng/root-image/usr/share/enlightenment/data/themes
		#cp -r /usr/share/enlightenment/data/themes/* ${ARCHLIVE}archlive/releng/root-image/usr/share/enlightenment/data/themes

		## patch config files for username
		cd ${MOO_HOME}github/moo-skel/skel/.e/e/config/standard
		for NEW_FILE in e.*
		do
			EWW_FILE=${NEW_FILE/.cfg/.src}
			eet -d $NEW_FILE config $EWW_FILE
			sed -i "s/$MOO_USER/moo/g" $EWW_FILE
			rm $NEW_FILE
			eet -e $NEW_FILE config $EWW_FILE 1
			rm $EWW_FILE
		done
		cd "$PWD"

		## autostart/gnome
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.config/autostart
		cp -r ${MOO_HOME}.config/autostart/*.desktop ${MOO_HOME}github/moo-skel/skel/.config/autostart/
	
		## compiz/unity
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.config/dconf
		cp -r ${MOO_HOME}.config/dconf/user ${MOO_HOME}github/moo-skel/skel/.config/dconf/user
	
		## gtk3
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.config/gtk-3.0
		cp -r ${MOO_HOME}.config/gtk-3.0/settings.ini ${MOO_HOME}github/moo-skel/skel/.config/gtk-3.0/settings.ini
		cp -r ${MOO_HOME}.config/gtk-3.0/gtk.css ${MOO_HOME}github/moo-skel/skel/.config/gtk-3.0/gtk.css

		## nitrogen
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.config/nitrogen
		cp -r ${MOO_HOME}.config/nitrogen/* ${MOO_HOME}github/moo-skel/skel/.config/nitrogen/

		## terminology
		mkdir -p ${MOO_HOME}github/moo-skel/skel/.config/terminology/config/standard
		cp -r ${MOO_HOME}.config/terminology/config/standard/base.cfg ${MOO_HOME}github/moo-skel/skel/.config/terminology/config/standard/base.cfg
		## patch config files for username
		cd  ${MOO_HOME}github/moo-skel/skel/.config/terminology/config/standard/
		eet -d base.cfg config base.src
		sed -i "s/$MOO_USER/moo/g" base.src
		rm base.cfg
		eet -e base.cfg config base.src 1
		rm base.src

		cd ${MOO_HOME}github/moo-skel
		git add .
		git commit -m "latest build pushed"
		git push origin master
		cd "$PWD"


		## root stuff
		## copy over kde files
		sudo mkdir -p  ${ARCHLIVE}archlive/releng/root-image/root/.kde4/share/apps
		sudo mkdir -p ${ARCHLIVE}archlive/releng/root-image/root/.kde4/share/apps/dolphin/view_properties/global
		sudo mkdir -p ${ARCHLIVE}archlive/releng/root-image/root/.kde4/share/config
		sudo cp -r /root/.kde4/share/apps/color-schemes ${ARCHLIVE}archlive/releng/root-image/root/.kde4/share/apps/
		sudo cp /root/.kde4/share/config/konsolerc ${ARCHLIVE}archlive/releng/root-image/root/.kde4/share/config/konsolerc
		sudo cp /root/.kde4/share/config/kservicemenurc ${ARCHLIVE}archlive/releng/root-image/root/.kde4/share/config/kservicemenurc
		sudo cp -r /root/.kde4/share/apps/konsole ${ARCHLIVE}archlive/releng/root-image/root/.kde4/share/apps/
		sudo cp /root/.kde4/share/config/dolphinrc ${ARCHLIVE}archlive/releng/root-image/root/.kde4/share/config/dolphinrc
		sudo cp /root/.kde4/share/apps/dolphin/dolphinui.rc ${ARCHLIVE}archlive/releng/root-image/root/.kde4/share/apps/dolphin/dolphinui.rc
		sudo cp /root/.kde4/share/config/gtkrc ${ARCHLIVE}archlive/releng/root-image/root/.kde4/share/config/gtkrc
		sudo cp /root/.kde4/share/config/kcmdisplayrc ${ARCHLIVE}archlive/releng/root-image/root/.kde4/share/config/kcmdisplayrc
		sudo cp /root/.kde4/share/config/gtkrc-2.0 ${ARCHLIVE}archlive/releng/root-image/root/.kde4/share/config/gtkrc-2.0

		sudo cp /root/.gtkrc-2.0 ${ARCHLIVE}archlive/releng/root-image/root/.gtkrc-2.0
		sudo cp /root/.nanorc ${ARCHLIVE}archlive/releng/root-image/root/.nanorc
		sudo cp /root/.dialogrc ${ARCHLIVE}archlive/releng/root-image/root/.dialogrc
		sudo cp /root/.wgetrc ${ARCHLIVE}archlive/releng/root-image/root/.wgetrc

		## copy Trolltech config
		sudo cp /root/.config/Trolltech.conf ${ARCHLIVE}archlive/releng/root-image/root/.config/Trolltech.conf

		## copy moonity branding
		#mkdir -p  ${ARCHLIVE}archlive/releng/root-image/usr/share/backgrounds
		#mkdir -p  ${ARCHLIVE}archlive/releng/root-image/usr/share/unity/icons
		#mkdir -p  ${ARCHLIVE}archlive/releng/root-image/usr/share/unity-greeter
		#cp /usr/share/moo-tools/images/launcher_bfb.png ${ARCHLIVE}archlive/releng/root-image/usr/share/unity/icons/launcher_bfb.png
		#cp /usr/share/moo-tools/images/ubuntu_badge.png ${ARCHLIVE}archlive/releng/root-image/usr/share/unity-greeter/ubuntu_badge.png
		#cp /usr/share/moo-tools/images/mooOS-48.png ${ARCHLIVE}archlive/releng/root-image/usr/share/unity-greeter/cof.png
		#cp /usr/share/moo-wallpapers/wallpaper48.png ${ARCHLIVE}archlive/releng/root-image/usr/share/backgrounds/warty-final-ubuntu.png

		#cp /usr/share/moo-tools/images/mooOS-128.png ${ARCHLIVE}archlive/releng/root-image/usr/share/unity-greeter/logo.png

		## clean up files content
		sed -i "s/$MOO_USER/moo/g" ${MOO_HOME}github/moo-skel/skel/.mozilla/firefox/qrtww0pl.Default-User/extensions.ini
		sed -i "s/$MOO_USER/moo/g" ${MOO_HOME}github/moo-skel/skel/.config/transmission-daemon/settings.json
		sed -i "s/$MOO_USER/moo/g" ${MOO_HOME}github/moo-skel/skel/.moc/config
		sed -i "s/$MOO_USER/moo/g" ${MOO_HOME}github/moo-skel/skel/.kde4/share/config/dolphinrc
		sed -i "s/$MOO_USER/moo/g" ${MOO_HOME}github/moo-skel/psd.conf
		sed -i "s/$MOO_USER/moo/g" ${MOO_HOME}github/moo-skel/skel/.gtkrc-2.0
		sed -i "s/screenWidth: 1129/screenWidth: 729/g" ${MOO_HOME}github/moo-skel/skel/.Xdefaults
		sed -i "s/xOffset: 2123/xOffset: 123/g" ${MOO_HOME}github/moo-skel/skel/.Xdefaults
		
		sudo cp /usr/share/icons/Numix/index.theme ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/Numix/index.theme
		#sed -i "s/gnome,hicolor/Cheser,gnome,hicolor/g" ${ARCHLIVE}archlive/releng/root-image/usr/share/icons/Numix/index.theme

		## copy over hosts file (needed for LAN repos) TODO
		#cp /etc/hosts ${MOO_HOME}github/moo-skel/hosts

		## cleanup Github local repos
		rm -rf ${MOO_HOME}github/moo-skel/skel/Github
		## mooOS stuffs
	 	mkdir -p ${MOO_HOME}github/moo-skel/skel/Desktop
	 	mkdir -p ${MOO_HOME}github/moo-skel/skel/Downloads
	 	mkdir -p ${MOO_HOME}github/moo-skel/skel/Videos
	 	#mkdir -p ${MOO_HOME}github/moo-skel/skel/Dropbox
	 	mkdir -p ${MOO_HOME}github/moo-skel/skel/Github
	 	mkdir -p ${MOO_HOME}github/moo-skel/skel/Music
	 	mkdir -p ${MOO_HOME}github/moo-skel/skel/Pictures

	 	## copy home files and create default directories
	 	cp ${MOO_TOOLS_PATH}misc/Desktop.* ${MOO_HOME}github/moo-skel/skel/Desktop/
	 	cp ${MOO_TOOLS_PATH}misc/Downloads.* ${MOO_HOME}github/moo-skel/skel/Downloads/
	 	cp ${MOO_HOME}Videos/Videos.* ${MOO_HOME}github/moo-skel/skel/Videos/
	 	cp ${MOO_HOME}github/Github.* ${MOO_HOME}github/moo-skel/skel/Github/
	 	cp ${MOO_TOOLS_PATH}misc/Music.* ${MOO_HOME}github/moo-skel/skel/Music/
	 	cp ${MOO_TOOLS_PATH}misc/Pictures.* ${MOO_HOME}github/moo-skel/skel/Pictures/


		## deprecated method
		if [ -d "${ARCHLIVE}archlive/releng/work" ]; then
			sudo rm -r ${ARCHLIVE}archlive/releng/work
		fi

		## new method
		#if [ -d "$ISO_DIR" ]; then
		#	sudo rm -r "$ISO_DIR"
		#fi
		#if [ -d "$WORK_DIR" ]; then
		#	sudo rm -r "$WORK_DIR"
		#fi

		## create pacman.conf for build
		sudo mkdir -p "$WORK_DIR" && sudo cp ${MOO_TOOLS_PATH}misc/pacman.conf ${WORK_DIR}/pacman.conf

		sudo mkdir -p "${ARCHLIVE}archlive/releng/work"
		
		## create customize_root_image.sh
		sudo cp ${MOO_TOOLS_PATH}create_iso/customize_root_image.sh ${ARCHLIVE}archlive/releng/root-image/root/customize_root_image.sh
		
		sudo cp ${MOO_TOOLS_PATH}misc/pacman.conf ${ARCHLIVE}archlive/releng/work/pacman.conf
		
		## create pacman.conf for livecd
		sudo cp ${MOO_TOOLS_PATH}misc/pacman.conf ${ARCHLIVE}archlive/releng/work/pacman.conf
		sudo cp ${MOO_TOOLS_PATH}misc/pacman.conf ${ARCHLIVE}archlive/releng/root-image/etc/pacman.conf
		
		## create pacman.conf for livecd specific to architecture
		sudo cp ${MOO_TOOLS_PATH}misc/pacman-x86_64.conf ${ARCHLIVE}archlive/releng/root-image/etc/pacman-x86_64.conf
		sudo cp ${MOO_TOOLS_PATH}misc/pacman-i686.conf ${ARCHLIVE}archlive/releng/root-image/etc/pacman-i686.conf
		sudo cp ${MOO_TOOLS_PATH}misc/pacman-x86_64.conf ${ARCHLIVE}archlive/releng/work/pacman-x86_64.conf
		sudo cp ${MOO_TOOLS_PATH}misc/pacman-i686.conf ${ARCHLIVE}archlive/releng/work/pacman-i686.conf

		sudo cp ${MOO_TOOLS_PATH}packages.both ${ARCHLIVE}archlive/releng/packages.both
		sudo cp ${MOO_TOOLS_PATH}packages.extra ${ARCHLIVE}archlive/releng/packages.extra
		sudo cp ${MOO_TOOLS_PATH}packages-server.both ${ARCHLIVE}archlive/releng/packages-server.both
		sudo cp ${MOO_TOOLS_PATH}packages.i686 ${ARCHLIVE}archlive/releng/packages.i686
		sudo cp ${MOO_TOOLS_PATH}packages.x86_64 ${ARCHLIVE}archlive/releng/packages.x86_64

		## copy over boot splash screen and mooOS branding
		sudo cp ${ARCHLIVE}archlive/releng/syslinux/splash.png ${ARCHLIVE}archlive/releng/root-image/etc/grub.d/splash.png
		sudo convert ${ARCHLIVE}archlive/releng/root-image/etc/grub.d/splash.png ${ARCHLIVE}archlive/releng/root-image/etc/grub.d/splash.jpg > /dev/null 2>&1
	fi
		notify-send "Files copied!" -i "$MOO_ICON"
}

create_mooos_repos() {
	$DIALOG --clear --backtitle "$upper_title" --title "mooOS repos" --yesno "Create and cleanup mooOS repos?" 10 30
	if [ $? = 0 ] ; then
		## remove existing repos
		if [ -f "${ABS_BASE_DIR}mooOS-pkgs-32/mooOS.db.tar.gz" ]; then
			rm ${ABS_BASE_DIR}mooOS-pkgs-32/mooOS.db.tar.gz > /dev/null 2>&1
			rm ${ABS_BASE_DIR}mooOS-pkgs-64/mooOS.db.tar.gz > /dev/null 2>&1
		fi
		rm ${ABS_BASE_DIR}mooOS-pkgs-32/moo.db.tar.gz > /dev/null 2>&1
		rm ${ABS_BASE_DIR}mooOS-pkgs-64/moo.db.tar.gz > /dev/null 2>&1

		## hackity hack hack - clean up old git package caches
		#arches="32 64"
		#for mm in $arches
		#do
			# cd ${MOO_HOME}abs/mooOS-pkgs-$mm/
			# mv $(ls | grep "efl-git-1" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			# mv $(ls | grep "elementary-git-1" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			# mv $(ls | grep "elementary_test-git-1" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			# mv $(ls | grep "enlightenment-git-0" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			# mv $(ls | grep "evas_generic_loaders-git-1" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			# mv $(ls | grep "pulseaudio-mixer-cli-git" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			# mv $(ls | grep "pyradio-git" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			# mv $(ls | grep "steam-session-git" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			# mv $(ls | grep "terminology-git-0" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			# mv $(ls | grep "emotion_generic_players-git-1" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			# mv $(ls | grep "desksanity-git" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			# mv $(ls | grep "efx-git-1" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			# mv $(ls | grep "go-qml-git" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			# mv $(ls | grep "numix-icon-theme-git-0" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			# mv $(ls | grep "numix-circle-icon-theme-git-0" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			# mv $(ls | grep "urxvt-font-size-git" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			# mv $(ls | grep "youtube-viewer-git" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			# #mv $(ls | grep "vogl-git" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			# #mv $(ls | grep "voglperf-git" | sort -r | head -2) ${MOO_HOME}abs/staging_$mm/
			# rm ${MOO_HOME}abs/mooOS-pkgs-$mm/*-git* > /dev/null 2>&1
			# mv ${MOO_HOME}abs/staging_$mm/* ${MOO_HOME}abs/mooOS-pkgs-$mm/
			# cd "$PWD"
		#done

		#rm -f ${MOO_HOME}abs/i686/*-git* > /dev/null 2>&1
		#rm -f ${MOO_HOME}abs/x86_64/*-git* > /dev/null 2>&1

		## make RMS happy :D
		## unzip-libre unar spectrwm-libre sdl-libre rp-pppoe-libre p7zip-libre openexr-libre mplayer-libre mozilla-searchplugins mencoder-libre mcomix-libre mc-libre lirc-libre-utils kdeutils-ark-libre kdelibs-libre kdebase-runtime-libre iceweasel-libre gstreamer0.10-bad-libre-plugins gstreamer0.10-bad-libre gst-plugins-bad-libre ghostscript-libre cpupower-libre cdrkit-libre bitlbee-libre-nonprism audio-convert-libre

		# cd ~/github/newunity
		# git pull 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Git pull unity" --progressbox 20 70
		# cp ${MOO_TOOLS_PATH}misc/build-and-install.sh ~/github/newunity/build-and-install.sh
		# chmod +x ~/github/newunity/build-and-install.sh
		# for moo in ${ISO_ARCH}
		# do
		# 	sh ~/github/newunity/build-and-install.sh -e -a $moo 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Creating $moo unity packages" --progressbox 20 70
		# done

		# cd ~/github/newunity-extra
		# git pull 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Git pull unity-extra" --progressbox 20 70
		# cp ${MOO_TOOLS_PATH}misc/build-and-install-extra.sh ~/github/newunity-extra/build-and-install-extra.sh
		# chmod +x ~/github/newunity-extra/build-and-install-extra.sh
		# for moo in ${ISO_ARCH}
		# do
		# 	sh ~/github/newunity-extra/build-and-install-extra.sh -e -a $moo 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Creating $moo unity-extra packages" --progressbox 20 70
		# done
		# cd "$PWD"
		
		## create repo databases
		repo-add -k $GPGKEY ${ABS_BASE_DIR}mooOS-pkgs-32/moo.db.tar.gz ${ABS_BASE_DIR}mooOS-pkgs-32/*.pkg.tar.xz 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Creating i686 repository" --progressbox 20 70
		repo-add -k $GPGKEY ${ABS_BASE_DIR}mooOS-pkgs-64/moo.db.tar.gz ${ABS_BASE_DIR}mooOS-pkgs-64/*.pkg.tar.xz 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Creating x86_64 repository" --progressbox 20 70

		rm ${ABS_BASE_DIR}mooOS-pkgs-64/moo.db
		cp ${ABS_BASE_DIR}mooOS-pkgs-64/moo.db.tar.gz ${ABS_BASE_DIR}mooOS-pkgs-64/moo.db
		rm ${ABS_BASE_DIR}mooOS-pkgs-32/moo.db
		cp ${ABS_BASE_DIR}mooOS-pkgs-32/moo.db.tar.gz ${ABS_BASE_DIR}mooOS-pkgs-32/moo.db

		notify-send "Repos created!" -i "$MOO_ICON"

		## clean up stable repos
		## re-create repos local and remoteed 
		rsync -avzrcpPh --delete --stats ${REPO_BASE_DIR}/i686/ ${ABS_BASE_DIR}mooOS-pkgs-32-out-of-date 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Syncing old i686 repo" --progressbox 20 70
		rsync -avzrcpPh --delete --stats ${REPO_BASE_DIR}/x86_64/ ${ABS_BASE_DIR}mooOS-pkgs-64-out-of-date 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Syncing old x86_64 repo" --progressbox 20 70
		rsync -avzrcpPh --delete --stats ${ABS_BASE_DIR}mooOS-pkgs-32/ ${REPO_BASE_DIR}/i686 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Syncing current i686 repo" --progressbox 20 70
		rsync -avzrcpPh --delete --stats ${ABS_BASE_DIR}mooOS-pkgs-64/ ${REPO_BASE_DIR}/x86_64 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Syncing current x86_64 repo" --progressbox 20 70
		notify-send "Repos synced to local server!" -i "$MOO_ICON"
	fi
}

update_remote() {
	$DIALOG --clear --backtitle "$upper_title" --title "mooOS repos" --yesno "Sync remote mooOS repo (sourceforge)?" 10 30
	if [ $? = 0 ] ; then
		## include login credentials:
		if [ -f "$REPO_CREDS" ] ; then
			. $REPO_CREDS

			## rsync using vars defined in credentials, e.g.:
			#for i in {1..5}
			for i in $(eval echo {1..$_remote_count})
			do
				port=$(eval echo $(echo '${'_remote$i[1]'}'))
				flags=$(eval echo $(echo '${'_remote$i[4]'}'))
				src=$(eval echo $(echo '${'_remote$i[2]'}'))
				dest=$(eval echo $(echo '${'_remote$i[3]'}'))
				torsocks rsync -avzrcPh $flags -e "torsocks ssh -p $port" $src $dest 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Syncing remote repository" --progressbox 20 70 # -n, --dry-run perform a trial run with no changes made
				#torsocks rsync -avzrcPh $flags -e "torsocks ssh -p $port" $src $dest 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Syncing remote repository" --progressbox 20 70 # -n, --dry-run perform a trial run with no changes made
			done
			notify-send "Repos synced to remote server!" -i "$MOO_ICON"
		fi
	fi
	current_selection 5
}

sync_remote() {
	## sync .isos to local directory and remote server
	for mooos in ${ISO_ARCH}
	do
		rsync_iso_remote $mooos
	done
	current_selection 8
}

build_moo() {
		create_build_env
		## change to build directory and build iso
		for moo in ${ISO_ARCH}
		do
			$DIALOG --clear --backtitle "$upper_title" --title "mooOS" --yesno "Do you wish to make $moo iso?" 10 30
			if [ $? = 0 ] ; then
				umount_work_env $moo

				# $DIALOG --clear --backtitle "$upper_title" --title "mooOS" --yesno "Do you wish to copy $moo pkgs to iso?" 10 30
				# if [ $? = 0 ] ; then
			 #        ## copy packages to iso
			 #        rm -rf ${ARCHLIVE}archlive/releng/root-image/var/cache/moo/*
				# 	cp -r ${REPO_BASE_DIR}/$moo/ ${ARCHLIVE}archlive/releng/root-image/var/cache/moo/$moo
				# 	## end
				# fi

				sudo ${MOO_TOOLS_PATH}create_iso/build.sh -v -a "$moo" -o "$ISO_DIR" -w "$WORK_DIR" -N "$ISO_NAME" -V "$ISO_VERSION" -L "$ISO_LABEL" 2>&1 | $DIALOG --clear --backtitle "$upper_title" --title "Building $moo iso" --programbox 20 70
			fi

			$DIALOG --clear --backtitle "$upper_title" --title "Build complete" --msgbox "$moo iso build complete" 20 70
			umount_work_env $moo
		done
	current_selection 7
}

bump_moo() {
	$DIALOG --clear --backtitle "$upper_title" --title "mooOS version" --yesno "Increase moo version number? Current: $MOO_VERSION" 10 30
	if [ $? = 0 ] ; then
		MOO_NEW_VERSION=$(( $(echo $MOO_VERSION) + 1 ))
		sudo sed -i "s/MOO_VERSION=$MOO_VERSION/MOO_VERSION=$MOO_NEW_VERSION/g" /etc/moo.cfg
		$DIALOG --clear --backtitle "$upper_title" --title "mooOS version" --msgbox "Old version: 0.$MOO_VERSION\nCurrent version: 0.$MOO_NEW_VERSION" 20 70
	fi
	current_selection 6
}

######### EXECUTE SCRIPT START #########
## check repos are up
#check_repos "$REPO_LOCAL" 0  # 1/0 use torsocks
check_repos "$REPO_REMOTE" 1 # 1/0 use torsocks

# utility execution
while true
do
    mkmoo_menu
done

notify-send "User script complete" -i "$MOO_ICON"

exit 0
